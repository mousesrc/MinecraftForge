--- ../src-base/minecraft/net/minecraft/server/management/PlayerList.java
+++ ../src-work/minecraft/net/minecraft/server/management/PlayerList.java
@@ -1,5 +1,7 @@
 package net.minecraft.server.management;
 
+import com.google.common.base.Predicate;
+import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -52,6 +54,7 @@
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraft.util.text.TextFormatting;
 import net.minecraft.world.GameType;
+import net.minecraft.world.Teleporter;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.border.IBorderListener;
@@ -60,166 +63,193 @@
 import net.minecraft.world.demo.DemoWorldManager;
 import net.minecraft.world.storage.IPlayerFileData;
 import net.minecraft.world.storage.WorldInfo;
+import net.minecraftforge.common.DimensionManager;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.Server;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.player.PlayerRespawnEvent;
+import org.bukkit.event.player.PlayerTeleportEvent;
 
 public abstract class PlayerList
 {
-    public static final File field_152613_a = new File("banned-players.json");
-    public static final File field_152614_b = new File("banned-ips.json");
-    public static final File field_152615_c = new File("ops.json");
-    public static final File field_152616_d = new File("whitelist.json");
-    private static final Logger field_148546_d = LogManager.getLogger();
-    private static final SimpleDateFormat field_72403_e = new SimpleDateFormat("yyyy-MM-dd \'at\' HH:mm:ss z");
-    private final MinecraftServer field_72400_f;
-    public final List<EntityPlayerMP> field_72404_b = Lists.<EntityPlayerMP>newArrayList();
-    private final Map<UUID, EntityPlayerMP> field_177454_f = Maps.<UUID, EntityPlayerMP>newHashMap();
-    private final UserListBans field_72401_g;
-    private final UserListIPBans field_72413_h;
-    private final UserListOps field_72414_i;
-    private final UserListWhitelist field_72411_j;
-    private final Map<UUID, StatisticsManagerServer> field_148547_k;
-    public IPlayerFileData field_72412_k;
-    private boolean field_72409_l;
-    protected int field_72405_c;
-    private int field_72402_d;
-    private GameType field_72410_m;
-    private boolean field_72407_n;
-    private int field_72408_o;
+    public static final File FILE_PLAYERBANS = new File("banned-players.json");
+    public static final File FILE_IPBANS = new File("banned-ips.json");
+    public static final File FILE_OPS = new File("ops.json");
+    public static final File FILE_WHITELIST = new File("whitelist.json");
+    private static final Logger LOG = LogManager.getLogger();
+    private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd \'at\' HH:mm:ss z");
+    private final MinecraftServer mcServer;
+    public final List<EntityPlayerMP> playerEntityList = Lists.<EntityPlayerMP>newArrayList();
+    private final Map<UUID, EntityPlayerMP> uuidToPlayerMap = Maps.<UUID, EntityPlayerMP>newHashMap();
+    private final UserListBans bannedPlayers;
+    private final UserListIPBans bannedIPs;
+    private final UserListOps ops;
+    private final UserListWhitelist whiteListedPlayers;
+    private final Map<UUID, StatisticsManagerServer> playerStatFiles;
+    public IPlayerFileData playerNBTManagerObj;
+    private boolean whiteListEnforced;
+    protected int maxPlayers;
+    private int viewDistance;
+    private GameType gameType;
+    private boolean commandsAllowedForAll;
+    private int playerPingIndex;
 
-    public PlayerList(MinecraftServer p_i1500_1_)
-    {
-        this.field_72401_g = new UserListBans(field_152613_a);
-        this.field_72413_h = new UserListIPBans(field_152614_b);
-        this.field_72414_i = new UserListOps(field_152615_c);
-        this.field_72411_j = new UserListWhitelist(field_152616_d);
-        this.field_148547_k = Maps.<UUID, StatisticsManagerServer>newHashMap();
-        this.field_72400_f = p_i1500_1_;
-        this.field_72401_g.func_152686_a(false);
-        this.field_72413_h.func_152686_a(false);
-        this.field_72405_c = 8;
+    // CraftBukkit start
+    private CraftServer cserver;
+
+    public PlayerList(MinecraftServer minecraftserver) {
+        this.cserver = minecraftserver.server = new CraftServer(minecraftserver, this);
+        minecraftserver.console = org.bukkit.craftbukkit.command.ColouredConsoleSender.getInstance();
+        minecraftserver.reader.addCompleter(new org.bukkit.craftbukkit.command.ConsoleCommandCompleter(minecraftserver.server));
+        // CraftBukkit end
+        this.bannedPlayers = new UserListBans(FILE_PLAYERBANS);
+        this.bannedIPs = new UserListIPBans(FILE_IPBANS);
+        this.ops = new UserListOps(FILE_OPS);
+        this.whiteListedPlayers = new UserListWhitelist(FILE_WHITELIST);
+        this.playerStatFiles = Maps.<UUID, StatisticsManagerServer>newHashMap();
+        this.mcServer = minecraftserver;
+        this.bannedPlayers.setLanServer(false);
+        this.bannedIPs.setLanServer(false);
+        this.maxPlayers = 8;
     }
 
-    public void func_72355_a(NetworkManager p_72355_1_, EntityPlayerMP p_72355_2_)
+    public void initializeConnectionToPlayer(NetworkManager netManager, EntityPlayerMP playerIn, NetHandlerPlayServer nethandlerplayserver)
     {
-        GameProfile gameprofile = p_72355_2_.func_146103_bH();
-        PlayerProfileCache playerprofilecache = this.field_72400_f.func_152358_ax();
-        GameProfile gameprofile1 = playerprofilecache.func_152652_a(gameprofile.getId());
+        GameProfile gameprofile = playerIn.getGameProfile();
+        PlayerProfileCache playerprofilecache = this.mcServer.getPlayerProfileCache();
+        GameProfile gameprofile1 = playerprofilecache.getProfileByUUID(gameprofile.getId());
         String s = gameprofile1 == null ? gameprofile.getName() : gameprofile1.getName();
-        playerprofilecache.func_152649_a(gameprofile);
-        NBTTagCompound nbttagcompound = this.func_72380_a(p_72355_2_);
-        p_72355_2_.func_70029_a(this.field_72400_f.func_71218_a(p_72355_2_.field_71093_bK));
-        p_72355_2_.field_71134_c.func_73080_a((WorldServer)p_72355_2_.field_70170_p);
+        playerprofilecache.addEntry(gameprofile);
+        NBTTagCompound nbttagcompound = this.readPlayerDataFromFile(playerIn);
+        playerIn.setWorld(this.mcServer.worldServerForDimension(playerIn.dimension));
+
+        World playerWorld = this.mcServer.worldServerForDimension(playerIn.dimension);
+        if (playerWorld == null)
+        {
+            playerIn.dimension = 0;
+            playerWorld = this.mcServer.worldServerForDimension(0);
+            BlockPos spawnPoint = playerWorld.provider.getRandomizedSpawnPoint();
+            playerIn.setPosition(spawnPoint.getX(), spawnPoint.getY(), spawnPoint.getZ());
+        }
+
+        playerIn.setWorld(playerWorld);
+        playerIn.interactionManager.setWorld((WorldServer)playerIn.world);
         String s1 = "local";
 
-        if (p_72355_1_.func_74430_c() != null)
+        if (netManager.getRemoteAddress() != null)
         {
-            s1 = p_72355_1_.func_74430_c().toString();
+            s1 = netManager.getRemoteAddress().toString();
         }
 
-        field_148546_d.info("{}[{}] logged in with entity id {} at ({}, {}, {})", new Object[] {p_72355_2_.func_70005_c_(), s1, Integer.valueOf(p_72355_2_.func_145782_y()), Double.valueOf(p_72355_2_.field_70165_t), Double.valueOf(p_72355_2_.field_70163_u), Double.valueOf(p_72355_2_.field_70161_v)});
-        WorldServer worldserver = this.field_72400_f.func_71218_a(p_72355_2_.field_71093_bK);
-        WorldInfo worldinfo = worldserver.func_72912_H();
-        this.func_72381_a(p_72355_2_, (EntityPlayerMP)null, worldserver);
-        NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.field_72400_f, p_72355_1_, p_72355_2_);
-        nethandlerplayserver.func_147359_a(new SPacketJoinGame(p_72355_2_.func_145782_y(), p_72355_2_.field_71134_c.func_73081_b(), worldinfo.func_76093_s(), worldserver.field_73011_w.func_186058_p().func_186068_a(), worldserver.func_175659_aa(), this.func_72352_l(), worldinfo.func_76067_t(), worldserver.func_82736_K().func_82766_b("reducedDebugInfo")));
-        nethandlerplayserver.func_147359_a(new SPacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).func_180714_a(this.func_72365_p().getServerModName())));
-        nethandlerplayserver.func_147359_a(new SPacketServerDifficulty(worldinfo.func_176130_y(), worldinfo.func_176123_z()));
-        nethandlerplayserver.func_147359_a(new SPacketPlayerAbilities(p_72355_2_.field_71075_bZ));
-        nethandlerplayserver.func_147359_a(new SPacketHeldItemChange(p_72355_2_.field_71071_by.field_70461_c));
-        this.func_187243_f(p_72355_2_);
-        p_72355_2_.func_147099_x().func_150877_d();
-        p_72355_2_.func_147099_x().func_150884_b(p_72355_2_);
-        this.func_96456_a((ServerScoreboard)worldserver.func_96441_U(), p_72355_2_);
-        this.field_72400_f.func_147132_au();
+        LOG.info("{}[{}] logged in with entity id {} at ({}, {}, {})", new Object[] {playerIn.getName(), s1, Integer.valueOf(playerIn.getEntityId()), Double.valueOf(playerIn.posX), Double.valueOf(playerIn.posY), Double.valueOf(playerIn.posZ)});
+        WorldServer worldserver = this.mcServer.worldServerForDimension(playerIn.dimension);
+        WorldInfo worldinfo = worldserver.getWorldInfo();
+        this.setPlayerGameTypeBasedOnOther(playerIn, (EntityPlayerMP)null, worldserver);
+        playerIn.connection = nethandlerplayserver;
+        nethandlerplayserver.sendPacket(new SPacketJoinGame(playerIn.getEntityId(), playerIn.interactionManager.getGameType(), worldinfo.isHardcoreModeEnabled(), worldserver.provider.getDimension(), worldserver.getDifficulty(), this.getMaxPlayers(), worldinfo.getTerrainType(), worldserver.getGameRules().getBoolean("reducedDebugInfo")));
+        nethandlerplayserver.sendPacket(new SPacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).writeString(this.getServerInstance().getServerModName())));
+        nethandlerplayserver.sendPacket(new SPacketServerDifficulty(worldinfo.getDifficulty(), worldinfo.isDifficultyLocked()));
+        nethandlerplayserver.sendPacket(new SPacketPlayerAbilities(playerIn.capabilities));
+        nethandlerplayserver.sendPacket(new SPacketHeldItemChange(playerIn.inventory.currentItem));
+        this.updatePermissionLevel(playerIn);
+        playerIn.getStatFile().markAllDirty();
+        playerIn.getStatFile().sendAchievements(playerIn);
+        this.sendScoreboard((ServerScoreboard)worldserver.getScoreboard(), playerIn);
+        this.mcServer.refreshStatusNextTick();
         TextComponentTranslation textcomponenttranslation;
 
-        if (p_72355_2_.func_70005_c_().equalsIgnoreCase(s))
+        if (playerIn.getName().equalsIgnoreCase(s))
         {
-            textcomponenttranslation = new TextComponentTranslation("multiplayer.player.joined", new Object[] {p_72355_2_.func_145748_c_()});
+            textcomponenttranslation = new TextComponentTranslation("multiplayer.player.joined", new Object[] {playerIn.getDisplayName()});
         }
         else
         {
-            textcomponenttranslation = new TextComponentTranslation("multiplayer.player.joined.renamed", new Object[] {p_72355_2_.func_145748_c_(), s});
+            textcomponenttranslation = new TextComponentTranslation("multiplayer.player.joined.renamed", new Object[] {playerIn.getDisplayName(), s});
         }
 
-        textcomponenttranslation.func_150256_b().func_150238_a(TextFormatting.YELLOW);
-        this.func_148539_a(textcomponenttranslation);
-        this.func_72377_c(p_72355_2_);
-        nethandlerplayserver.func_147364_a(p_72355_2_.field_70165_t, p_72355_2_.field_70163_u, p_72355_2_.field_70161_v, p_72355_2_.field_70177_z, p_72355_2_.field_70125_A);
-        this.func_72354_b(p_72355_2_, worldserver);
+        textcomponenttranslation.getStyle().setColor(TextFormatting.YELLOW);
+        this.sendMessage(textcomponenttranslation);
+        this.playerLoggedIn(playerIn);
+        nethandlerplayserver.setPlayerLocation(playerIn.posX, playerIn.posY, playerIn.posZ, playerIn.rotationYaw, playerIn.rotationPitch);
+        this.updateTimeAndWeatherForPlayer(playerIn, worldserver);
 
-        if (!this.field_72400_f.func_147133_T().isEmpty())
+        if (!this.mcServer.getResourcePackUrl().isEmpty())
         {
-            p_72355_2_.func_175397_a(this.field_72400_f.func_147133_T(), this.field_72400_f.func_175581_ab());
+            playerIn.loadResourcePack(this.mcServer.getResourcePackUrl(), this.mcServer.getResourcePackHash());
         }
 
-        for (PotionEffect potioneffect : p_72355_2_.func_70651_bq())
+        for (PotionEffect potioneffect : playerIn.getActivePotionEffects())
         {
-            nethandlerplayserver.func_147359_a(new SPacketEntityEffect(p_72355_2_.func_145782_y(), potioneffect));
+            nethandlerplayserver.sendPacket(new SPacketEntityEffect(playerIn.getEntityId(), potioneffect));
         }
 
-        if (nbttagcompound != null && nbttagcompound.func_150297_b("RootVehicle", 10))
+        if (nbttagcompound != null && nbttagcompound.hasKey("RootVehicle", 10))
         {
-            NBTTagCompound nbttagcompound1 = nbttagcompound.func_74775_l("RootVehicle");
-            Entity entity1 = AnvilChunkLoader.func_186051_a(nbttagcompound1.func_74775_l("Entity"), worldserver, true);
+            NBTTagCompound nbttagcompound1 = nbttagcompound.getCompoundTag("RootVehicle");
+            Entity entity1 = AnvilChunkLoader.readWorldEntity(nbttagcompound1.getCompoundTag("Entity"), worldserver, true);
 
             if (entity1 != null)
             {
-                UUID uuid = nbttagcompound1.func_186857_a("Attach");
+                UUID uuid = nbttagcompound1.getUniqueId("Attach");
 
-                if (entity1.func_110124_au().equals(uuid))
+                if (entity1.getUniqueID().equals(uuid))
                 {
-                    p_72355_2_.func_184205_a(entity1, true);
+                    playerIn.startRiding(entity1, true);
                 }
                 else
                 {
-                    for (Entity entity : entity1.func_184182_bu())
+                    for (Entity entity : entity1.getRecursivePassengers())
                     {
-                        if (entity.func_110124_au().equals(uuid))
+                        if (entity.getUniqueID().equals(uuid))
                         {
-                            p_72355_2_.func_184205_a(entity, true);
+                            playerIn.startRiding(entity, true);
                             break;
                         }
                     }
                 }
 
-                if (!p_72355_2_.func_184218_aH())
+                if (!playerIn.isRiding())
                 {
-                    field_148546_d.warn("Couldn\'t reattach entity to player");
-                    worldserver.func_72973_f(entity1);
+                    LOG.warn("Couldn\'t reattach entity to player");
+                    worldserver.removeEntityDangerously(entity1);
 
-                    for (Entity entity2 : entity1.func_184182_bu())
+                    for (Entity entity2 : entity1.getRecursivePassengers())
                     {
-                        worldserver.func_72973_f(entity2);
+                        worldserver.removeEntityDangerously(entity2);
                     }
                 }
             }
         }
 
-        p_72355_2_.func_71116_b();
+        playerIn.addSelfToInternalCraftingInventory();
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerLoggedIn(playerIn);
     }
 
-    public void func_96456_a(ServerScoreboard p_96456_1_, EntityPlayerMP p_96456_2_)
+    public void sendScoreboard(ServerScoreboard scoreboardIn, EntityPlayerMP playerIn)
     {
         Set<ScoreObjective> set = Sets.<ScoreObjective>newHashSet();
 
-        for (ScorePlayerTeam scoreplayerteam : p_96456_1_.func_96525_g())
+        for (ScorePlayerTeam scoreplayerteam : scoreboardIn.getTeams())
         {
-            p_96456_2_.field_71135_a.func_147359_a(new SPacketTeams(scoreplayerteam, 0));
+            playerIn.connection.sendPacket(new SPacketTeams(scoreplayerteam, 0));
         }
 
         for (int i = 0; i < 19; ++i)
         {
-            ScoreObjective scoreobjective = p_96456_1_.func_96539_a(i);
+            ScoreObjective scoreobjective = scoreboardIn.getObjectiveInDisplaySlot(i);
 
             if (scoreobjective != null && !set.contains(scoreobjective))
             {
-                for (Packet<?> packet : p_96456_1_.func_96550_d(scoreobjective))
+                for (Packet<?> packet : scoreboardIn.getCreatePackets(scoreobjective))
                 {
-                    p_96456_2_.field_71135_a.func_147359_a(packet);
+                    playerIn.connection.sendPacket(packet);
                 }
 
                 set.add(scoreobjective);
@@ -227,202 +257,222 @@
         }
     }
 
-    public void func_72364_a(WorldServer[] p_72364_1_)
+    public void setPlayerManager(WorldServer[] worldServers)
     {
-        this.field_72412_k = p_72364_1_[0].func_72860_G().func_75756_e();
-        p_72364_1_[0].func_175723_af().func_177737_a(new IBorderListener()
+        this.playerNBTManagerObj = worldServers[0].getSaveHandler().getPlayerNBTManager();
+        worldServers[0].getWorldBorder().addListener(new IBorderListener()
         {
-            public void func_177694_a(WorldBorder p_177694_1_, double p_177694_2_)
+            public void onSizeChanged(WorldBorder border, double newSize)
             {
-                PlayerList.this.func_148540_a(new SPacketWorldBorder(p_177694_1_, SPacketWorldBorder.Action.SET_SIZE));
+                PlayerList.this.sendPacketToAllPlayers(new SPacketWorldBorder(border, SPacketWorldBorder.Action.SET_SIZE));
             }
-            public void func_177692_a(WorldBorder p_177692_1_, double p_177692_2_, double p_177692_4_, long p_177692_6_)
+            public void onTransitionStarted(WorldBorder border, double oldSize, double newSize, long time)
             {
-                PlayerList.this.func_148540_a(new SPacketWorldBorder(p_177692_1_, SPacketWorldBorder.Action.LERP_SIZE));
+                PlayerList.this.sendPacketToAllPlayers(new SPacketWorldBorder(border, SPacketWorldBorder.Action.LERP_SIZE));
             }
-            public void func_177693_a(WorldBorder p_177693_1_, double p_177693_2_, double p_177693_4_)
+            public void onCenterChanged(WorldBorder border, double x, double z)
             {
-                PlayerList.this.func_148540_a(new SPacketWorldBorder(p_177693_1_, SPacketWorldBorder.Action.SET_CENTER));
+                PlayerList.this.sendPacketToAllPlayers(new SPacketWorldBorder(border, SPacketWorldBorder.Action.SET_CENTER));
             }
-            public void func_177691_a(WorldBorder p_177691_1_, int p_177691_2_)
+            public void onWarningTimeChanged(WorldBorder border, int newTime)
             {
-                PlayerList.this.func_148540_a(new SPacketWorldBorder(p_177691_1_, SPacketWorldBorder.Action.SET_WARNING_TIME));
+                PlayerList.this.sendPacketToAllPlayers(new SPacketWorldBorder(border, SPacketWorldBorder.Action.SET_WARNING_TIME));
             }
-            public void func_177690_b(WorldBorder p_177690_1_, int p_177690_2_)
+            public void onWarningDistanceChanged(WorldBorder border, int newDistance)
             {
-                PlayerList.this.func_148540_a(new SPacketWorldBorder(p_177690_1_, SPacketWorldBorder.Action.SET_WARNING_BLOCKS));
+                PlayerList.this.sendPacketToAllPlayers(new SPacketWorldBorder(border, SPacketWorldBorder.Action.SET_WARNING_BLOCKS));
             }
-            public void func_177696_b(WorldBorder p_177696_1_, double p_177696_2_)
+            public void onDamageAmountChanged(WorldBorder border, double newAmount)
             {
             }
-            public void func_177695_c(WorldBorder p_177695_1_, double p_177695_2_)
+            public void onDamageBufferChanged(WorldBorder border, double newSize)
             {
             }
         });
     }
 
-    public void func_72375_a(EntityPlayerMP p_72375_1_, WorldServer p_72375_2_)
+    public void preparePlayer(EntityPlayerMP playerIn, WorldServer worldIn)
     {
-        WorldServer worldserver = p_72375_1_.func_71121_q();
+        WorldServer worldserver = playerIn.getServerWorld();
 
-        if (p_72375_2_ != null)
+        if (worldIn != null)
         {
-            p_72375_2_.func_184164_w().func_72695_c(p_72375_1_);
+            worldIn.getPlayerChunkMap().removePlayer(playerIn);
         }
 
-        worldserver.func_184164_w().func_72683_a(p_72375_1_);
-        worldserver.func_72863_F().func_186025_d((int)p_72375_1_.field_70165_t >> 4, (int)p_72375_1_.field_70161_v >> 4);
+        worldserver.getPlayerChunkMap().addPlayer(playerIn);
+        worldserver.getChunkProvider().provideChunk((int)playerIn.posX >> 4, (int)playerIn.posZ >> 4);
     }
 
-    public int func_72372_a()
+    public int getEntityViewDistance()
     {
-        return PlayerChunkMap.func_72686_a(this.func_72395_o());
+        return PlayerChunkMap.getFurthestViewableBlock(this.getViewDistance());
     }
 
     @Nullable
-    public NBTTagCompound func_72380_a(EntityPlayerMP p_72380_1_)
+    public NBTTagCompound readPlayerDataFromFile(EntityPlayerMP playerIn)
     {
-        NBTTagCompound nbttagcompound = this.field_72400_f.field_71305_c[0].func_72912_H().func_76072_h();
+        NBTTagCompound nbttagcompound = this.mcServer.worlds[0].getWorldInfo().getPlayerNBTTagCompound();
         NBTTagCompound nbttagcompound1;
 
-        if (p_72380_1_.func_70005_c_().equals(this.field_72400_f.func_71214_G()) && nbttagcompound != null)
+        if (playerIn.getName().equals(this.mcServer.getServerOwner()) && nbttagcompound != null)
         {
-            nbttagcompound1 = this.field_72400_f.func_184110_aI().func_188257_a(FixTypes.PLAYER, nbttagcompound);
-            p_72380_1_.func_70020_e(nbttagcompound1);
-            field_148546_d.debug("loading single player");
+            nbttagcompound1 = this.mcServer.getDataFixer().process(FixTypes.PLAYER, nbttagcompound);
+            playerIn.readFromNBT(nbttagcompound1);
+            LOG.debug("loading single player");
+            net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(playerIn, this.playerNBTManagerObj, playerIn.getUniqueID().toString());
         }
         else
         {
-            nbttagcompound1 = this.field_72412_k.func_75752_b(p_72380_1_);
+            nbttagcompound1 = this.playerNBTManagerObj.readPlayerData(playerIn);
         }
 
         return nbttagcompound1;
     }
 
-    protected void func_72391_b(EntityPlayerMP p_72391_1_)
+    public NBTTagCompound getPlayerNBT(EntityPlayerMP player)
     {
-        this.field_72412_k.func_75753_a(p_72391_1_);
-        StatisticsManagerServer statisticsmanagerserver = (StatisticsManagerServer)this.field_148547_k.get(p_72391_1_.func_110124_au());
+        // Hacky method to allow loading the NBT for a player prior to login
+        NBTTagCompound nbttagcompound = this.mcServer.worlds[0].getWorldInfo().getPlayerNBTTagCompound();
+        if (player.getName().equals(this.mcServer.getServerOwner()) && nbttagcompound != null)
+        {
+            return nbttagcompound;
+        }
+        else
+        {
+            return ((net.minecraft.world.storage.SaveHandler)this.playerNBTManagerObj).getPlayerNBT(player);
+        }
+    }
 
+    protected void writePlayerData(EntityPlayerMP playerIn)
+    {
+        if (playerIn.connection == null) return;
+
+        this.playerNBTManagerObj.writePlayerData(playerIn);
+        StatisticsManagerServer statisticsmanagerserver = (StatisticsManagerServer)this.playerStatFiles.get(playerIn.getUniqueID());
+
         if (statisticsmanagerserver != null)
         {
-            statisticsmanagerserver.func_150883_b();
+            statisticsmanagerserver.saveStatFile();
         }
     }
 
-    public void func_72377_c(EntityPlayerMP p_72377_1_)
+    public void playerLoggedIn(EntityPlayerMP playerIn)
     {
-        this.field_72404_b.add(p_72377_1_);
-        this.field_177454_f.put(p_72377_1_.func_110124_au(), p_72377_1_);
-        this.func_148540_a(new SPacketPlayerListItem(SPacketPlayerListItem.Action.ADD_PLAYER, new EntityPlayerMP[] {p_72377_1_}));
-        WorldServer worldserver = this.field_72400_f.func_71218_a(p_72377_1_.field_71093_bK);
+        this.playerEntityList.add(playerIn);
+        this.uuidToPlayerMap.put(playerIn.getUniqueID(), playerIn);
+        this.sendPacketToAllPlayers(new SPacketPlayerListItem(SPacketPlayerListItem.Action.ADD_PLAYER, new EntityPlayerMP[] {playerIn}));
+        WorldServer worldserver = this.mcServer.worldServerForDimension(playerIn.dimension);
 
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            p_72377_1_.field_71135_a.func_147359_a(new SPacketPlayerListItem(SPacketPlayerListItem.Action.ADD_PLAYER, new EntityPlayerMP[] {(EntityPlayerMP)this.field_72404_b.get(i)}));
+            playerIn.connection.sendPacket(new SPacketPlayerListItem(SPacketPlayerListItem.Action.ADD_PLAYER, new EntityPlayerMP[] {(EntityPlayerMP)this.playerEntityList.get(i)}));
         }
 
-        worldserver.func_72838_d(p_72377_1_);
-        this.func_72375_a(p_72377_1_, (WorldServer)null);
+        net.minecraftforge.common.chunkio.ChunkIOExecutor.adjustPoolSize(this.getCurrentPlayerCount());
+        worldserver.spawnEntity(playerIn);
+        this.preparePlayer(playerIn, (WorldServer)null);
     }
 
-    public void func_72358_d(EntityPlayerMP p_72358_1_)
+    public void serverUpdateMovingPlayer(EntityPlayerMP playerIn)
     {
-        p_72358_1_.func_71121_q().func_184164_w().func_72685_d(p_72358_1_);
+        playerIn.getServerWorld().getPlayerChunkMap().updateMovingPlayer(playerIn);
     }
 
-    public void func_72367_e(EntityPlayerMP p_72367_1_)
+    public void playerLoggedOut(EntityPlayerMP playerIn)
     {
-        WorldServer worldserver = p_72367_1_.func_71121_q();
-        p_72367_1_.func_71029_a(StatList.field_75947_j);
-        this.func_72391_b(p_72367_1_);
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerLoggedOut(playerIn);
+        WorldServer worldserver = playerIn.getServerWorld();
+        playerIn.addStat(StatList.LEAVE_GAME);
+        this.writePlayerData(playerIn);
 
-        if (p_72367_1_.func_184218_aH())
+        if (playerIn.isRiding())
         {
-            Entity entity = p_72367_1_.func_184208_bv();
+            Entity entity = playerIn.getLowestRidingEntity();
 
-            if (entity.func_184180_b(EntityPlayerMP.class).size() == 1)
+            if (entity.getRecursivePassengersByType(EntityPlayerMP.class).size() == 1)
             {
-                field_148546_d.debug("Removing player mount");
-                p_72367_1_.func_184210_p();
-                worldserver.func_72973_f(entity);
+                LOG.debug("Removing player mount");
+                playerIn.dismountRidingEntity();
+                worldserver.removeEntityDangerously(entity);
 
-                for (Entity entity1 : entity.func_184182_bu())
+                for (Entity entity1 : entity.getRecursivePassengers())
                 {
-                    worldserver.func_72973_f(entity1);
+                    worldserver.removeEntityDangerously(entity1);
                 }
 
-                worldserver.func_72964_e(p_72367_1_.field_70176_ah, p_72367_1_.field_70164_aj).func_76630_e();
+                worldserver.getChunkFromChunkCoords(playerIn.chunkCoordX, playerIn.chunkCoordZ).setChunkModified();
             }
         }
 
-        worldserver.func_72900_e(p_72367_1_);
-        worldserver.func_184164_w().func_72695_c(p_72367_1_);
-        this.field_72404_b.remove(p_72367_1_);
-        UUID uuid = p_72367_1_.func_110124_au();
-        EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_177454_f.get(uuid);
+        worldserver.removeEntity(playerIn);
+        worldserver.getPlayerChunkMap().removePlayer(playerIn);
+        this.playerEntityList.remove(playerIn);
+        UUID uuid = playerIn.getUniqueID();
+        EntityPlayerMP entityplayermp = (EntityPlayerMP)this.uuidToPlayerMap.get(uuid);
 
-        if (entityplayermp == p_72367_1_)
+        if (entityplayermp == playerIn)
         {
-            this.field_177454_f.remove(uuid);
-            this.field_148547_k.remove(uuid);
+            this.uuidToPlayerMap.remove(uuid);
+            this.playerStatFiles.remove(uuid);
         }
+        net.minecraftforge.common.chunkio.ChunkIOExecutor.adjustPoolSize(this.getCurrentPlayerCount());
 
-        this.func_148540_a(new SPacketPlayerListItem(SPacketPlayerListItem.Action.REMOVE_PLAYER, new EntityPlayerMP[] {p_72367_1_}));
+        this.sendPacketToAllPlayers(new SPacketPlayerListItem(SPacketPlayerListItem.Action.REMOVE_PLAYER, new EntityPlayerMP[] {playerIn}));
     }
 
-    public String func_148542_a(SocketAddress p_148542_1_, GameProfile p_148542_2_)
+    public String allowUserToConnect(SocketAddress address, GameProfile profile)
     {
-        if (this.field_72401_g.func_152702_a(p_148542_2_))
+        if (this.bannedPlayers.isBanned(profile))
         {
-            UserListBansEntry userlistbansentry = (UserListBansEntry)this.field_72401_g.func_152683_b(p_148542_2_);
-            String s1 = "You are banned from this server!\nReason: " + userlistbansentry.func_73686_f();
+            UserListBansEntry userlistbansentry = (UserListBansEntry)this.bannedPlayers.getEntry(profile);
+            String s1 = "You are banned from this server!\nReason: " + userlistbansentry.getBanReason();
 
-            if (userlistbansentry.func_73680_d() != null)
+            if (userlistbansentry.getBanEndDate() != null)
             {
-                s1 = s1 + "\nYour ban will be removed on " + field_72403_e.format(userlistbansentry.func_73680_d());
+                s1 = s1 + "\nYour ban will be removed on " + DATE_FORMAT.format(userlistbansentry.getBanEndDate());
             }
 
             return s1;
         }
-        else if (!this.func_152607_e(p_148542_2_))
+        else if (!this.canJoin(profile))
         {
             return "You are not white-listed on this server!";
         }
-        else if (this.field_72413_h.func_152708_a(p_148542_1_))
+        else if (this.bannedIPs.isBanned(address))
         {
-            UserListIPBansEntry userlistipbansentry = this.field_72413_h.func_152709_b(p_148542_1_);
-            String s = "Your IP address is banned from this server!\nReason: " + userlistipbansentry.func_73686_f();
+            UserListIPBansEntry userlistipbansentry = this.bannedIPs.getBanEntry(address);
+            String s = "Your IP address is banned from this server!\nReason: " + userlistipbansentry.getBanReason();
 
-            if (userlistipbansentry.func_73680_d() != null)
+            if (userlistipbansentry.getBanEndDate() != null)
             {
-                s = s + "\nYour ban will be removed on " + field_72403_e.format(userlistipbansentry.func_73680_d());
+                s = s + "\nYour ban will be removed on " + DATE_FORMAT.format(userlistipbansentry.getBanEndDate());
             }
 
             return s;
         }
         else
         {
-            return this.field_72404_b.size() >= this.field_72405_c && !this.func_183023_f(p_148542_2_) ? "The server is full!" : null;
+            return this.playerEntityList.size() >= this.maxPlayers && !this.bypassesPlayerLimit(profile) ? "The server is full!" : null;
         }
     }
 
-    public EntityPlayerMP func_148545_a(GameProfile p_148545_1_)
+    public EntityPlayerMP createPlayerForUser(GameProfile profile)
     {
-        UUID uuid = EntityPlayer.func_146094_a(p_148545_1_);
+        UUID uuid = EntityPlayer.getUUID(profile);
         List<EntityPlayerMP> list = Lists.<EntityPlayerMP>newArrayList();
 
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_72404_b.get(i);
+            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.playerEntityList.get(i);
 
-            if (entityplayermp.func_110124_au().equals(uuid))
+            if (entityplayermp.getUniqueID().equals(uuid))
             {
                 list.add(entityplayermp);
             }
         }
 
-        EntityPlayerMP entityplayermp2 = (EntityPlayerMP)this.field_177454_f.get(p_148545_1_.getId());
+        EntityPlayerMP entityplayermp2 = (EntityPlayerMP)this.uuidToPlayerMap.get(profile.getId());
 
         if (entityplayermp2 != null && !list.contains(entityplayermp2))
         {
@@ -431,280 +481,447 @@
 
         for (EntityPlayerMP entityplayermp1 : list)
         {
-            entityplayermp1.field_71135_a.func_147360_c("You logged in from another location");
+            entityplayermp1.connection.disconnect("You logged in from another location");
         }
 
         PlayerInteractionManager playerinteractionmanager;
 
-        if (this.field_72400_f.func_71242_L())
+        if (this.mcServer.isDemo())
         {
-            playerinteractionmanager = new DemoWorldManager(this.field_72400_f.func_71218_a(0));
+            playerinteractionmanager = new DemoWorldManager(this.mcServer.worldServerForDimension(0));
         }
         else
         {
-            playerinteractionmanager = new PlayerInteractionManager(this.field_72400_f.func_71218_a(0));
+            playerinteractionmanager = new PlayerInteractionManager(this.mcServer.worldServerForDimension(0));
         }
 
-        return new EntityPlayerMP(this.field_72400_f, this.field_72400_f.func_71218_a(0), p_148545_1_, playerinteractionmanager);
+        return new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(0), profile, playerinteractionmanager);
     }
 
-    public EntityPlayerMP func_72368_a(EntityPlayerMP p_72368_1_, int p_72368_2_, boolean p_72368_3_)
+    public EntityPlayerMP recreatePlayerEntity(EntityPlayerMP playerIn, int dimension, boolean conqueredEnd)
     {
-        p_72368_1_.func_71121_q().func_73039_n().func_72787_a(p_72368_1_);
-        p_72368_1_.func_71121_q().func_73039_n().func_72790_b(p_72368_1_);
-        p_72368_1_.func_71121_q().func_184164_w().func_72695_c(p_72368_1_);
-        this.field_72404_b.remove(p_72368_1_);
-        this.field_72400_f.func_71218_a(p_72368_1_.field_71093_bK).func_72973_f(p_72368_1_);
-        BlockPos blockpos = p_72368_1_.func_180470_cg();
-        boolean flag = p_72368_1_.func_82245_bX();
-        p_72368_1_.field_71093_bK = p_72368_2_;
+        //final phase of tp
+        //recreate the entity on teleporting
+        //or recreate entity on respawn
+        //dimension param means target dim
+        Location old = new Location(DimensionManager.getWorld(dimension).getWorld(),playerIn.getPosition().getX(),playerIn.getPosition().getY(),playerIn.getPosition().getZ());
+        Location newpos;
+        World world = mcServer.worldServerForDimension(dimension);
+        if (world == null) //no such dim,fallingback to worldspawn
+        {
+            dimension = playerIn.getSpawnDimension();
+        }
+        else if (!world.provider.canRespawnHere())  //cannot respawn in nether
+        {
+            dimension = world.provider.getRespawnDimension(playerIn);
+        }
+        if (mcServer.worldServerForDimension(dimension) == null) dimension = 0;
+
+        playerIn.getServerWorld().getEntityTracker().removePlayerFromTrackers(playerIn);
+        playerIn.getServerWorld().getEntityTracker().untrack(playerIn);
+        playerIn.getServerWorld().getPlayerChunkMap().removePlayer(playerIn);
+        this.playerEntityList.remove(playerIn);
+        //entity was removed here
+        this.mcServer.worldServerForDimension(playerIn.dimension).removeEntityDangerously(playerIn);
+        BlockPos old_bedloc = playerIn.getBedLocation(dimension);  //your bed location in last world
+        boolean flag = playerIn.isSpawnForced(dimension);
+        playerIn.dimension = dimension;
         PlayerInteractionManager playerinteractionmanager;
 
-        if (this.field_72400_f.func_71242_L())
+        if (this.mcServer.isDemo())
         {
-            playerinteractionmanager = new DemoWorldManager(this.field_72400_f.func_71218_a(p_72368_1_.field_71093_bK));
+            playerinteractionmanager = new DemoWorldManager(this.mcServer.worldServerForDimension(playerIn.dimension));
         }
         else
         {
-            playerinteractionmanager = new PlayerInteractionManager(this.field_72400_f.func_71218_a(p_72368_1_.field_71093_bK));
+            playerinteractionmanager = new PlayerInteractionManager(this.mcServer.worldServerForDimension(playerIn.dimension));
         }
+        //recreate entity in new world
 
-        EntityPlayerMP entityplayermp = new EntityPlayerMP(this.field_72400_f, this.field_72400_f.func_71218_a(p_72368_1_.field_71093_bK), p_72368_1_.func_146103_bH(), playerinteractionmanager);
-        entityplayermp.field_71135_a = p_72368_1_.field_71135_a;
-        entityplayermp.func_71049_a(p_72368_1_, p_72368_3_);
-        entityplayermp.func_145769_d(p_72368_1_.func_145782_y());
-        entityplayermp.func_174817_o(p_72368_1_);
-        entityplayermp.func_184819_a(p_72368_1_.func_184591_cq());
+        EntityPlayerMP entityplayermp = new EntityPlayerMP(this.mcServer, this.mcServer.worldServerForDimension(playerIn.dimension), playerIn.getGameProfile(), playerinteractionmanager);
+        entityplayermp.connection = playerIn.connection;
+        entityplayermp.clonePlayer(playerIn, conqueredEnd);
+        entityplayermp.dimension = dimension;
+        entityplayermp.setEntityId(playerIn.getEntityId());
+        entityplayermp.setCommandStats(playerIn);
+        entityplayermp.setPrimaryHand(playerIn.getPrimaryHand());
 
-        for (String s : p_72368_1_.func_184216_O())
+        for (String s : playerIn.getTags())
         {
-            entityplayermp.func_184211_a(s);
+            entityplayermp.addTag(s);
         }
 
-        WorldServer worldserver = this.field_72400_f.func_71218_a(p_72368_1_.field_71093_bK);
-        this.func_72381_a(entityplayermp, p_72368_1_, worldserver);
-
-        if (blockpos != null)
+        WorldServer worldserver = this.mcServer.worldServerForDimension(playerIn.dimension);
+        this.setPlayerGameTypeBasedOnOther(entityplayermp, playerIn, worldserver);
+        boolean isBedRespawn = false; //MCPCRevive : tosend event
+        if (old_bedloc != null)   //blockpos1 :
         {
-            BlockPos blockpos1 = EntityPlayer.func_180467_a(this.field_72400_f.func_71218_a(p_72368_1_.field_71093_bK), blockpos, flag);
+            //blockpos2 the bed location here
+            BlockPos new_bedloc = EntityPlayer.getBedSpawnLocation(this.mcServer.worldServerForDimension(playerIn.dimension), old_bedloc, flag);
 
-            if (blockpos1 != null)
+            if (new_bedloc != null)
             {
-                entityplayermp.func_70012_b((double)((float)blockpos1.func_177958_n() + 0.5F), (double)((float)blockpos1.func_177956_o() + 0.1F), (double)((float)blockpos1.func_177952_p() + 0.5F), 0.0F, 0.0F);
-                entityplayermp.func_180473_a(blockpos, flag);
+                //if we got bed location in this world ,set spawnpoint, and respawn in the bed
+                isBedRespawn = true;
+                newpos = new Location(DimensionManager.getWorld(playerIn.dimension).getWorld(),new_bedloc.getX() + 0.5F, new_bedloc.getY() + 0.1F,new_bedloc.getZ() + 0.5F);
+                entityplayermp.setLocationAndAngles((double)((float)new_bedloc.getX() + 0.5F), (double)((float)new_bedloc.getY() + 0.1F), (double)((float)new_bedloc.getZ() + 0.5F), 0.0F, 0.0F);
+                entityplayermp.setSpawnPoint(old_bedloc, flag);
+                
             }
             else
             {
-                entityplayermp.field_71135_a.func_147359_a(new SPacketChangeGameState(0, 0.0F));
+                entityplayermp.connection.sendPacket(new SPacketChangeGameState(0, 0.0F));
             }
         }
+        
+        worldserver.getChunkProvider().provideChunk((int)entityplayermp.posX >> 4, (int)entityplayermp.posZ >> 4);
 
-        worldserver.func_72863_F().func_186025_d((int)entityplayermp.field_70165_t >> 4, (int)entityplayermp.field_70161_v >> 4);
-
-        while (!worldserver.func_184144_a(entityplayermp, entityplayermp.func_174813_aQ()).isEmpty() && entityplayermp.field_70163_u < 256.0D)
+        while (!worldserver.getCollisionBoxes(entityplayermp, entityplayermp.getEntityBoundingBox()).isEmpty() && entityplayermp.posY < 256.0D)
         {
-            entityplayermp.func_70107_b(entityplayermp.field_70165_t, entityplayermp.field_70163_u + 1.0D, entityplayermp.field_70161_v);
+            //if the respawn point is valid
+            entityplayermp.setPosition(entityplayermp.posX, entityplayermp.posY + 1.0D, entityplayermp.posZ);
         }
 
-        entityplayermp.field_71135_a.func_147359_a(new SPacketRespawn(entityplayermp.field_71093_bK, entityplayermp.field_70170_p.func_175659_aa(), entityplayermp.field_70170_p.func_72912_H().func_76067_t(), entityplayermp.field_71134_c.func_73081_b()));
-        BlockPos blockpos2 = worldserver.func_175694_M();
-        entityplayermp.field_71135_a.func_147364_a(entityplayermp.field_70165_t, entityplayermp.field_70163_u, entityplayermp.field_70161_v, entityplayermp.field_70177_z, entityplayermp.field_70125_A);
-        entityplayermp.field_71135_a.func_147359_a(new SPacketSpawnPosition(blockpos2));
-        entityplayermp.field_71135_a.func_147359_a(new SPacketSetExperience(entityplayermp.field_71106_cc, entityplayermp.field_71067_cb, entityplayermp.field_71068_ca));
-        this.func_72354_b(entityplayermp, worldserver);
-        this.func_187243_f(entityplayermp);
-        worldserver.func_184164_w().func_72683_a(entityplayermp);
-        worldserver.func_72838_d(entityplayermp);
-        this.field_72404_b.add(entityplayermp);
-        this.field_177454_f.put(entityplayermp.func_110124_au(), entityplayermp);
-        entityplayermp.func_71116_b();
-        entityplayermp.func_70606_j(entityplayermp.func_110143_aJ());
+        entityplayermp.connection.sendPacket(new SPacketRespawn(entityplayermp.dimension, entityplayermp.world.getDifficulty(), entityplayermp.world.getWorldInfo().getTerrainType(), entityplayermp.interactionManager.getGameType()));
+        BlockPos blockpos2 = worldserver.getSpawnPoint();
+        entityplayermp.connection.setPlayerLocation(entityplayermp.posX, entityplayermp.posY, entityplayermp.posZ, entityplayermp.rotationYaw, entityplayermp.rotationPitch);
+        entityplayermp.connection.sendPacket(new SPacketSpawnPosition(blockpos2));
+        entityplayermp.connection.sendPacket(new SPacketSetExperience(entityplayermp.experience, entityplayermp.experienceTotal, entityplayermp.experienceLevel));
+        this.updateTimeAndWeatherForPlayer(entityplayermp, worldserver);
+        this.updatePermissionLevel(entityplayermp);
+        worldserver.getPlayerChunkMap().addPlayer(entityplayermp);
+        worldserver.spawnEntity(entityplayermp);
+        //MCPCRevive : fire event
+        PlayerRespawnEvent event = new PlayerRespawnEvent(cserver.getPlayer(entityplayermp),new Location(worldserver.getWorld(),entityplayermp.getPosition().getX(),entityplayermp.getPosition().getY(),entityplayermp.getPosition().getZ()),isBedRespawn);
+        Bukkit.getServer().getPluginManager().callEvent(event);
+        //MCPCRevive end
+        this.playerEntityList.add(entityplayermp);
+        this.uuidToPlayerMap.put(entityplayermp.getUniqueID(), entityplayermp);
+        entityplayermp.addSelfToInternalCraftingInventory();
+        entityplayermp.setHealth(entityplayermp.getHealth());
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerRespawnEvent(entityplayermp, conqueredEnd);
         return entityplayermp;
     }
 
-    public void func_187243_f(EntityPlayerMP p_187243_1_)
+    public void updatePermissionLevel(EntityPlayerMP player)
     {
-        GameProfile gameprofile = p_187243_1_.func_146103_bH();
-        int i = this.func_152596_g(gameprofile) ? this.field_72414_i.func_187452_a(gameprofile) : 0;
-        i = this.field_72400_f.func_71264_H() && this.field_72400_f.field_71305_c[0].func_72912_H().func_76086_u() ? 4 : i;
-        i = this.field_72407_n ? 4 : i;
-        this.func_187245_a(p_187243_1_, i);
+        GameProfile gameprofile = player.getGameProfile();
+        int i = this.canSendCommands(gameprofile) ? this.ops.getPermissionLevel(gameprofile) : 0;
+        i = this.mcServer.isSinglePlayer() && this.mcServer.worlds[0].getWorldInfo().areCommandsAllowed() ? 4 : i;
+        i = this.commandsAllowedForAll ? 4 : i;
+        this.sendPlayerPermissionLevel(player, i);
     }
 
-    public void func_187242_a(EntityPlayerMP p_187242_1_, int p_187242_2_)
+    public void changePlayerDimension(EntityPlayerMP player, int dimensionIn)
     {
-        int i = p_187242_1_.field_71093_bK;
-        WorldServer worldserver = this.field_72400_f.func_71218_a(p_187242_1_.field_71093_bK);
-        p_187242_1_.field_71093_bK = p_187242_2_;
-        WorldServer worldserver1 = this.field_72400_f.func_71218_a(p_187242_1_.field_71093_bK);
-        p_187242_1_.field_71135_a.func_147359_a(new SPacketRespawn(p_187242_1_.field_71093_bK, p_187242_1_.field_70170_p.func_175659_aa(), p_187242_1_.field_70170_p.func_72912_H().func_76067_t(), p_187242_1_.field_71134_c.func_73081_b()));
-        this.func_187243_f(p_187242_1_);
-        worldserver.func_72973_f(p_187242_1_);
-        p_187242_1_.field_70128_L = false;
-        this.func_82448_a(p_187242_1_, i, worldserver, worldserver1);
-        this.func_72375_a(p_187242_1_, worldserver);
-        p_187242_1_.field_71135_a.func_147364_a(p_187242_1_.field_70165_t, p_187242_1_.field_70163_u, p_187242_1_.field_70161_v, p_187242_1_.field_70177_z, p_187242_1_.field_70125_A);
-        p_187242_1_.field_71134_c.func_73080_a(worldserver1);
-        p_187242_1_.field_71135_a.func_147359_a(new SPacketPlayerAbilities(p_187242_1_.field_71075_bZ));
-        this.func_72354_b(p_187242_1_, worldserver1);
-        this.func_72385_f(p_187242_1_);
+        transferPlayerToDimension(player, dimensionIn, mcServer.worldServerForDimension(dimensionIn).getDefaultTeleporter());
+    }
 
-        for (PotionEffect potioneffect : p_187242_1_.func_70651_bq())
+    public void transferPlayerToDimension(EntityPlayerMP player, int dimensionIn, net.minecraft.world.Teleporter teleporter)
+    {
+        int i = player.dimension;
+        WorldServer worldserver = this.mcServer.worldServerForDimension(player.dimension);
+        player.dimension = dimensionIn;
+        WorldServer worldserver1 = this.mcServer.worldServerForDimension(player.dimension);
+        //Teleport inject here
+        //cplit get teleport target
+        BlockPos target = getTeleportTarget(player,i,worldserver,worldserver1);
+        Location srcLoc= new Location(worldserver.getWorld(),player.getPosition().getX(),player.getPosition().getY(),player.getPosition().getZ());
+        Location targetLoc = new Location(worldserver1.getWorld(),target.getX(),target.getY(),target.getZ());
+        PlayerTeleportEvent event = new PlayerTeleportEvent(cserver.getPlayer(player),srcLoc,targetLoc);
+        Bukkit.getServer().getPluginManager().callEvent(event);
+        if (event.isCancelled() || event.getTo() == null) {
+            return;
+        }
+        //
+        player.connection.sendPacket(new SPacketRespawn(player.dimension, worldserver1.getDifficulty(), worldserver1.getWorldInfo().getTerrainType(), player.interactionManager.getGameType()));
+        this.updatePermissionLevel(player);
+        worldserver.removeEntityDangerously(player);
+        player.isDead = false;
+        //then transfer
+        this.transferEntityToWorld(player, worldserver, worldserver1, teleporter,target);
+        this.preparePlayer(player, worldserver);
+        player.connection.setPlayerLocation(player.posX, player.posY, player.posZ, player.rotationYaw, player.rotationPitch);
+        player.interactionManager.setWorld(worldserver1);
+        player.connection.sendPacket(new SPacketPlayerAbilities(player.capabilities));
+        this.updateTimeAndWeatherForPlayer(player, worldserver1);
+        this.syncPlayerInventory(player);
+
+        for (PotionEffect potioneffect : player.getActivePotionEffects())
         {
-            p_187242_1_.field_71135_a.func_147359_a(new SPacketEntityEffect(p_187242_1_.func_145782_y(), potioneffect));
+            player.connection.sendPacket(new SPacketEntityEffect(player.getEntityId(), potioneffect));
         }
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().firePlayerChangedDimensionEvent(player, i, dimensionIn);
     }
 
-    public void func_82448_a(Entity p_82448_1_, int p_82448_2_, WorldServer p_82448_3_, WorldServer p_82448_4_)
+    public void transferEntityToWorld(Entity entityIn, int lastDimension, WorldServer oldWorldIn, WorldServer toWorldIn)
     {
-        double d0 = p_82448_1_.field_70165_t;
-        double d1 = p_82448_1_.field_70161_v;
+        transferEntityToWorld(entityIn, lastDimension, oldWorldIn, toWorldIn, toWorldIn.getDefaultTeleporter());
+    }
+    public BlockPos getTeleportTarget(Entity entityIn, int lastDimension, WorldServer oldWorldIn, WorldServer toWorldIn)
+    {
+        net.minecraft.world.WorldProvider pOld = oldWorldIn.provider;
+        net.minecraft.world.WorldProvider pNew = toWorldIn.provider;
+        double moveFactor = pOld.getMovementFactor() / pNew.getMovementFactor();
+        double d0 = entityIn.posX * moveFactor;
+        double d1 = entityIn.posZ * moveFactor;
         double d2 = 8.0D;
-        float f = p_82448_1_.field_70177_z;
-        p_82448_3_.field_72984_F.func_76320_a("moving");
+        //float f = entityIn.rotationYaw;
+        //oldWorldIn.theProfiler.startSection("moving");
 
-        if (p_82448_1_.field_71093_bK == -1)
+        if (false && entityIn.dimension == -1)
         {
-            d0 = MathHelper.func_151237_a(d0 / 8.0D, p_82448_4_.func_175723_af().func_177726_b() + 16.0D, p_82448_4_.func_175723_af().func_177728_d() - 16.0D);
-            d1 = MathHelper.func_151237_a(d1 / 8.0D, p_82448_4_.func_175723_af().func_177736_c() + 16.0D, p_82448_4_.func_175723_af().func_177733_e() - 16.0D);
-            p_82448_1_.func_70012_b(d0, p_82448_1_.field_70163_u, d1, p_82448_1_.field_70177_z, p_82448_1_.field_70125_A);
+            d0 = MathHelper.clamp(d0 / 8.0D, toWorldIn.getWorldBorder().minX() + 16.0D, toWorldIn.getWorldBorder().maxX() - 16.0D);
+            d1 = MathHelper.clamp(d1 / 8.0D, toWorldIn.getWorldBorder().minZ() + 16.0D, toWorldIn.getWorldBorder().maxZ() - 16.0D);
+            //entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
 
-            if (p_82448_1_.func_70089_S())
+            //if (entityIn.isEntityAlive())
+           // {
+            //    oldWorldIn.updateEntityWithOptionalForce(entityIn, false);
+          //  }
+        }
+        else if (false && entityIn.dimension == 0)
+        {
+            d0 = MathHelper.clamp(d0 * 8.0D, toWorldIn.getWorldBorder().minX() + 16.0D, toWorldIn.getWorldBorder().maxX() - 16.0D);
+            d1 = MathHelper.clamp(d1 * 8.0D, toWorldIn.getWorldBorder().minZ() + 16.0D, toWorldIn.getWorldBorder().maxZ() - 16.0D);
+          //  entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
+
+         //   if (entityIn.isEntityAlive())
+         ////   {
+           //     oldWorldIn.updateEntityWithOptionalForce(entityIn, false);
+         //   }
+        }
+        return new BlockPos(d0,d2,d1);
+    }
+    public void transferEntityToWorld(Entity entityIn, WorldServer oldWorldIn, WorldServer toWorldIn, net.minecraft.world.Teleporter teleporter,BlockPos targetPos)
+    {
+
+        if (entityIn.dimension == 1)
+        {
+            BlockPos blockpos;
+
+            if (oldWorldIn.provider.getDimension() == 1)
             {
-                p_82448_3_.func_72866_a(p_82448_1_, false);
+                blockpos = toWorldIn.getSpawnPoint();
             }
+            else
+            {
+                blockpos = toWorldIn.getSpawnCoordinate();
+            }
+
+
+            entityIn.posY = (double)blockpos.getY();
+            entityIn.setLocationAndAngles(targetPos.getX(), entityIn.posY, targetPos.getZ(), 90.0F, 0.0F);
+
+            if (entityIn.isEntityAlive())
+            {
+                oldWorldIn.updateEntityWithOptionalForce(entityIn, false);
+            }
         }
-        else if (p_82448_1_.field_71093_bK == 0)
+        else
         {
-            d0 = MathHelper.func_151237_a(d0 * 8.0D, p_82448_4_.func_175723_af().func_177726_b() + 16.0D, p_82448_4_.func_175723_af().func_177728_d() - 16.0D);
-            d1 = MathHelper.func_151237_a(d1 * 8.0D, p_82448_4_.func_175723_af().func_177736_c() + 16.0D, p_82448_4_.func_175723_af().func_177733_e() - 16.0D);
-            p_82448_1_.func_70012_b(d0, p_82448_1_.field_70163_u, d1, p_82448_1_.field_70177_z, p_82448_1_.field_70125_A);
+            oldWorldIn.theProfiler.startSection("placing");
+            double d0 = (double)MathHelper.clamp((int)targetPos.getX(), -29999872, 29999872);
+            double d1 = (double)MathHelper.clamp((int)targetPos.getZ(), -29999872, 29999872);
 
-            if (p_82448_1_.func_70089_S())
+            if (entityIn.isEntityAlive())
             {
-                p_82448_3_.func_72866_a(p_82448_1_, false);
+                entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
+                teleporter.placeInPortal(entityIn, entityIn.rotationYaw);
+                toWorldIn.spawnEntity(entityIn);
+                toWorldIn.updateEntityWithOptionalForce(entityIn, false);
             }
+
+            oldWorldIn.theProfiler.endSection();
         }
-        else
+        oldWorldIn.theProfiler.endSection();
+
+        entityIn.setWorld(toWorldIn);
+    }
+    @SuppressWarnings("unused")
+    public void transferEntityToWorld(Entity entityIn, int lastDimension, WorldServer oldWorldIn, WorldServer toWorldIn, net.minecraft.world.Teleporter teleporter)
+    {
+        net.minecraft.world.WorldProvider pOld = oldWorldIn.provider;
+        net.minecraft.world.WorldProvider pNew = toWorldIn.provider;
+        double moveFactor = pOld.getMovementFactor() / pNew.getMovementFactor();
+        double d0 = entityIn.posX * moveFactor;
+        double d1 = entityIn.posZ * moveFactor;
+        double d2 = 8.0D;
+        float f = entityIn.rotationYaw;
+        oldWorldIn.theProfiler.startSection("moving");
+
+        if (false && entityIn.dimension == -1)
         {
+            d0 = MathHelper.clamp(d0 / 8.0D, toWorldIn.getWorldBorder().minX() + 16.0D, toWorldIn.getWorldBorder().maxX() - 16.0D);
+            d1 = MathHelper.clamp(d1 / 8.0D, toWorldIn.getWorldBorder().minZ() + 16.0D, toWorldIn.getWorldBorder().maxZ() - 16.0D);
+            entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
+
+            if (entityIn.isEntityAlive())
+            {
+                oldWorldIn.updateEntityWithOptionalForce(entityIn, false);
+            }
+        }
+        else if (false && entityIn.dimension == 0)
+        {
+            d0 = MathHelper.clamp(d0 * 8.0D, toWorldIn.getWorldBorder().minX() + 16.0D, toWorldIn.getWorldBorder().maxX() - 16.0D);
+            d1 = MathHelper.clamp(d1 * 8.0D, toWorldIn.getWorldBorder().minZ() + 16.0D, toWorldIn.getWorldBorder().maxZ() - 16.0D);
+            entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
+
+            if (entityIn.isEntityAlive())
+            {
+                oldWorldIn.updateEntityWithOptionalForce(entityIn, false);
+            }
+        }
+
+        if (entityIn.dimension == 1)
+        {
             BlockPos blockpos;
 
-            if (p_82448_2_ == 1)
+            if (lastDimension == 1)
             {
-                blockpos = p_82448_4_.func_175694_M();
+                blockpos = toWorldIn.getSpawnPoint();
             }
             else
             {
-                blockpos = p_82448_4_.func_180504_m();
+                blockpos = toWorldIn.getSpawnCoordinate();
             }
 
-            d0 = (double)blockpos.func_177958_n();
-            p_82448_1_.field_70163_u = (double)blockpos.func_177956_o();
-            d1 = (double)blockpos.func_177952_p();
-            p_82448_1_.func_70012_b(d0, p_82448_1_.field_70163_u, d1, 90.0F, 0.0F);
+            d0 = (double)blockpos.getX();
+            entityIn.posY = (double)blockpos.getY();
+            d1 = (double)blockpos.getZ();
+            entityIn.setLocationAndAngles(d0, entityIn.posY, d1, 90.0F, 0.0F);
 
-            if (p_82448_1_.func_70089_S())
+            if (entityIn.isEntityAlive())
             {
-                p_82448_3_.func_72866_a(p_82448_1_, false);
+                oldWorldIn.updateEntityWithOptionalForce(entityIn, false);
             }
         }
 
-        p_82448_3_.field_72984_F.func_76319_b();
+        oldWorldIn.theProfiler.endSection();
 
-        if (p_82448_2_ != 1)
+        if (lastDimension != 1)
         {
-            p_82448_3_.field_72984_F.func_76320_a("placing");
-            d0 = (double)MathHelper.func_76125_a((int)d0, -29999872, 29999872);
-            d1 = (double)MathHelper.func_76125_a((int)d1, -29999872, 29999872);
+            oldWorldIn.theProfiler.startSection("placing");
+            d0 = (double)MathHelper.clamp((int)d0, -29999872, 29999872);
+            d1 = (double)MathHelper.clamp((int)d1, -29999872, 29999872);
 
-            if (p_82448_1_.func_70089_S())
+            if (entityIn.isEntityAlive())
             {
-                p_82448_1_.func_70012_b(d0, p_82448_1_.field_70163_u, d1, p_82448_1_.field_70177_z, p_82448_1_.field_70125_A);
-                p_82448_4_.func_85176_s().func_180266_a(p_82448_1_, f);
-                p_82448_4_.func_72838_d(p_82448_1_);
-                p_82448_4_.func_72866_a(p_82448_1_, false);
+                entityIn.setLocationAndAngles(d0, entityIn.posY, d1, entityIn.rotationYaw, entityIn.rotationPitch);
+                teleporter.placeInPortal(entityIn, f);
+                toWorldIn.spawnEntity(entityIn);
+                toWorldIn.updateEntityWithOptionalForce(entityIn, false);
             }
 
-            p_82448_3_.field_72984_F.func_76319_b();
+            oldWorldIn.theProfiler.endSection();
         }
 
-        p_82448_1_.func_70029_a(p_82448_4_);
+        entityIn.setWorld(toWorldIn);
     }
 
-    public void func_72374_b()
+    public void onTick()
     {
-        if (++this.field_72408_o > 600)
+        if (++this.playerPingIndex > 600)
         {
-            this.func_148540_a(new SPacketPlayerListItem(SPacketPlayerListItem.Action.UPDATE_LATENCY, this.field_72404_b));
-            this.field_72408_o = 0;
+            // CraftBukkit start
+            for (int i = 0; i < this.playerEntityList.size(); ++i) {
+                final EntityPlayerMP target = (EntityPlayerMP) this.playerEntityList.get(i);
+
+                target.connection.sendPacket(new SPacketPlayerListItem(SPacketPlayerListItem.Action.UPDATE_LATENCY, Iterables.filter(this.playerEntityList, new Predicate<EntityPlayerMP>() {
+                    @Override
+                    public boolean apply(EntityPlayerMP input) {
+                        return ((Player)target.getBukkitEntity()).canSee((Player) input.getBukkitEntity());
+                    }
+                })));
+            }
+            // CraftBukkit end
+            this.playerPingIndex = 0;
         }
     }
+    // CraftBukkit start - add a world/entity limited version
+    public void sendAll(Packet packet, EntityPlayer entityhuman) {
+        for (int i = 0; i < this.playerEntityList.size(); ++i) {
+            EntityPlayerMP entityplayer =  this.playerEntityList.get(i);
+            if (entityhuman != null && entityhuman instanceof EntityPlayerMP && !((Player)entityplayer.getBukkitEntity()).canSee((Player) ((EntityPlayerMP) entityhuman).getBukkitEntity())) {
+                continue;
+            }
+            ((EntityPlayerMP) this.playerEntityList.get(i)).connection.sendPacket(packet);
+        }
+    }
 
-    public void func_148540_a(Packet<?> p_148540_1_)
+    public void sendAll(Packet packet, World world) {
+        for (int i = 0; i < world.playerEntities.size(); ++i) {
+            ((EntityPlayerMP) world.playerEntities.get(i)).connection.sendPacket(packet);
+        }
+
+    }
+    // CraftBukkit end
+
+    public void sendPacketToAllPlayers(Packet<?> packetIn)
     {
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            ((EntityPlayerMP)this.field_72404_b.get(i)).field_71135_a.func_147359_a(p_148540_1_);
+            ((EntityPlayerMP)this.playerEntityList.get(i)).connection.sendPacket(packetIn);
         }
     }
 
-    public void func_148537_a(Packet<?> p_148537_1_, int p_148537_2_)
+    public void sendPacketToAllPlayersInDimension(Packet<?> packetIn, int dimension)
     {
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_72404_b.get(i);
+            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.playerEntityList.get(i);
 
-            if (entityplayermp.field_71093_bK == p_148537_2_)
+            if (entityplayermp.dimension == dimension)
             {
-                entityplayermp.field_71135_a.func_147359_a(p_148537_1_);
+                entityplayermp.connection.sendPacket(packetIn);
             }
         }
     }
 
-    public void func_177453_a(EntityPlayer p_177453_1_, ITextComponent p_177453_2_)
+    public void sendMessageToAllTeamMembers(EntityPlayer player, ITextComponent message)
     {
-        Team team = p_177453_1_.func_96124_cp();
+        Team team = player.getTeam();
 
         if (team != null)
         {
-            for (String s : team.func_96670_d())
+            for (String s : team.getMembershipCollection())
             {
-                EntityPlayerMP entityplayermp = this.func_152612_a(s);
+                EntityPlayerMP entityplayermp = this.getPlayerByUsername(s);
 
-                if (entityplayermp != null && entityplayermp != p_177453_1_)
+                if (entityplayermp != null && entityplayermp != player)
                 {
-                    entityplayermp.func_145747_a(p_177453_2_);
+                    entityplayermp.sendMessage(message);
                 }
             }
         }
     }
 
-    public void func_177452_b(EntityPlayer p_177452_1_, ITextComponent p_177452_2_)
+    public void sendMessageToTeamOrAllPlayers(EntityPlayer player, ITextComponent message)
     {
-        Team team = p_177452_1_.func_96124_cp();
+        Team team = player.getTeam();
 
         if (team == null)
         {
-            this.func_148539_a(p_177452_2_);
+            this.sendMessage(message);
         }
         else
         {
-            for (int i = 0; i < this.field_72404_b.size(); ++i)
+            for (int i = 0; i < this.playerEntityList.size(); ++i)
             {
-                EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_72404_b.get(i);
+                EntityPlayerMP entityplayermp = (EntityPlayerMP)this.playerEntityList.get(i);
 
-                if (entityplayermp.func_96124_cp() != team)
+                if (entityplayermp.getTeam() != team)
                 {
-                    entityplayermp.func_145747_a(p_177452_2_);
+                    entityplayermp.sendMessage(message);
                 }
             }
         }
     }
 
-    public String func_181058_b(boolean p_181058_1_)
+    public String getFormattedListOfPlayers(boolean includeUUIDs)
     {
         String s = "";
-        List<EntityPlayerMP> list = Lists.newArrayList(this.field_72404_b);
+        List<EntityPlayerMP> list = Lists.newArrayList(this.playerEntityList);
 
         for (int i = 0; i < ((List)list).size(); ++i)
         {
@@ -713,103 +930,115 @@
                 s = s + ", ";
             }
 
-            s = s + ((EntityPlayerMP)list.get(i)).func_70005_c_();
+            s = s + ((EntityPlayerMP)list.get(i)).getName();
 
-            if (p_181058_1_)
+            if (includeUUIDs)
             {
-                s = s + " (" + ((EntityPlayerMP)list.get(i)).func_189512_bd() + ")";
+                s = s + " (" + ((EntityPlayerMP)list.get(i)).getCachedUniqueIdString() + ")";
             }
         }
 
         return s;
     }
 
-    public String[] func_72369_d()
+    public String[] getOnlinePlayerNames()
     {
-        String[] astring = new String[this.field_72404_b.size()];
+        String[] astring = new String[this.playerEntityList.size()];
 
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            astring[i] = ((EntityPlayerMP)this.field_72404_b.get(i)).func_70005_c_();
+            astring[i] = ((EntityPlayerMP)this.playerEntityList.get(i)).getName();
         }
 
         return astring;
     }
 
-    public GameProfile[] func_152600_g()
+    public GameProfile[] getOnlinePlayerProfiles()
     {
-        GameProfile[] agameprofile = new GameProfile[this.field_72404_b.size()];
+        GameProfile[] agameprofile = new GameProfile[this.playerEntityList.size()];
 
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            agameprofile[i] = ((EntityPlayerMP)this.field_72404_b.get(i)).func_146103_bH();
+            agameprofile[i] = ((EntityPlayerMP)this.playerEntityList.get(i)).getGameProfile();
         }
 
         return agameprofile;
     }
 
-    public UserListBans func_152608_h()
+    public UserListBans getBannedPlayers()
     {
-        return this.field_72401_g;
+        return this.bannedPlayers;
     }
 
-    public UserListIPBans func_72363_f()
+    public UserListIPBans getBannedIPs()
     {
-        return this.field_72413_h;
+        return this.bannedIPs;
     }
 
-    public void func_152605_a(GameProfile p_152605_1_)
+    public void addOp(GameProfile profile)
     {
-        int i = this.field_72400_f.func_110455_j();
-        this.field_72414_i.func_152687_a(new UserListOpsEntry(p_152605_1_, this.field_72400_f.func_110455_j(), this.field_72414_i.func_183026_b(p_152605_1_)));
-        this.func_187245_a(this.func_177451_a(p_152605_1_.getId()), i);
+        int i = this.mcServer.getOpPermissionLevel();
+        this.ops.addEntry(new UserListOpsEntry(profile, this.mcServer.getOpPermissionLevel(), this.ops.bypassesPlayerLimit(profile)));
+        // CraftBukkit start
+        Player player = mcServer.server.getPlayer(profile.getId());
+        if (player != null) {
+            player.recalculatePermissions();
+        }
+        // CraftBukkit end
+        this.sendPlayerPermissionLevel(this.getPlayerByUUID(profile.getId()), i);
     }
 
-    public void func_152610_b(GameProfile p_152610_1_)
+    public void removeOp(GameProfile profile)
     {
-        this.field_72414_i.func_152684_c(p_152610_1_);
-        this.func_187245_a(this.func_177451_a(p_152610_1_.getId()), 0);
+        this.ops.removeEntry(profile);
+        this.sendPlayerPermissionLevel(this.getPlayerByUUID(profile.getId()), 0);
+        // CraftBukkit start
+        Player player = mcServer.server.getPlayer(profile.getId());
+        if (player != null) {
+            player.recalculatePermissions();
+        }
+        // CraftBukkit end
     }
 
-    private void func_187245_a(EntityPlayerMP p_187245_1_, int p_187245_2_)
+    private void sendPlayerPermissionLevel(EntityPlayerMP player, int permLevel)
     {
-        if (p_187245_1_ != null && p_187245_1_.field_71135_a != null)
+        if (player != null && player.connection != null)
         {
             byte b0;
 
-            if (p_187245_2_ <= 0)
+            if (permLevel <= 0)
             {
                 b0 = 24;
             }
-            else if (p_187245_2_ >= 4)
+            else if (permLevel >= 4)
             {
                 b0 = 28;
             }
             else
             {
-                b0 = (byte)(24 + p_187245_2_);
+                b0 = (byte)(24 + permLevel);
             }
 
-            p_187245_1_.field_71135_a.func_147359_a(new SPacketEntityStatus(p_187245_1_, b0));
+            player.connection.sendPacket(new SPacketEntityStatus(player, b0));
         }
     }
 
-    public boolean func_152607_e(GameProfile p_152607_1_)
+    public boolean canJoin(GameProfile profile)
     {
-        return !this.field_72409_l || this.field_72414_i.func_152692_d(p_152607_1_) || this.field_72411_j.func_152692_d(p_152607_1_);
+        return !this.whiteListEnforced || this.ops.hasEntry(profile) || this.whiteListedPlayers.hasEntry(profile);
     }
 
-    public boolean func_152596_g(GameProfile p_152596_1_)
+    public boolean canSendCommands(GameProfile profile)
     {
-        return this.field_72414_i.func_152692_d(p_152596_1_) || this.field_72400_f.func_71264_H() && this.field_72400_f.field_71305_c[0].func_72912_H().func_76086_u() && this.field_72400_f.func_71214_G().equalsIgnoreCase(p_152596_1_.getName()) || this.field_72407_n;
+        return this.ops.hasEntry(profile) || this.mcServer.isSinglePlayer() && this.mcServer.worlds[0].getWorldInfo().areCommandsAllowed() && this.mcServer.getServerOwner().equalsIgnoreCase(profile.getName()) || this.commandsAllowedForAll;
     }
 
     @Nullable
-    public EntityPlayerMP func_152612_a(String p_152612_1_)
+    public EntityPlayerMP getPlayerByUsername(String username)
     {
-        for (EntityPlayerMP entityplayermp : this.field_72404_b)
+        for (EntityPlayerMP entityplayermp : this.playerEntityList)
         {
-            if (entityplayermp.func_70005_c_().equalsIgnoreCase(p_152612_1_))
+            if (entityplayermp.getName().equalsIgnoreCase(username))
             {
                 return entityplayermp;
             }
@@ -818,118 +1047,118 @@
         return null;
     }
 
-    public void func_148543_a(@Nullable EntityPlayer p_148543_1_, double p_148543_2_, double p_148543_4_, double p_148543_6_, double p_148543_8_, int p_148543_10_, Packet<?> p_148543_11_)
+    public void sendToAllNearExcept(@Nullable EntityPlayer except, double x, double y, double z, double radius, int dimension, Packet<?> packetIn)
     {
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_72404_b.get(i);
+            EntityPlayerMP entityplayermp = (EntityPlayerMP)this.playerEntityList.get(i);
 
-            if (entityplayermp != p_148543_1_ && entityplayermp.field_71093_bK == p_148543_10_)
+            if (entityplayermp != except && entityplayermp.dimension == dimension)
             {
-                double d0 = p_148543_2_ - entityplayermp.field_70165_t;
-                double d1 = p_148543_4_ - entityplayermp.field_70163_u;
-                double d2 = p_148543_6_ - entityplayermp.field_70161_v;
+                double d0 = x - entityplayermp.posX;
+                double d1 = y - entityplayermp.posY;
+                double d2 = z - entityplayermp.posZ;
 
-                if (d0 * d0 + d1 * d1 + d2 * d2 < p_148543_8_ * p_148543_8_)
+                if (d0 * d0 + d1 * d1 + d2 * d2 < radius * radius)
                 {
-                    entityplayermp.field_71135_a.func_147359_a(p_148543_11_);
+                    entityplayermp.connection.sendPacket(packetIn);
                 }
             }
         }
     }
 
-    public void func_72389_g()
+    public void saveAllPlayerData()
     {
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
+        for (int i = 0; i < this.playerEntityList.size(); ++i)
         {
-            this.func_72391_b((EntityPlayerMP)this.field_72404_b.get(i));
+            this.writePlayerData((EntityPlayerMP)this.playerEntityList.get(i));
         }
     }
 
-    public void func_152601_d(GameProfile p_152601_1_)
+    public void addWhitelistedPlayer(GameProfile profile)
     {
-        this.field_72411_j.func_152687_a(new UserListWhitelistEntry(p_152601_1_));
+        this.whiteListedPlayers.addEntry(new UserListWhitelistEntry(profile));
     }
 
-    public void func_152597_c(GameProfile p_152597_1_)
+    public void removePlayerFromWhitelist(GameProfile profile)
     {
-        this.field_72411_j.func_152684_c(p_152597_1_);
+        this.whiteListedPlayers.removeEntry(profile);
     }
 
-    public UserListWhitelist func_152599_k()
+    public UserListWhitelist getWhitelistedPlayers()
     {
-        return this.field_72411_j;
+        return this.whiteListedPlayers;
     }
 
-    public String[] func_152598_l()
+    public String[] getWhitelistedPlayerNames()
     {
-        return this.field_72411_j.func_152685_a();
+        return this.whiteListedPlayers.getKeys();
     }
 
-    public UserListOps func_152603_m()
+    public UserListOps getOppedPlayers()
     {
-        return this.field_72414_i;
+        return this.ops;
     }
 
-    public String[] func_152606_n()
+    public String[] getOppedPlayerNames()
     {
-        return this.field_72414_i.func_152685_a();
+        return this.ops.getKeys();
     }
 
-    public void func_187244_a()
+    public void reloadWhitelist()
     {
     }
 
-    public void func_72354_b(EntityPlayerMP p_72354_1_, WorldServer p_72354_2_)
+    public void updateTimeAndWeatherForPlayer(EntityPlayerMP playerIn, WorldServer worldIn)
     {
-        WorldBorder worldborder = this.field_72400_f.field_71305_c[0].func_175723_af();
-        p_72354_1_.field_71135_a.func_147359_a(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.INITIALIZE));
-        p_72354_1_.field_71135_a.func_147359_a(new SPacketTimeUpdate(p_72354_2_.func_82737_E(), p_72354_2_.func_72820_D(), p_72354_2_.func_82736_K().func_82766_b("doDaylightCycle")));
-        BlockPos blockpos = p_72354_2_.func_175694_M();
-        p_72354_1_.field_71135_a.func_147359_a(new SPacketSpawnPosition(blockpos));
+        WorldBorder worldborder = this.mcServer.worlds[0].getWorldBorder();
+        playerIn.connection.sendPacket(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.INITIALIZE));
+        playerIn.connection.sendPacket(new SPacketTimeUpdate(worldIn.getTotalWorldTime(), worldIn.getWorldTime(), worldIn.getGameRules().getBoolean("doDaylightCycle")));
+        BlockPos blockpos = worldIn.getSpawnPoint();
+        playerIn.connection.sendPacket(new SPacketSpawnPosition(blockpos));
 
-        if (p_72354_2_.func_72896_J())
+        if (worldIn.isRaining())
         {
-            p_72354_1_.field_71135_a.func_147359_a(new SPacketChangeGameState(1, 0.0F));
-            p_72354_1_.field_71135_a.func_147359_a(new SPacketChangeGameState(7, p_72354_2_.func_72867_j(1.0F)));
-            p_72354_1_.field_71135_a.func_147359_a(new SPacketChangeGameState(8, p_72354_2_.func_72819_i(1.0F)));
+            playerIn.connection.sendPacket(new SPacketChangeGameState(1, 0.0F));
+            playerIn.connection.sendPacket(new SPacketChangeGameState(7, worldIn.getRainStrength(1.0F)));
+            playerIn.connection.sendPacket(new SPacketChangeGameState(8, worldIn.getThunderStrength(1.0F)));
         }
     }
 
-    public void func_72385_f(EntityPlayerMP p_72385_1_)
+    public void syncPlayerInventory(EntityPlayerMP playerIn)
     {
-        p_72385_1_.func_71120_a(p_72385_1_.field_71069_bz);
-        p_72385_1_.func_71118_n();
-        p_72385_1_.field_71135_a.func_147359_a(new SPacketHeldItemChange(p_72385_1_.field_71071_by.field_70461_c));
+        playerIn.sendContainerToPlayer(playerIn.inventoryContainer);
+        playerIn.setPlayerHealthUpdated();
+        playerIn.connection.sendPacket(new SPacketHeldItemChange(playerIn.inventory.currentItem));
     }
 
-    public int func_72394_k()
+    public int getCurrentPlayerCount()
     {
-        return this.field_72404_b.size();
+        return this.playerEntityList.size();
     }
 
-    public int func_72352_l()
+    public int getMaxPlayers()
     {
-        return this.field_72405_c;
+        return this.maxPlayers;
     }
 
-    public String[] func_72373_m()
+    public String[] getAvailablePlayerDat()
     {
-        return this.field_72400_f.field_71305_c[0].func_72860_G().func_75756_e().func_75754_f();
+        return this.mcServer.worlds[0].getSaveHandler().getPlayerNBTManager().getAvailablePlayerDat();
     }
 
-    public void func_72371_a(boolean p_72371_1_)
+    public void setWhiteListEnabled(boolean whitelistEnabled)
     {
-        this.field_72409_l = p_72371_1_;
+        this.whiteListEnforced = whitelistEnabled;
     }
 
-    public List<EntityPlayerMP> func_72382_j(String p_72382_1_)
+    public List<EntityPlayerMP> getPlayersMatchingAddress(String address)
     {
         List<EntityPlayerMP> list = Lists.<EntityPlayerMP>newArrayList();
 
-        for (EntityPlayerMP entityplayermp : this.field_72404_b)
+        for (EntityPlayerMP entityplayermp : this.playerEntityList)
         {
-            if (entityplayermp.func_71114_r().equals(p_72382_1_))
+            if (entityplayermp.getPlayerIP().equals(address))
             {
                 list.add(entityplayermp);
             }
@@ -938,80 +1167,87 @@
         return list;
     }
 
-    public int func_72395_o()
+    public int getViewDistance()
     {
-        return this.field_72402_d;
+        return this.viewDistance;
     }
 
-    public MinecraftServer func_72365_p()
+    public MinecraftServer getServerInstance()
     {
-        return this.field_72400_f;
+        return this.mcServer;
     }
 
-    public NBTTagCompound func_72378_q()
+    public NBTTagCompound getHostPlayerData()
     {
         return null;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_152604_a(GameType p_152604_1_)
+    public void setGameType(GameType gameModeIn)
     {
-        this.field_72410_m = p_152604_1_;
+        this.gameType = gameModeIn;
     }
 
-    private void func_72381_a(EntityPlayerMP p_72381_1_, EntityPlayerMP p_72381_2_, World p_72381_3_)
+    private void setPlayerGameTypeBasedOnOther(EntityPlayerMP target, EntityPlayerMP source, World worldIn)
     {
-        if (p_72381_2_ != null)
+        if (source != null)
         {
-            p_72381_1_.field_71134_c.func_73076_a(p_72381_2_.field_71134_c.func_73081_b());
+            target.interactionManager.setGameType(source.interactionManager.getGameType());
         }
-        else if (this.field_72410_m != null)
+        else if (this.gameType != null)
         {
-            p_72381_1_.field_71134_c.func_73076_a(this.field_72410_m);
+            target.interactionManager.setGameType(this.gameType);
         }
 
-        p_72381_1_.field_71134_c.func_73077_b(p_72381_3_.func_72912_H().func_76077_q());
+        target.interactionManager.initializeGameType(worldIn.getWorldInfo().getGameType());
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_72387_b(boolean p_72387_1_)
+    public void setCommandsAllowedForAll(boolean p_72387_1_)
     {
-        this.field_72407_n = p_72387_1_;
+        this.commandsAllowedForAll = p_72387_1_;
     }
 
-    public void func_72392_r()
+    public void removeAllPlayers()
     {
-        for (int i = 0; i < this.field_72404_b.size(); ++i)
-        {
-            ((EntityPlayerMP)this.field_72404_b.get(i)).field_71135_a.func_147360_c("Server closed");
+        // CraftBukkit start - disconnect safely
+        for (EntityPlayerMP player : this.playerEntityList) {
+            player.connection.disconnect(this.mcServer.server.getShutdownMessage()); // CraftBukkit - add custom shutdown message
         }
+        // CraftBukkit end
     }
-
-    public void func_148544_a(ITextComponent p_148544_1_, boolean p_148544_2_)
+    // CraftBukkit start
+    public void sendMessage(ITextComponent[] iChatBaseComponents) {
+        for (ITextComponent component : iChatBaseComponents) {
+            sendMessage(component, true);
+        }
+    }
+    // CraftBukkit end
+    public void sendMessage(ITextComponent component, boolean isSystem)
     {
-        this.field_72400_f.func_145747_a(p_148544_1_);
-        byte b0 = (byte)(p_148544_2_ ? 1 : 0);
-        this.func_148540_a(new SPacketChat(p_148544_1_, b0));
+        this.mcServer.sendMessage(component);
+        byte b0 = (byte)(isSystem ? 1 : 0);
+        this.sendPacketToAllPlayers(new SPacketChat(component, b0));
     }
 
-    public void func_148539_a(ITextComponent p_148539_1_)
+    public void sendMessage(ITextComponent component)
     {
-        this.func_148544_a(p_148539_1_, true);
+        this.sendMessage(component, true);
     }
 
-    public StatisticsManagerServer func_152602_a(EntityPlayer p_152602_1_)
+    public StatisticsManagerServer getPlayerStatsFile(EntityPlayer playerIn)
     {
-        UUID uuid = p_152602_1_.func_110124_au();
-        StatisticsManagerServer statisticsmanagerserver = uuid == null ? null : (StatisticsManagerServer)this.field_148547_k.get(uuid);
+        UUID uuid = playerIn.getUniqueID();
+        StatisticsManagerServer statisticsmanagerserver = uuid == null ? null : (StatisticsManagerServer)this.playerStatFiles.get(uuid);
 
         if (statisticsmanagerserver == null)
         {
-            File file1 = new File(this.field_72400_f.func_71218_a(0).func_72860_G().func_75765_b(), "stats");
+            File file1 = new File(this.mcServer.worldServerForDimension(0).getSaveHandler().getWorldDirectory(), "stats");
             File file2 = new File(file1, uuid + ".json");
 
             if (!file2.exists())
             {
-                File file3 = new File(file1, p_152602_1_.func_70005_c_() + ".json");
+                File file3 = new File(file1, playerIn.getName() + ".json");
 
                 if (file3.exists() && file3.isFile())
                 {
@@ -1019,49 +1255,49 @@
                 }
             }
 
-            statisticsmanagerserver = new StatisticsManagerServer(this.field_72400_f, file2);
-            statisticsmanagerserver.func_150882_a();
-            this.field_148547_k.put(uuid, statisticsmanagerserver);
+            statisticsmanagerserver = new StatisticsManagerServer(this.mcServer, file2);
+            statisticsmanagerserver.readStatFile();
+            this.playerStatFiles.put(uuid, statisticsmanagerserver);
         }
 
         return statisticsmanagerserver;
     }
 
-    public void func_152611_a(int p_152611_1_)
+    public void setViewDistance(int distance)
     {
-        this.field_72402_d = p_152611_1_;
+        this.viewDistance = distance;
 
-        if (this.field_72400_f.field_71305_c != null)
+        if (this.mcServer.worlds != null)
         {
-            for (WorldServer worldserver : this.field_72400_f.field_71305_c)
+            for (WorldServer worldserver : this.mcServer.worlds)
             {
                 if (worldserver != null)
                 {
-                    worldserver.func_184164_w().func_152622_a(p_152611_1_);
-                    worldserver.func_73039_n().func_187252_a(p_152611_1_);
+                    worldserver.getPlayerChunkMap().setPlayerViewRadius(distance);
+                    worldserver.getEntityTracker().setViewDistance(distance);
                 }
             }
         }
     }
 
-    public List<EntityPlayerMP> func_181057_v()
+    public List<EntityPlayerMP> getPlayers()
     {
-        return this.field_72404_b;
+        return this.playerEntityList;
     }
 
-    public EntityPlayerMP func_177451_a(UUID p_177451_1_)
+    public EntityPlayerMP getPlayerByUUID(UUID playerUUID)
     {
-        return (EntityPlayerMP)this.field_177454_f.get(p_177451_1_);
+        return (EntityPlayerMP)this.uuidToPlayerMap.get(playerUUID);
     }
 
-    public boolean func_183023_f(GameProfile p_183023_1_)
+    public boolean bypassesPlayerLimit(GameProfile profile)
     {
         return false;
     }
 
     @SideOnly(Side.SERVER)
-    public boolean func_72383_n()
+    public boolean isWhiteListEnabled()
     {
-        return this.field_72409_l;
+        return this.whiteListEnforced;
     }
 }
