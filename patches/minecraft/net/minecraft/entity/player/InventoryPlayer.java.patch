--- ../src-base/minecraft/net/minecraft/entity/player/InventoryPlayer.java
+++ ../src-work/minecraft/net/minecraft/entity/player/InventoryPlayer.java
@@ -1,5 +1,6 @@
 package net.minecraft.entity.player;
 
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
 import java.util.List;
@@ -9,6 +10,7 @@
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.crash.ICrashReportDetail;
 import net.minecraft.inventory.IInventory;
+import net.minecraft.inventory.InventoryBasic;
 import net.minecraft.inventory.ItemStackHelper;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemArmor;
@@ -23,50 +25,107 @@
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
-public class InventoryPlayer implements IInventory
+public class InventoryPlayer extends InventoryBasic implements IInventory
 {
-    public final NonNullList<ItemStack> field_70462_a = NonNullList.<ItemStack>func_191197_a(36, ItemStack.field_190927_a);
-    public final NonNullList<ItemStack> field_70460_b = NonNullList.<ItemStack>func_191197_a(4, ItemStack.field_190927_a);
-    public final NonNullList<ItemStack> field_184439_c = NonNullList.<ItemStack>func_191197_a(1, ItemStack.field_190927_a);
-    private final List<NonNullList<ItemStack>> field_184440_g;
-    public int field_70461_c;
-    public EntityPlayer field_70458_d;
-    private ItemStack field_70457_g;
-    public boolean field_70459_e;
+    public final NonNullList<ItemStack> mainInventory = NonNullList.<ItemStack>withSize(36, ItemStack.EMPTY);
+    public final NonNullList<ItemStack> armorInventory = NonNullList.<ItemStack>withSize(4, ItemStack.EMPTY);
+    public final NonNullList<ItemStack> offHandInventory = NonNullList.<ItemStack>withSize(1, ItemStack.EMPTY);
+    private final List<NonNullList<ItemStack>> allInventories;
+    public int currentItem;
+    public EntityPlayer player;
+    private ItemStack itemStack;
+    public boolean inventoryChanged;
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new ArrayList<HumanEntity>();
+    private int maxStack = 64;
 
-    public InventoryPlayer(EntityPlayer p_i1750_1_)
+    public List<ItemStack> getContents() {
+        List<ItemStack> combined = new ArrayList<ItemStack>(mainInventory.size() + armorInventory.size() + offHandInventory.size());
+        for (List<ItemStack> sub : this.allInventories) {
+            combined.addAll(sub);
+        }
+
+        return combined;
+    }
+
+    public List<ItemStack> getArmorContents() {
+        return this.armorInventory;
+    }
+
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public org.bukkit.inventory.InventoryHolder getOwner() {
+        return this.player.getBukkitEntity();
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+
+    // CraftBukkit end
+    // CraftBukkit start - Watch method above! :D
+    public int canHold(ItemStack itemstack) {
+        int remains = itemstack.getCount();
+        for (int i = 0; i < this.mainInventory.size(); ++i) {
+            ItemStack itemstack1 = this.getStackInSlot(i);
+            if (itemstack1.isEmpty()) return itemstack.getCount();
+
+            // Taken from firstPartial(ItemStack)
+            if (!itemstack1.isEmpty() && itemstack1.getItem() == itemstack.getItem() && itemstack1.isStackable() && itemstack1.getCount() < itemstack1.getMaxStackSize() && itemstack1.getCount() < this.getInventoryStackLimit() && (!itemstack1.getHasSubtypes() || itemstack1.getMetadata() == itemstack.getMetadata()) && ItemStack.areItemStackTagsEqual(itemstack1, itemstack)) {
+                remains -= (itemstack1.getMaxStackSize() < this.getInventoryStackLimit() ? itemstack1.getMaxStackSize() : this.getInventoryStackLimit()) - itemstack1.getCount();
+            }
+            if (remains <= 0) return itemstack.getCount();
+        }
+        return itemstack.getCount() - remains;
+    }
+    // CraftBukkit end
+    public InventoryPlayer(EntityPlayer playerIn)
     {
-        this.field_184440_g = Arrays.<NonNullList<ItemStack>>asList(new NonNullList[] {this.field_70462_a, this.field_70460_b, this.field_184439_c});
-        this.field_70457_g = ItemStack.field_190927_a;
-        this.field_70458_d = p_i1750_1_;
+        super(playerIn.getName(),true,41);
+        this.allInventories = Arrays.<NonNullList<ItemStack>>asList(new NonNullList[] {this.mainInventory, this.armorInventory, this.offHandInventory});
+        this.itemStack = ItemStack.EMPTY;
+        this.player = playerIn;
     }
 
-    public ItemStack func_70448_g()
+    public ItemStack getCurrentItem()
     {
-        return func_184435_e(this.field_70461_c) ? (ItemStack)this.field_70462_a.get(this.field_70461_c) : ItemStack.field_190927_a;
+        return isHotbar(this.currentItem) ? (ItemStack)this.mainInventory.get(this.currentItem) : ItemStack.EMPTY;
     }
 
-    public static int func_70451_h()
+    public static int getHotbarSize()
     {
         return 9;
     }
 
-    private boolean func_184436_a(ItemStack p_184436_1_, ItemStack p_184436_2_)
+    private boolean canMergeStacks(ItemStack stack1, ItemStack stack2)
     {
-        return !p_184436_1_.func_190926_b() && this.func_184431_b(p_184436_1_, p_184436_2_) && p_184436_1_.func_77985_e() && p_184436_1_.func_190916_E() < p_184436_1_.func_77976_d() && p_184436_1_.func_190916_E() < this.func_70297_j_();
+        return !stack1.isEmpty() && this.stackEqualExact(stack1, stack2) && stack1.isStackable() && stack1.getCount() < stack1.getMaxStackSize() && stack1.getCount() < this.getInventoryStackLimit();
     }
 
-    private boolean func_184431_b(ItemStack p_184431_1_, ItemStack p_184431_2_)
+    private boolean stackEqualExact(ItemStack stack1, ItemStack stack2)
     {
-        return p_184431_1_.func_77973_b() == p_184431_2_.func_77973_b() && (!p_184431_1_.func_77981_g() || p_184431_1_.func_77960_j() == p_184431_2_.func_77960_j()) && ItemStack.func_77970_a(p_184431_1_, p_184431_2_);
+        return stack1.getItem() == stack2.getItem() && (!stack1.getHasSubtypes() || stack1.getMetadata() == stack2.getMetadata()) && ItemStack.areItemStackTagsEqual(stack1, stack2);
     }
 
-    public int func_70447_i()
+    public int getFirstEmptyStack()
     {
-        for (int i = 0; i < this.field_70462_a.size(); ++i)
+        for (int i = 0; i < this.mainInventory.size(); ++i)
         {
-            if (((ItemStack)this.field_70462_a.get(i)).func_190926_b())
+            if (((ItemStack)this.mainInventory.get(i)).isEmpty())
             {
                 return i;
             }
@@ -76,58 +135,58 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_184434_a(ItemStack p_184434_1_)
+    public void setPickedItemStack(ItemStack stack)
     {
-        int i = this.func_184429_b(p_184434_1_);
+        int i = this.getSlotFor(stack);
 
-        if (func_184435_e(i))
+        if (isHotbar(i))
         {
-            this.field_70461_c = i;
+            this.currentItem = i;
         }
         else
         {
             if (i == -1)
             {
-                this.field_70461_c = this.func_184433_k();
+                this.currentItem = this.getBestHotbarSlot();
 
-                if (!((ItemStack)this.field_70462_a.get(this.field_70461_c)).func_190926_b())
+                if (!((ItemStack)this.mainInventory.get(this.currentItem)).isEmpty())
                 {
-                    int j = this.func_70447_i();
+                    int j = this.getFirstEmptyStack();
 
                     if (j != -1)
                     {
-                        this.field_70462_a.set(j, this.field_70462_a.get(this.field_70461_c));
+                        this.mainInventory.set(j, this.mainInventory.get(this.currentItem));
                     }
                 }
 
-                this.field_70462_a.set(this.field_70461_c, p_184434_1_);
+                this.mainInventory.set(this.currentItem, stack);
             }
             else
             {
-                this.func_184430_d(i);
+                this.pickItem(i);
             }
         }
     }
 
-    public void func_184430_d(int p_184430_1_)
+    public void pickItem(int index)
     {
-        this.field_70461_c = this.func_184433_k();
-        ItemStack itemstack = (ItemStack)this.field_70462_a.get(this.field_70461_c);
-        this.field_70462_a.set(this.field_70461_c, this.field_70462_a.get(p_184430_1_));
-        this.field_70462_a.set(p_184430_1_, itemstack);
+        this.currentItem = this.getBestHotbarSlot();
+        ItemStack itemstack = (ItemStack)this.mainInventory.get(this.currentItem);
+        this.mainInventory.set(this.currentItem, this.mainInventory.get(index));
+        this.mainInventory.set(index, itemstack);
     }
 
-    public static boolean func_184435_e(int p_184435_0_)
+    public static boolean isHotbar(int index)
     {
-        return p_184435_0_ >= 0 && p_184435_0_ < 9;
+        return index >= 0 && index < 9;
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_184429_b(ItemStack p_184429_1_)
+    public int getSlotFor(ItemStack stack)
     {
-        for (int i = 0; i < this.field_70462_a.size(); ++i)
+        for (int i = 0; i < this.mainInventory.size(); ++i)
         {
-            if (!((ItemStack)this.field_70462_a.get(i)).func_190926_b() && this.func_184431_b(p_184429_1_, (ItemStack)this.field_70462_a.get(i)))
+            if (!((ItemStack)this.mainInventory.get(i)).isEmpty() && this.stackEqualExact(stack, (ItemStack)this.mainInventory.get(i)))
             {
                 return i;
             }
@@ -136,13 +195,13 @@
         return -1;
     }
 
-    public int func_184433_k()
+    public int getBestHotbarSlot()
     {
         for (int i = 0; i < 9; ++i)
         {
-            int j = (this.field_70461_c + i) % 9;
+            int j = (this.currentItem + i) % 9;
 
-            if (((ItemStack)this.field_70462_a.get(j)).func_190926_b())
+            if (((ItemStack)this.mainInventory.get(j)).isEmpty())
             {
                 return j;
             }
@@ -150,64 +209,64 @@
 
         for (int k = 0; k < 9; ++k)
         {
-            int l = (this.field_70461_c + k) % 9;
+            int l = (this.currentItem + k) % 9;
 
-            if (!((ItemStack)this.field_70462_a.get(l)).func_77948_v())
+            if (!((ItemStack)this.mainInventory.get(l)).isItemEnchanted())
             {
                 return l;
             }
         }
 
-        return this.field_70461_c;
+        return this.currentItem;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70453_c(int p_70453_1_)
+    public void changeCurrentItem(int direction)
     {
-        if (p_70453_1_ > 0)
+        if (direction > 0)
         {
-            p_70453_1_ = 1;
+            direction = 1;
         }
 
-        if (p_70453_1_ < 0)
+        if (direction < 0)
         {
-            p_70453_1_ = -1;
+            direction = -1;
         }
 
-        for (this.field_70461_c -= p_70453_1_; this.field_70461_c < 0; this.field_70461_c += 9)
+        for (this.currentItem -= direction; this.currentItem < 0; this.currentItem += 9)
         {
             ;
         }
 
-        while (this.field_70461_c >= 9)
+        while (this.currentItem >= 9)
         {
-            this.field_70461_c -= 9;
+            this.currentItem -= 9;
         }
     }
 
-    public int func_174925_a(@Nullable Item p_174925_1_, int p_174925_2_, int p_174925_3_, @Nullable NBTTagCompound p_174925_4_)
+    public int clearMatchingItems(@Nullable Item itemIn, int metadataIn, int removeCount, @Nullable NBTTagCompound itemNBT)
     {
         int i = 0;
 
-        for (int j = 0; j < this.func_70302_i_(); ++j)
+        for (int j = 0; j < this.getSizeInventory(); ++j)
         {
-            ItemStack itemstack = this.func_70301_a(j);
+            ItemStack itemstack = this.getStackInSlot(j);
 
-            if (!itemstack.func_190926_b() && (p_174925_1_ == null || itemstack.func_77973_b() == p_174925_1_) && (p_174925_2_ <= -1 || itemstack.func_77960_j() == p_174925_2_) && (p_174925_4_ == null || NBTUtil.func_181123_a(p_174925_4_, itemstack.func_77978_p(), true)))
+            if (!itemstack.isEmpty() && (itemIn == null || itemstack.getItem() == itemIn) && (metadataIn <= -1 || itemstack.getMetadata() == metadataIn) && (itemNBT == null || NBTUtil.areNBTEquals(itemNBT, itemstack.getTagCompound(), true)))
             {
-                int k = p_174925_3_ <= 0 ? itemstack.func_190916_E() : Math.min(p_174925_3_ - i, itemstack.func_190916_E());
+                int k = removeCount <= 0 ? itemstack.getCount() : Math.min(removeCount - i, itemstack.getCount());
                 i += k;
 
-                if (p_174925_3_ != 0)
+                if (removeCount != 0)
                 {
-                    itemstack.func_190918_g(k);
+                    itemstack.shrink(k);
 
-                    if (itemstack.func_190926_b())
+                    if (itemstack.isEmpty())
                     {
-                        this.func_70299_a(j, ItemStack.field_190927_a);
+                        this.setInventorySlotContents(j, ItemStack.EMPTY);
                     }
 
-                    if (p_174925_3_ > 0 && i >= p_174925_3_)
+                    if (removeCount > 0 && i >= removeCount)
                     {
                         return i;
                     }
@@ -215,36 +274,36 @@
             }
         }
 
-        if (!this.field_70457_g.func_190926_b())
+        if (!this.itemStack.isEmpty())
         {
-            if (p_174925_1_ != null && this.field_70457_g.func_77973_b() != p_174925_1_)
+            if (itemIn != null && this.itemStack.getItem() != itemIn)
             {
                 return i;
             }
 
-            if (p_174925_2_ > -1 && this.field_70457_g.func_77960_j() != p_174925_2_)
+            if (metadataIn > -1 && this.itemStack.getMetadata() != metadataIn)
             {
                 return i;
             }
 
-            if (p_174925_4_ != null && !NBTUtil.func_181123_a(p_174925_4_, this.field_70457_g.func_77978_p(), true))
+            if (itemNBT != null && !NBTUtil.areNBTEquals(itemNBT, this.itemStack.getTagCompound(), true))
             {
                 return i;
             }
 
-            int l = p_174925_3_ <= 0 ? this.field_70457_g.func_190916_E() : Math.min(p_174925_3_ - i, this.field_70457_g.func_190916_E());
+            int l = removeCount <= 0 ? this.itemStack.getCount() : Math.min(removeCount - i, this.itemStack.getCount());
             i += l;
 
-            if (p_174925_3_ != 0)
+            if (removeCount != 0)
             {
-                this.field_70457_g.func_190918_g(l);
+                this.itemStack.shrink(l);
 
-                if (this.field_70457_g.func_190926_b())
+                if (this.itemStack.isEmpty())
                 {
-                    this.field_70457_g = ItemStack.field_190927_a;
+                    this.itemStack = ItemStack.EMPTY;
                 }
 
-                if (p_174925_3_ > 0 && i >= p_174925_3_)
+                if (removeCount > 0 && i >= removeCount)
                 {
                     return i;
                 }
@@ -254,15 +313,15 @@
         return i;
     }
 
-    private int func_70452_e(ItemStack p_70452_1_)
+    private int storePartialItemStack(ItemStack itemStackIn)
     {
-        Item item = p_70452_1_.func_77973_b();
-        int i = p_70452_1_.func_190916_E();
-        int j = this.func_70432_d(p_70452_1_);
+        Item item = itemStackIn.getItem();
+        int i = itemStackIn.getCount();
+        int j = this.storeItemStack(itemStackIn);
 
         if (j == -1)
         {
-            j = this.func_70447_i();
+            j = this.getFirstEmptyStack();
         }
 
         if (j == -1)
@@ -271,30 +330,31 @@
         }
         else
         {
-            ItemStack itemstack = this.func_70301_a(j);
+            ItemStack itemstack = this.getStackInSlot(j);
 
-            if (itemstack.func_190926_b())
+            if (itemstack.isEmpty())
             {
-                itemstack = new ItemStack(item, 0, p_70452_1_.func_77960_j());
+                itemstack = itemStackIn.copy(); // Forge: Replace Item clone above to preserve item capabilities when picking the item up.
+                itemstack.setCount(0);
 
-                if (p_70452_1_.func_77942_o())
+                if (itemStackIn.hasTagCompound())
                 {
-                    itemstack.func_77982_d(p_70452_1_.func_77978_p().func_74737_b());
+                    itemstack.setTagCompound(itemStackIn.getTagCompound().copy());
                 }
 
-                this.func_70299_a(j, itemstack);
+                this.setInventorySlotContents(j, itemstack);
             }
 
             int k = i;
 
-            if (i > itemstack.func_77976_d() - itemstack.func_190916_E())
+            if (i > itemstack.getMaxStackSize() - itemstack.getCount())
             {
-                k = itemstack.func_77976_d() - itemstack.func_190916_E();
+                k = itemstack.getMaxStackSize() - itemstack.getCount();
             }
 
-            if (k > this.func_70297_j_() - itemstack.func_190916_E())
+            if (k > this.getInventoryStackLimit() - itemstack.getCount())
             {
-                k = this.func_70297_j_() - itemstack.func_190916_E();
+                k = this.getInventoryStackLimit() - itemstack.getCount();
             }
 
             if (k == 0)
@@ -304,28 +364,28 @@
             else
             {
                 i = i - k;
-                itemstack.func_190917_f(k);
-                itemstack.func_190915_d(5);
+                itemstack.grow(k);
+                itemstack.setAnimationsToGo(5);
                 return i;
             }
         }
     }
 
-    private int func_70432_d(ItemStack p_70432_1_)
+    private int storeItemStack(ItemStack itemStackIn)
     {
-        if (this.func_184436_a(this.func_70301_a(this.field_70461_c), p_70432_1_))
+        if (this.canMergeStacks(this.getStackInSlot(this.currentItem), itemStackIn))
         {
-            return this.field_70461_c;
+            return this.currentItem;
         }
-        else if (this.func_184436_a(this.func_70301_a(40), p_70432_1_))
+        else if (this.canMergeStacks(this.getStackInSlot(40), itemStackIn))
         {
             return 40;
         }
         else
         {
-            for (int i = 0; i < this.field_70462_a.size(); ++i)
+            for (int i = 0; i < this.mainInventory.size(); ++i)
             {
-                if (this.func_184436_a((ItemStack)this.field_70462_a.get(i), p_70432_1_))
+                if (this.canMergeStacks((ItemStack)this.mainInventory.get(i), itemStackIn))
                 {
                     return i;
                 }
@@ -335,23 +395,31 @@
         }
     }
 
-    public void func_70429_k()
+    public void decrementAnimations()
     {
-        for (NonNullList<ItemStack> nonnulllist : this.field_184440_g)
+        for (NonNullList<ItemStack> nonnulllist : this.allInventories)
         {
             for (int i = 0; i < nonnulllist.size(); ++i)
             {
-                if (!((ItemStack)nonnulllist.get(i)).func_190926_b())
+                if (!((ItemStack)nonnulllist.get(i)).isEmpty())
                 {
-                    ((ItemStack)nonnulllist.get(i)).func_77945_a(this.field_70458_d.field_70170_p, this.field_70458_d, i, this.field_70461_c == i);
+                    ((ItemStack)nonnulllist.get(i)).updateAnimation(this.player.world, this.player, i, this.currentItem == i);
                 }
             }
         }
+
+        for (ItemStack is : armorInventory) // FORGE: Tick armor on animation ticks
+        {
+            if (!is.isEmpty())
+            {
+                is.getItem().onArmorTick(player.world, player, is);
+            }
+        }
     }
 
-    public boolean func_70441_a(final ItemStack p_70441_1_)
+    public boolean addItemStackToInventory(final ItemStack itemStackIn)
     {
-        if (p_70441_1_.func_190926_b())
+        if (itemStackIn.isEmpty())
         {
             return false;
         }
@@ -359,20 +427,20 @@
         {
             try
             {
-                if (p_70441_1_.func_77951_h())
+                if (itemStackIn.isItemDamaged())
                 {
-                    int j = this.func_70447_i();
+                    int j = this.getFirstEmptyStack();
 
                     if (j >= 0)
                     {
-                        this.field_70462_a.set(j, p_70441_1_.func_77946_l());
-                        ((ItemStack)this.field_70462_a.get(j)).func_190915_d(5);
-                        p_70441_1_.func_190920_e(0);
+                        this.mainInventory.set(j, itemStackIn.copy());
+                        ((ItemStack)this.mainInventory.get(j)).setAnimationsToGo(5);
+                        itemStackIn.setCount(0);
                         return true;
                     }
-                    else if (this.field_70458_d.field_71075_bZ.field_75098_d)
+                    else if (this.player.capabilities.isCreativeMode)
                     {
-                        p_70441_1_.func_190920_e(0);
+                        itemStackIn.setCount(0);
                         return true;
                     }
                     else
@@ -386,37 +454,37 @@
 
                     while (true)
                     {
-                        i = p_70441_1_.func_190916_E();
-                        p_70441_1_.func_190920_e(this.func_70452_e(p_70441_1_));
+                        i = itemStackIn.getCount();
+                        itemStackIn.setCount(this.storePartialItemStack(itemStackIn));
 
-                        if (p_70441_1_.func_190926_b() || p_70441_1_.func_190916_E() >= i)
+                        if (itemStackIn.isEmpty() || itemStackIn.getCount() >= i)
                         {
                             break;
                         }
                     }
 
-                    if (p_70441_1_.func_190916_E() == i && this.field_70458_d.field_71075_bZ.field_75098_d)
+                    if (itemStackIn.getCount() == i && this.player.capabilities.isCreativeMode)
                     {
-                        p_70441_1_.func_190920_e(0);
+                        itemStackIn.setCount(0);
                         return true;
                     }
                     else
                     {
-                        return p_70441_1_.func_190916_E() < i;
+                        return itemStackIn.getCount() < i;
                     }
                 }
             }
             catch (Throwable throwable)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Adding item to inventory");
-                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Item being added");
-                crashreportcategory.func_71507_a("Item ID", Integer.valueOf(Item.func_150891_b(p_70441_1_.func_77973_b())));
-                crashreportcategory.func_71507_a("Item data", Integer.valueOf(p_70441_1_.func_77960_j()));
-                crashreportcategory.func_189529_a("Item name", new ICrashReportDetail<String>()
+                CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Adding item to inventory");
+                CrashReportCategory crashreportcategory = crashreport.makeCategory("Item being added");
+                crashreportcategory.addCrashSection("Item ID", Integer.valueOf(Item.getIdFromItem(itemStackIn.getItem())));
+                crashreportcategory.addCrashSection("Item data", Integer.valueOf(itemStackIn.getMetadata()));
+                crashreportcategory.setDetail("Item name", new ICrashReportDetail<String>()
                 {
                     public String call() throws Exception
                     {
-                        return p_70441_1_.func_82833_r();
+                        return itemStackIn.getDisplayName();
                     }
                 });
                 throw new ReportedException(crashreport);
@@ -424,193 +492,193 @@
         }
     }
 
-    public ItemStack func_70298_a(int p_70298_1_, int p_70298_2_)
+    public ItemStack decrStackSize(int index, int count)
     {
         List<ItemStack> list = null;
 
-        for (NonNullList<ItemStack> nonnulllist : this.field_184440_g)
+        for (NonNullList<ItemStack> nonnulllist : this.allInventories)
         {
-            if (p_70298_1_ < nonnulllist.size())
+            if (index < nonnulllist.size())
             {
                 list = nonnulllist;
                 break;
             }
 
-            p_70298_1_ -= nonnulllist.size();
+            index -= nonnulllist.size();
         }
 
-        return list != null && !((ItemStack)list.get(p_70298_1_)).func_190926_b() ? ItemStackHelper.func_188382_a(list, p_70298_1_, p_70298_2_) : ItemStack.field_190927_a;
+        return list != null && !((ItemStack)list.get(index)).isEmpty() ? ItemStackHelper.getAndSplit(list, index, count) : ItemStack.EMPTY;
     }
 
-    public void func_184437_d(ItemStack p_184437_1_)
+    public void deleteStack(ItemStack stack)
     {
-        for (NonNullList<ItemStack> nonnulllist : this.field_184440_g)
+        for (NonNullList<ItemStack> nonnulllist : this.allInventories)
         {
             for (int i = 0; i < nonnulllist.size(); ++i)
             {
-                if (nonnulllist.get(i) == p_184437_1_)
+                if (nonnulllist.get(i) == stack)
                 {
-                    nonnulllist.set(i, ItemStack.field_190927_a);
+                    nonnulllist.set(i, ItemStack.EMPTY);
                     break;
                 }
             }
         }
     }
 
-    public ItemStack func_70304_b(int p_70304_1_)
+    public ItemStack removeStackFromSlot(int index)
     {
         NonNullList<ItemStack> nonnulllist = null;
 
-        for (NonNullList<ItemStack> nonnulllist1 : this.field_184440_g)
+        for (NonNullList<ItemStack> nonnulllist1 : this.allInventories)
         {
-            if (p_70304_1_ < nonnulllist1.size())
+            if (index < nonnulllist1.size())
             {
                 nonnulllist = nonnulllist1;
                 break;
             }
 
-            p_70304_1_ -= nonnulllist1.size();
+            index -= nonnulllist1.size();
         }
 
-        if (nonnulllist != null && !((ItemStack)nonnulllist.get(p_70304_1_)).func_190926_b())
+        if (nonnulllist != null && !((ItemStack)nonnulllist.get(index)).isEmpty())
         {
-            ItemStack itemstack = (ItemStack)nonnulllist.get(p_70304_1_);
-            nonnulllist.set(p_70304_1_, ItemStack.field_190927_a);
+            ItemStack itemstack = (ItemStack)nonnulllist.get(index);
+            nonnulllist.set(index, ItemStack.EMPTY);
             return itemstack;
         }
         else
         {
-            return ItemStack.field_190927_a;
+            return ItemStack.EMPTY;
         }
     }
 
-    public void func_70299_a(int p_70299_1_, ItemStack p_70299_2_)
+    public void setInventorySlotContents(int index, ItemStack stack)
     {
         NonNullList<ItemStack> nonnulllist = null;
 
-        for (NonNullList<ItemStack> nonnulllist1 : this.field_184440_g)
+        for (NonNullList<ItemStack> nonnulllist1 : this.allInventories)
         {
-            if (p_70299_1_ < nonnulllist1.size())
+            if (index < nonnulllist1.size())
             {
                 nonnulllist = nonnulllist1;
                 break;
             }
 
-            p_70299_1_ -= nonnulllist1.size();
+            index -= nonnulllist1.size();
         }
 
         if (nonnulllist != null)
         {
-            nonnulllist.set(p_70299_1_, p_70299_2_);
+            nonnulllist.set(index, stack);
         }
     }
 
-    public float func_184438_a(IBlockState p_184438_1_)
+    public float getStrVsBlock(IBlockState state)
     {
         float f = 1.0F;
 
-        if (!((ItemStack)this.field_70462_a.get(this.field_70461_c)).func_190926_b())
+        if (!((ItemStack)this.mainInventory.get(this.currentItem)).isEmpty())
         {
-            f *= ((ItemStack)this.field_70462_a.get(this.field_70461_c)).func_150997_a(p_184438_1_);
+            f *= ((ItemStack)this.mainInventory.get(this.currentItem)).getStrVsBlock(state);
         }
 
         return f;
     }
 
-    public NBTTagList func_70442_a(NBTTagList p_70442_1_)
+    public NBTTagList writeToNBT(NBTTagList nbtTagListIn)
     {
-        for (int i = 0; i < this.field_70462_a.size(); ++i)
+        for (int i = 0; i < this.mainInventory.size(); ++i)
         {
-            if (!((ItemStack)this.field_70462_a.get(i)).func_190926_b())
+            if (!((ItemStack)this.mainInventory.get(i)).isEmpty())
             {
                 NBTTagCompound nbttagcompound = new NBTTagCompound();
-                nbttagcompound.func_74774_a("Slot", (byte)i);
-                ((ItemStack)this.field_70462_a.get(i)).func_77955_b(nbttagcompound);
-                p_70442_1_.func_74742_a(nbttagcompound);
+                nbttagcompound.setByte("Slot", (byte)i);
+                ((ItemStack)this.mainInventory.get(i)).writeToNBT(nbttagcompound);
+                nbtTagListIn.appendTag(nbttagcompound);
             }
         }
 
-        for (int j = 0; j < this.field_70460_b.size(); ++j)
+        for (int j = 0; j < this.armorInventory.size(); ++j)
         {
-            if (!((ItemStack)this.field_70460_b.get(j)).func_190926_b())
+            if (!((ItemStack)this.armorInventory.get(j)).isEmpty())
             {
                 NBTTagCompound nbttagcompound1 = new NBTTagCompound();
-                nbttagcompound1.func_74774_a("Slot", (byte)(j + 100));
-                ((ItemStack)this.field_70460_b.get(j)).func_77955_b(nbttagcompound1);
-                p_70442_1_.func_74742_a(nbttagcompound1);
+                nbttagcompound1.setByte("Slot", (byte)(j + 100));
+                ((ItemStack)this.armorInventory.get(j)).writeToNBT(nbttagcompound1);
+                nbtTagListIn.appendTag(nbttagcompound1);
             }
         }
 
-        for (int k = 0; k < this.field_184439_c.size(); ++k)
+        for (int k = 0; k < this.offHandInventory.size(); ++k)
         {
-            if (!((ItemStack)this.field_184439_c.get(k)).func_190926_b())
+            if (!((ItemStack)this.offHandInventory.get(k)).isEmpty())
             {
                 NBTTagCompound nbttagcompound2 = new NBTTagCompound();
-                nbttagcompound2.func_74774_a("Slot", (byte)(k + 150));
-                ((ItemStack)this.field_184439_c.get(k)).func_77955_b(nbttagcompound2);
-                p_70442_1_.func_74742_a(nbttagcompound2);
+                nbttagcompound2.setByte("Slot", (byte)(k + 150));
+                ((ItemStack)this.offHandInventory.get(k)).writeToNBT(nbttagcompound2);
+                nbtTagListIn.appendTag(nbttagcompound2);
             }
         }
 
-        return p_70442_1_;
+        return nbtTagListIn;
     }
 
-    public void func_70443_b(NBTTagList p_70443_1_)
+    public void readFromNBT(NBTTagList nbtTagListIn)
     {
-        this.field_70462_a.clear();
-        this.field_70460_b.clear();
-        this.field_184439_c.clear();
+        this.mainInventory.clear();
+        this.armorInventory.clear();
+        this.offHandInventory.clear();
 
-        for (int i = 0; i < p_70443_1_.func_74745_c(); ++i)
+        for (int i = 0; i < nbtTagListIn.tagCount(); ++i)
         {
-            NBTTagCompound nbttagcompound = p_70443_1_.func_150305_b(i);
-            int j = nbttagcompound.func_74771_c("Slot") & 255;
+            NBTTagCompound nbttagcompound = nbtTagListIn.getCompoundTagAt(i);
+            int j = nbttagcompound.getByte("Slot") & 255;
             ItemStack itemstack = new ItemStack(nbttagcompound);
 
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
-                if (j >= 0 && j < this.field_70462_a.size())
+                if (j >= 0 && j < this.mainInventory.size())
                 {
-                    this.field_70462_a.set(j, itemstack);
+                    this.mainInventory.set(j, itemstack);
                 }
-                else if (j >= 100 && j < this.field_70460_b.size() + 100)
+                else if (j >= 100 && j < this.armorInventory.size() + 100)
                 {
-                    this.field_70460_b.set(j - 100, itemstack);
+                    this.armorInventory.set(j - 100, itemstack);
                 }
-                else if (j >= 150 && j < this.field_184439_c.size() + 150)
+                else if (j >= 150 && j < this.offHandInventory.size() + 150)
                 {
-                    this.field_184439_c.set(j - 150, itemstack);
+                    this.offHandInventory.set(j - 150, itemstack);
                 }
             }
         }
     }
 
-    public int func_70302_i_()
+    public int getSizeInventory()
     {
-        return this.field_70462_a.size() + this.field_70460_b.size() + this.field_184439_c.size();
+        return this.mainInventory.size() + this.armorInventory.size() + this.offHandInventory.size();
     }
 
-    public boolean func_191420_l()
+    public boolean isEmpty()
     {
-        for (ItemStack itemstack : this.field_70462_a)
+        for (ItemStack itemstack : this.mainInventory)
         {
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
                 return false;
             }
         }
 
-        for (ItemStack itemstack1 : this.field_70460_b)
+        for (ItemStack itemstack1 : this.armorInventory)
         {
-            if (!itemstack1.func_190926_b())
+            if (!itemstack1.isEmpty())
             {
                 return false;
             }
         }
 
-        for (ItemStack itemstack2 : this.field_184439_c)
+        for (ItemStack itemstack2 : this.offHandInventory)
         {
-            if (!itemstack2.func_190926_b())
+            if (!itemstack2.isEmpty())
             {
                 return false;
             }
@@ -619,125 +687,125 @@
         return true;
     }
 
-    public ItemStack func_70301_a(int p_70301_1_)
+    public ItemStack getStackInSlot(int index)
     {
         List<ItemStack> list = null;
 
-        for (NonNullList<ItemStack> nonnulllist : this.field_184440_g)
+        for (NonNullList<ItemStack> nonnulllist : this.allInventories)
         {
-            if (p_70301_1_ < nonnulllist.size())
+            if (index < nonnulllist.size())
             {
                 list = nonnulllist;
                 break;
             }
 
-            p_70301_1_ -= nonnulllist.size();
+            index -= nonnulllist.size();
         }
 
-        return list == null ? ItemStack.field_190927_a : (ItemStack)list.get(p_70301_1_);
+        return list == null ? ItemStack.EMPTY : (ItemStack)list.get(index);
     }
 
-    public String func_70005_c_()
+    public String getName()
     {
         return "container.inventory";
     }
 
-    public boolean func_145818_k_()
+    public boolean hasCustomName()
     {
         return false;
     }
 
-    public ITextComponent func_145748_c_()
+    public ITextComponent getDisplayName()
     {
-        return (ITextComponent)(this.func_145818_k_() ? new TextComponentString(this.func_70005_c_()) : new TextComponentTranslation(this.func_70005_c_(), new Object[0]));
+        return (ITextComponent)(this.hasCustomName() ? new TextComponentString(this.getName()) : new TextComponentTranslation(this.getName(), new Object[0]));
     }
 
-    public int func_70297_j_()
+    public int getInventoryStackLimit()
     {
         return 64;
     }
 
-    public boolean func_184432_b(IBlockState p_184432_1_)
+    public boolean canHarvestBlock(IBlockState state)
     {
-        if (p_184432_1_.func_185904_a().func_76229_l())
+        if (state.getMaterial().isToolNotRequired())
         {
             return true;
         }
         else
         {
-            ItemStack itemstack = this.func_70301_a(this.field_70461_c);
-            return !itemstack.func_190926_b() ? itemstack.func_150998_b(p_184432_1_) : false;
+            ItemStack itemstack = this.getStackInSlot(this.currentItem);
+            return !itemstack.isEmpty() ? itemstack.canHarvestBlock(state) : false;
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public ItemStack func_70440_f(int p_70440_1_)
+    public ItemStack armorItemInSlot(int slotIn)
     {
-        return (ItemStack)this.field_70460_b.get(p_70440_1_);
+        return (ItemStack)this.armorInventory.get(slotIn);
     }
 
-    public void func_70449_g(float p_70449_1_)
+    public void damageArmor(float damage)
     {
-        p_70449_1_ = p_70449_1_ / 4.0F;
+        damage = damage / 4.0F;
 
-        if (p_70449_1_ < 1.0F)
+        if (damage < 1.0F)
         {
-            p_70449_1_ = 1.0F;
+            damage = 1.0F;
         }
 
-        for (int i = 0; i < this.field_70460_b.size(); ++i)
+        for (int i = 0; i < this.armorInventory.size(); ++i)
         {
-            ItemStack itemstack = (ItemStack)this.field_70460_b.get(i);
+            ItemStack itemstack = (ItemStack)this.armorInventory.get(i);
 
-            if (itemstack.func_77973_b() instanceof ItemArmor)
+            if (itemstack.getItem() instanceof ItemArmor)
             {
-                itemstack.func_77972_a((int)p_70449_1_, this.field_70458_d);
+                itemstack.damageItem((int)damage, this.player);
             }
         }
     }
 
-    public void func_70436_m()
+    public void dropAllItems()
     {
-        for (List<ItemStack> list : this.field_184440_g)
+        for (List<ItemStack> list : this.allInventories)
         {
             for (int i = 0; i < list.size(); ++i)
             {
                 ItemStack itemstack = (ItemStack)list.get(i);
 
-                if (!itemstack.func_190926_b())
+                if (!itemstack.isEmpty())
                 {
-                    this.field_70458_d.func_146097_a(itemstack, true, false);
-                    list.set(i, ItemStack.field_190927_a);
+                    this.player.dropItem(itemstack, true, false);
+                    list.set(i, ItemStack.EMPTY);
                 }
             }
         }
     }
 
-    public void func_70296_d()
+    public void markDirty()
     {
-        this.field_70459_e = true;
+        this.inventoryChanged = true;
     }
 
-    public void func_70437_b(ItemStack p_70437_1_)
+    public void setItemStack(ItemStack itemStackIn)
     {
-        this.field_70457_g = p_70437_1_;
+        this.itemStack = itemStackIn;
     }
 
-    public ItemStack func_70445_o()
+    public ItemStack getItemStack()
     {
-        return this.field_70457_g;
+        return this.itemStack;
     }
 
-    public boolean func_70300_a(EntityPlayer p_70300_1_)
+    public boolean isUsableByPlayer(EntityPlayer player)
     {
-        return this.field_70458_d.field_70128_L ? false : p_70300_1_.func_70068_e(this.field_70458_d) <= 64.0D;
+        return this.player.isDead ? false : player.getDistanceSqToEntity(this.player) <= 64.0D;
     }
 
-    public boolean func_70431_c(ItemStack p_70431_1_)
+    public boolean hasItemStack(ItemStack itemStackIn)
     {
         label19:
 
-        for (List<ItemStack> list : this.field_184440_g)
+        for (List<ItemStack> list : this.allInventories)
         {
             Iterator iterator = list.iterator();
 
@@ -750,7 +818,7 @@
 
                 ItemStack itemstack = (ItemStack)iterator.next();
 
-                if (!itemstack.func_190926_b() && itemstack.func_77969_a(p_70431_1_))
+                if (!itemstack.isEmpty() && itemstack.isItemEqual(itemStackIn))
                 {
                     break;
                 }
@@ -762,46 +830,46 @@
         return false;
     }
 
-    public void func_174889_b(EntityPlayer p_174889_1_)
+    public void openInventory(EntityPlayer player)
     {
     }
 
-    public void func_174886_c(EntityPlayer p_174886_1_)
+    public void closeInventory(EntityPlayer player)
     {
     }
 
-    public boolean func_94041_b(int p_94041_1_, ItemStack p_94041_2_)
+    public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
 
-    public void func_70455_b(InventoryPlayer p_70455_1_)
+    public void copyInventory(InventoryPlayer playerInventory)
     {
-        for (int i = 0; i < this.func_70302_i_(); ++i)
+        for (int i = 0; i < this.getSizeInventory(); ++i)
         {
-            this.func_70299_a(i, p_70455_1_.func_70301_a(i));
+            this.setInventorySlotContents(i, playerInventory.getStackInSlot(i));
         }
 
-        this.field_70461_c = p_70455_1_.field_70461_c;
+        this.currentItem = playerInventory.currentItem;
     }
 
-    public int func_174887_a_(int p_174887_1_)
+    public int getField(int id)
     {
         return 0;
     }
 
-    public void func_174885_b(int p_174885_1_, int p_174885_2_)
+    public void setField(int id, int value)
     {
     }
 
-    public int func_174890_g()
+    public int getFieldCount()
     {
         return 0;
     }
 
-    public void func_174888_l()
+    public void clear()
     {
-        for (List<ItemStack> list : this.field_184440_g)
+        for (List<ItemStack> list : this.allInventories)
         {
             list.clear();
         }
