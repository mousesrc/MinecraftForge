--- ../src-base/minecraft/net/minecraft/entity/EntityLivingBase.java
+++ ../src-work/minecraft/net/minecraft/entity/EntityLivingBase.java
@@ -1,14 +1,10 @@
 package net.minecraft.entity;
 
 import com.google.common.base.Objects;
+import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
-import java.util.Collection;
-import java.util.ConcurrentModificationException;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
-import java.util.UUID;
+
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockLadder;
@@ -42,8 +38,7 @@
 import net.minecraft.item.ItemArmor;
 import net.minecraft.item.ItemElytra;
 import net.minecraft.item.ItemStack;
-import net.minecraft.nbt.NBTTagCompound;
-import net.minecraft.nbt.NBTTagList;
+import net.minecraft.nbt.*;
 import net.minecraft.network.datasync.DataParameter;
 import net.minecraft.network.datasync.DataSerializers;
 import net.minecraft.network.datasync.EntityDataManager;
@@ -75,577 +70,624 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.attribute.CraftAttributeMap;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
 
 public abstract class EntityLivingBase extends Entity
 {
-    private static final Logger field_190632_a = LogManager.getLogger();
-    private static final UUID field_110156_b = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
-    private static final AttributeModifier field_110157_c = (new AttributeModifier(field_110156_b, "Sprinting speed boost", 0.30000001192092896D, 2)).func_111168_a(false);
-    protected static final DataParameter<Byte> field_184621_as = EntityDataManager.<Byte>func_187226_a(EntityLivingBase.class, DataSerializers.field_187191_a);
-    private static final DataParameter<Float> field_184632_c = EntityDataManager.<Float>func_187226_a(EntityLivingBase.class, DataSerializers.field_187193_c);
-    private static final DataParameter<Integer> field_184633_f = EntityDataManager.<Integer>func_187226_a(EntityLivingBase.class, DataSerializers.field_187192_b);
-    private static final DataParameter<Boolean> field_184634_g = EntityDataManager.<Boolean>func_187226_a(EntityLivingBase.class, DataSerializers.field_187198_h);
-    private static final DataParameter<Integer> field_184635_h = EntityDataManager.<Integer>func_187226_a(EntityLivingBase.class, DataSerializers.field_187192_b);
-    private AbstractAttributeMap field_110155_d;
-    public final CombatTracker field_94063_bt = new CombatTracker(this);
-    public final Map<Potion, PotionEffect> field_70713_bf = Maps.<Potion, PotionEffect>newHashMap();
-    private final NonNullList<ItemStack> field_184630_bs = NonNullList.<ItemStack>func_191197_a(2, ItemStack.field_190927_a);
-    private final NonNullList<ItemStack> field_184631_bt = NonNullList.<ItemStack>func_191197_a(4, ItemStack.field_190927_a);
-    public boolean field_82175_bq;
-    public EnumHand field_184622_au;
-    public int field_110158_av;
-    public int field_70720_be;
-    public int field_70737_aN;
-    public int field_70738_aO;
-    public float field_70739_aP;
-    public int field_70725_aQ;
-    public float field_70732_aI;
-    public float field_70733_aJ;
-    protected int field_184617_aD;
-    public float field_184618_aE;
-    public float field_70721_aZ;
-    public float field_184619_aG;
-    public int field_70771_an = 20;
-    public float field_70727_aS;
-    public float field_70726_aT;
-    public float field_70769_ao;
-    public float field_70770_ap;
-    public float field_70761_aq;
-    public float field_70760_ar;
-    public float field_70759_as;
-    public float field_70758_at;
-    public float field_70747_aH = 0.02F;
-    public EntityPlayer field_70717_bb;
-    protected int field_70718_bc;
-    protected boolean field_70729_aU;
-    protected int field_70708_bq;
-    protected float field_70768_au;
-    protected float field_110154_aX;
-    protected float field_70764_aw;
-    protected float field_70763_ax;
-    protected float field_70741_aB;
-    protected int field_70744_aE;
-    public float field_110153_bc;
-    protected boolean field_70703_bu;
-    public float field_70702_br;
-    public float field_70701_bs;
-    public float field_70704_bt;
-    protected int field_70716_bi;
-    protected double field_184623_bh;
-    protected double field_184624_bi;
-    protected double field_184625_bj;
-    protected double field_184626_bk;
-    protected double field_70709_bj;
-    public boolean field_70752_e = true;
-    public EntityLivingBase field_70755_b;
-    public int field_70756_c;
-    private EntityLivingBase field_110150_bn;
-    private int field_142016_bo;
-    private float field_70746_aG;
-    private int field_70773_bE;
-    private float field_110151_bq;
-    protected ItemStack field_184627_bm = ItemStack.field_190927_a;
-    protected int field_184628_bn;
-    protected int field_184629_bo;
-    private BlockPos field_184620_bC;
-    private DamageSource field_189750_bF;
-    private long field_189751_bG;
-
-    public void func_174812_G()
+    private static final Logger LOG = LogManager.getLogger();
+    private static final UUID SPRINTING_SPEED_BOOST_ID = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
+    private static final AttributeModifier SPRINTING_SPEED_BOOST = (new AttributeModifier(SPRINTING_SPEED_BOOST_ID, "Sprinting speed boost", 0.30000001192092896D, 2)).setSaved(false);
+    protected static final DataParameter<Byte> HAND_STATES = EntityDataManager.<Byte>createKey(EntityLivingBase.class, DataSerializers.BYTE);
+    public static final DataParameter<Float> HEALTH = EntityDataManager.<Float>createKey(EntityLivingBase.class, DataSerializers.FLOAT);
+    private static final DataParameter<Integer> POTION_EFFECTS = EntityDataManager.<Integer>createKey(EntityLivingBase.class, DataSerializers.VARINT);
+    private static final DataParameter<Boolean> HIDE_PARTICLES = EntityDataManager.<Boolean>createKey(EntityLivingBase.class, DataSerializers.BOOLEAN);
+    private static final DataParameter<Integer> ARROW_COUNT_IN_ENTITY = EntityDataManager.<Integer>createKey(EntityLivingBase.class, DataSerializers.VARINT);
+    private AbstractAttributeMap attributeMap;
+    public final CombatTracker _combatTracker = new CombatTracker(this);
+    public final Map<Potion, PotionEffect> activePotionsMap = Maps.<Potion, PotionEffect>newHashMap();
+    private final NonNullList<ItemStack> handInventory = NonNullList.<ItemStack>withSize(2, ItemStack.EMPTY);
+    private final NonNullList<ItemStack> armorArray = NonNullList.<ItemStack>withSize(4, ItemStack.EMPTY);
+    public boolean isSwingInProgress;
+    public EnumHand swingingHand;
+    public int swingProgressInt;
+    public int arrowHitTimer;
+    public int hurtTime;
+    public int maxHurtTime;
+    public float attackedAtYaw;
+    public int deathTime;
+    public float prevSwingProgress;
+    public float swingProgress;
+    protected int ticksSinceLastSwing;
+    public float prevLimbSwingAmount;
+    public float limbSwingAmount;
+    public float limbSwing;
+    public int maxHurtResistantTime = 20;
+    public float prevCameraPitch;
+    public float cameraPitch;
+    public float randomUnused2;
+    public float randomUnused1;
+    public float renderYawOffset;
+    public float prevRenderYawOffset;
+    public float rotationYawHead;
+    public float prevRotationYawHead;
+    public float jumpMovementFactor = 0.02F;
+    public EntityPlayer attackingPlayer;
+    protected int recentlyHit;
+    protected boolean dead;
+    protected int entityAge;
+    protected float prevOnGroundSpeedFactor;
+    protected float onGroundSpeedFactor;
+    protected float movedDistance;
+    protected float prevMovedDistance;
+    protected float unused180;
+    protected int scoreValue;
+    public float lastDamage;
+    protected boolean isJumping;
+    public float moveStrafing;
+    public float moveForward;
+    public float randomYawVelocity;
+    protected int newPosRotationIncrements;
+    protected double interpTargetX;
+    protected double interpTargetY;
+    protected double interpTargetZ;
+    protected double interpTargetYaw;
+    protected double interpTargetPitch;
+    public boolean potionsNeedUpdate = true;
+    public EntityLivingBase entityLivingToAttack;
+    public int revengeTimer;
+    private EntityLivingBase lastAttacker;
+    private int lastAttackerTime;
+    private float landMovementFactor;
+    private int jumpTicks;
+    private float absorptionAmount;
+    protected ItemStack activeItemStack = ItemStack.EMPTY;
+    protected int activeItemStackUseCount;
+    protected int ticksElytraFlying;
+    private BlockPos prevBlockpos;
+    private DamageSource lastDamageSource;
+    private long lastDamageStamp;
+    // CraftBukkit start
+    public int expToDrop;
+    public int maxAirTicks = 300;
+    protected boolean forceDrops;
+    protected ArrayList<org.bukkit.inventory.ItemStack> drops = new ArrayList<org.bukkit.inventory.ItemStack>();
+    public CraftAttributeMap craftAttributes;
+    public boolean collides = true;
+    // CraftBukkit end
+    public void onKillCommand()
     {
-        this.func_70097_a(DamageSource.field_76380_i, Float.MAX_VALUE);
+        this.attackEntityFrom(DamageSource.OUT_OF_WORLD, Float.MAX_VALUE);
     }
 
-    public EntityLivingBase(World p_i1594_1_)
+    public EntityLivingBase(World worldIn)
     {
-        super(p_i1594_1_);
-        this.func_110147_ax();
-        this.func_70606_j(this.func_110138_aP());
-        this.field_70156_m = true;
-        this.field_70770_ap = (float)((Math.random() + 1.0D) * 0.009999999776482582D);
-        this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
-        this.field_70769_ao = (float)Math.random() * 12398.0F;
-        this.field_70177_z = (float)(Math.random() * (Math.PI * 2D));
-        this.field_70759_as = this.field_70177_z;
-        this.field_70138_W = 0.6F;
+        super(worldIn);
+        this.applyEntityAttributes();
+        this.setHealth(this.getMaxHealth());
+        this.preventEntitySpawning = true;
+        this.randomUnused1 = (float)((Math.random() + 1.0D) * 0.009999999776482582D);
+        this.setPosition(this.posX, this.posY, this.posZ);
+        this.randomUnused2 = (float)Math.random() * 12398.0F;
+        this.rotationYaw = (float)(Math.random() * (Math.PI * 2D));
+        this.rotationYawHead = this.rotationYaw;
+        this.stepHeight = 0.6F;
     }
 
-    protected void func_70088_a()
+    protected void entityInit()
     {
-        this.field_70180_af.func_187214_a(field_184621_as, Byte.valueOf((byte)0));
-        this.field_70180_af.func_187214_a(field_184633_f, Integer.valueOf(0));
-        this.field_70180_af.func_187214_a(field_184634_g, Boolean.valueOf(false));
-        this.field_70180_af.func_187214_a(field_184635_h, Integer.valueOf(0));
-        this.field_70180_af.func_187214_a(field_184632_c, Float.valueOf(1.0F));
+        this.dataManager.register(HAND_STATES, Byte.valueOf((byte)0));
+        this.dataManager.register(POTION_EFFECTS, Integer.valueOf(0));
+        this.dataManager.register(HIDE_PARTICLES, Boolean.valueOf(false));
+        this.dataManager.register(ARROW_COUNT_IN_ENTITY, Integer.valueOf(0));
+        this.dataManager.register(HEALTH, Float.valueOf(1.0F));
     }
 
-    protected void func_110147_ax()
+    protected void applyEntityAttributes()
     {
-        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111267_a);
-        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111266_c);
-        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111263_d);
-        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_188791_g);
-        this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_189429_h);
+        this.getAttributeMap().registerAttribute(SharedMonsterAttributes.MAX_HEALTH);
+        this.getAttributeMap().registerAttribute(SharedMonsterAttributes.KNOCKBACK_RESISTANCE);
+        this.getAttributeMap().registerAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);
+        this.getAttributeMap().registerAttribute(SharedMonsterAttributes.ARMOR);
+        this.getAttributeMap().registerAttribute(SharedMonsterAttributes.ARMOR_TOUGHNESS);
     }
 
-    protected void func_184231_a(double p_184231_1_, boolean p_184231_3_, IBlockState p_184231_4_, BlockPos p_184231_5_)
+    protected void updateFallState(double y, boolean onGroundIn, IBlockState state, BlockPos pos)
     {
-        if (!this.func_70090_H())
+        if (!this.isInWater())
         {
-            this.func_70072_I();
+            this.handleWaterMovement();
         }
 
-        if (!this.field_70170_p.field_72995_K && this.field_70143_R > 3.0F && p_184231_3_)
+        if (!this.world.isRemote && this.fallDistance > 3.0F && onGroundIn)
         {
-            float f = (float)MathHelper.func_76123_f(this.field_70143_R - 3.0F);
+            float f = (float)MathHelper.ceil(this.fallDistance - 3.0F);
 
-            if (p_184231_4_.func_185904_a() != Material.field_151579_a)
+            if (!state.getBlock().isAir(state, world, pos))
             {
                 double d0 = Math.min((double)(0.2F + f / 15.0F), 2.5D);
                 int i = (int)(150.0D * d0);
-                ((WorldServer)this.field_70170_p).func_175739_a(EnumParticleTypes.BLOCK_DUST, this.field_70165_t, this.field_70163_u, this.field_70161_v, i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, new int[] {Block.func_176210_f(p_184231_4_)});
+                if (!state.getBlock().addLandingEffects(state, (WorldServer)this.world, pos, state, this, i))
+                ((WorldServer)this.world).spawnParticle(EnumParticleTypes.BLOCK_DUST, this.posX, this.posY, this.posZ, i, 0.0D, 0.0D, 0.0D, 0.15000000596046448D, new int[] {Block.getStateId(state)});
             }
         }
 
-        super.func_184231_a(p_184231_1_, p_184231_3_, p_184231_4_, p_184231_5_);
+        super.updateFallState(y, onGroundIn, state, pos);
     }
 
-    public boolean func_70648_aU()
+    public boolean canBreatheUnderwater()
     {
         return false;
     }
 
-    public void func_70030_z()
+    public void onEntityUpdate()
     {
-        this.field_70732_aI = this.field_70733_aJ;
-        super.func_70030_z();
-        this.field_70170_p.field_72984_F.func_76320_a("livingEntityBaseTick");
+        this.prevSwingProgress = this.swingProgress;
+        super.onEntityUpdate();
+        this.world.theProfiler.startSection("livingEntityBaseTick");
         boolean flag = this instanceof EntityPlayer;
 
-        if (this.func_70089_S())
+        if (this.isEntityAlive())
         {
-            if (this.func_70094_T())
+            if (this.isEntityInsideOpaqueBlock())
             {
-                this.func_70097_a(DamageSource.field_76368_d, 1.0F);
+                this.attackEntityFrom(DamageSource.IN_WALL, 1.0F);
             }
-            else if (flag && !this.field_70170_p.func_175723_af().func_177743_a(this.func_174813_aQ()))
+            else if (flag && !this.world.getWorldBorder().contains(this.getEntityBoundingBox()))
             {
-                double d0 = this.field_70170_p.func_175723_af().func_177745_a(this) + this.field_70170_p.func_175723_af().func_177742_m();
+                double d0 = this.world.getWorldBorder().getClosestDistance(this) + this.world.getWorldBorder().getDamageBuffer();
 
                 if (d0 < 0.0D)
                 {
-                    double d1 = this.field_70170_p.func_175723_af().func_177727_n();
+                    double d1 = this.world.getWorldBorder().getDamageAmount();
 
                     if (d1 > 0.0D)
                     {
-                        this.func_70097_a(DamageSource.field_76368_d, (float)Math.max(1, MathHelper.func_76128_c(-d0 * d1)));
+                        this.attackEntityFrom(DamageSource.IN_WALL, (float)Math.max(1, MathHelper.floor(-d0 * d1)));
                     }
                 }
             }
         }
 
-        if (this.func_70045_F() || this.field_70170_p.field_72995_K)
+        if (this.isImmuneToFire() || this.world.isRemote)
         {
-            this.func_70066_B();
+            this.extinguish();
         }
 
-        boolean flag1 = flag && ((EntityPlayer)this).field_71075_bZ.field_75102_a;
+        boolean flag1 = flag && ((EntityPlayer)this).capabilities.disableDamage;
 
-        if (this.func_70089_S())
+        if (this.isEntityAlive())
         {
-            if (!this.func_70055_a(Material.field_151586_h))
+            if (!this.isInsideOfMaterial(Material.WATER))
             {
-                this.func_70050_g(300);
+                this.setAir(300);
             }
             else
             {
-                if (!this.func_70648_aU() && !this.func_70644_a(MobEffects.field_76427_o) && !flag1)
+                if (!this.canBreatheUnderwater() && !this.isPotionActive(MobEffects.WATER_BREATHING) && !flag1)
                 {
-                    this.func_70050_g(this.func_70682_h(this.func_70086_ai()));
+                    this.setAir(this.decreaseAirSupply(this.getAir()));
 
-                    if (this.func_70086_ai() == -20)
+                    if (this.getAir() == -20)
                     {
-                        this.func_70050_g(0);
+                        this.setAir(0);
 
                         for (int i = 0; i < 8; ++i)
                         {
-                            float f2 = this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat();
-                            float f = this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat();
-                            float f1 = this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat();
-                            this.field_70170_p.func_175688_a(EnumParticleTypes.WATER_BUBBLE, this.field_70165_t + (double)f2, this.field_70163_u + (double)f, this.field_70161_v + (double)f1, this.field_70159_w, this.field_70181_x, this.field_70179_y, new int[0]);
+                            float f2 = this.rand.nextFloat() - this.rand.nextFloat();
+                            float f = this.rand.nextFloat() - this.rand.nextFloat();
+                            float f1 = this.rand.nextFloat() - this.rand.nextFloat();
+                            this.world.spawnParticle(EnumParticleTypes.WATER_BUBBLE, this.posX + (double)f2, this.posY + (double)f, this.posZ + (double)f1, this.motionX, this.motionY, this.motionZ, new int[0]);
                         }
 
-                        this.func_70097_a(DamageSource.field_76369_e, 2.0F);
+                        this.attackEntityFrom(DamageSource.DROWN, 2.0F);
                     }
                 }
 
-                if (!this.field_70170_p.field_72995_K && this.func_184218_aH() && this.func_184187_bx() instanceof EntityLivingBase)
+                if (!this.world.isRemote && this.isRiding() && this.getRidingEntity() != null && this.getRidingEntity().shouldDismountInWater(this))
                 {
-                    this.func_184210_p();
+                    this.dismountRidingEntity();
                 }
             }
 
-            if (!this.field_70170_p.field_72995_K)
+            if (!this.world.isRemote)
             {
                 BlockPos blockpos = new BlockPos(this);
 
-                if (!Objects.equal(this.field_184620_bC, blockpos))
+                if (!Objects.equal(this.prevBlockpos, blockpos))
                 {
-                    this.field_184620_bC = blockpos;
-                    this.func_184594_b(blockpos);
+                    this.prevBlockpos = blockpos;
+                    this.frostWalk(blockpos);
                 }
             }
         }
 
-        if (this.func_70089_S() && this.func_70026_G())
+        if (this.isEntityAlive() && this.isWet())
         {
-            this.func_70066_B();
+            this.extinguish();
         }
 
-        this.field_70727_aS = this.field_70726_aT;
+        this.prevCameraPitch = this.cameraPitch;
 
-        if (this.field_70737_aN > 0)
+        if (this.hurtTime > 0)
         {
-            --this.field_70737_aN;
+            --this.hurtTime;
         }
 
-        if (this.field_70172_ad > 0 && !(this instanceof EntityPlayerMP))
+        if (this.hurtResistantTime > 0 && !(this instanceof EntityPlayerMP))
         {
-            --this.field_70172_ad;
+            --this.hurtResistantTime;
         }
 
-        if (this.func_110143_aJ() <= 0.0F)
+        if (this.getHealth() <= 0.0F)
         {
-            this.func_70609_aI();
+            this.onDeathUpdate();
         }
 
-        if (this.field_70718_bc > 0)
+        if (this.recentlyHit > 0)
         {
-            --this.field_70718_bc;
+            --this.recentlyHit;
         }
         else
         {
-            this.field_70717_bb = null;
+            this.attackingPlayer = null;
         }
 
-        if (this.field_110150_bn != null && !this.field_110150_bn.func_70089_S())
+        if (this.lastAttacker != null && !this.lastAttacker.isEntityAlive())
         {
-            this.field_110150_bn = null;
+            this.lastAttacker = null;
         }
 
-        if (this.field_70755_b != null)
+        if (this.entityLivingToAttack != null)
         {
-            if (!this.field_70755_b.func_70089_S())
+            if (!this.entityLivingToAttack.isEntityAlive())
             {
-                this.func_70604_c((EntityLivingBase)null);
+                this.setRevengeTarget((EntityLivingBase)null);
             }
-            else if (this.field_70173_aa - this.field_70756_c > 100)
+            else if (this.ticksExisted - this.revengeTimer > 100)
             {
-                this.func_70604_c((EntityLivingBase)null);
+                this.setRevengeTarget((EntityLivingBase)null);
             }
         }
 
-        this.func_70679_bo();
-        this.field_70763_ax = this.field_70764_aw;
-        this.field_70760_ar = this.field_70761_aq;
-        this.field_70758_at = this.field_70759_as;
-        this.field_70126_B = this.field_70177_z;
-        this.field_70127_C = this.field_70125_A;
-        this.field_70170_p.field_72984_F.func_76319_b();
+        this.updatePotionEffects();
+        this.prevMovedDistance = this.movedDistance;
+        this.prevRenderYawOffset = this.renderYawOffset;
+        this.prevRotationYawHead = this.rotationYawHead;
+        this.prevRotationYaw = this.rotationYaw;
+        this.prevRotationPitch = this.rotationPitch;
+        this.world.theProfiler.endSection();
     }
+    // CraftBukkit start
+    public int getExpReward() {
+        int exp = this.getExperiencePoints(this.attackingPlayer);
 
-    protected void func_184594_b(BlockPos p_184594_1_)
+        if (!this.world.isRemote && (this.recentlyHit > 0 || this.isPlayer()) && this.canDropLoot() && this.world.getGameRules().getBoolean("doMobLoot")) {
+            this.expToDrop = exp;
+            return exp;
+        } else {
+            this.expToDrop = 0;
+            return 0;
+        }
+    }
+    // CraftBukkit end
+    protected void frostWalk(BlockPos pos)
     {
-        int i = EnchantmentHelper.func_185284_a(Enchantments.field_185301_j, this);
+        int i = EnchantmentHelper.getMaxEnchantmentLevel(Enchantments.FROST_WALKER, this);
 
         if (i > 0)
         {
-            EnchantmentFrostWalker.func_185266_a(this, this.field_70170_p, p_184594_1_, i);
+            EnchantmentFrostWalker.freezeNearby(this, this.world, pos, i);
         }
     }
 
-    public boolean func_70631_g_()
+    public boolean isChild()
     {
         return false;
     }
 
-    protected void func_70609_aI()
+    protected void onDeathUpdate()
     {
-        ++this.field_70725_aQ;
+        ++this.deathTime;
 
-        if (this.field_70725_aQ == 20)
+        if (this.deathTime == 20)
         {
-            if (!this.field_70170_p.field_72995_K && (this.func_70684_aJ() || this.field_70718_bc > 0 && this.func_146066_aG() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot")))
+            //MCPCRevive start
+            int i = this.getExpReward();
+            i = net.minecraftforge.event.ForgeEventFactory.getExperienceDrop(this, this.attackingPlayer, i);
+            while (i > 0)
             {
-                int i = this.func_70693_a(this.field_70717_bb);
-
-                while (i > 0)
-                {
-                    int j = EntityXPOrb.func_70527_a(i);
-                    i -= j;
-                    this.field_70170_p.func_72838_d(new EntityXPOrb(this.field_70170_p, this.field_70165_t, this.field_70163_u, this.field_70161_v, j));
-                }
+                int j = EntityXPOrb.getXPSplit(i);
+                i -= j;
+                this.world.spawnEntity(new EntityXPOrb(this.world, this.posX, this.posY, this.posZ, j));
             }
+            this.expToDrop = 0;
+            //MCPCRevive end
+            this.setDead();
 
-            this.func_70106_y();
-
             for (int k = 0; k < 20; ++k)
             {
-                double d2 = this.field_70146_Z.nextGaussian() * 0.02D;
-                double d0 = this.field_70146_Z.nextGaussian() * 0.02D;
-                double d1 = this.field_70146_Z.nextGaussian() * 0.02D;
-                this.field_70170_p.func_175688_a(EnumParticleTypes.EXPLOSION_NORMAL, this.field_70165_t + (double)(this.field_70146_Z.nextFloat() * this.field_70130_N * 2.0F) - (double)this.field_70130_N, this.field_70163_u + (double)(this.field_70146_Z.nextFloat() * this.field_70131_O), this.field_70161_v + (double)(this.field_70146_Z.nextFloat() * this.field_70130_N * 2.0F) - (double)this.field_70130_N, d2, d0, d1, new int[0]);
+                double d2 = this.rand.nextGaussian() * 0.02D;
+                double d0 = this.rand.nextGaussian() * 0.02D;
+                double d1 = this.rand.nextGaussian() * 0.02D;
+                this.world.spawnParticle(EnumParticleTypes.EXPLOSION_NORMAL, this.posX + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, this.posY + (double)(this.rand.nextFloat() * this.height), this.posZ + (double)(this.rand.nextFloat() * this.width * 2.0F) - (double)this.width, d2, d0, d1, new int[0]);
             }
         }
     }
 
-    protected boolean func_146066_aG()
+    protected boolean canDropLoot()
     {
-        return !this.func_70631_g_();
+        return !this.isChild();
     }
 
-    protected int func_70682_h(int p_70682_1_)
+    protected int decreaseAirSupply(int air)
     {
-        int i = EnchantmentHelper.func_185292_c(this);
-        return i > 0 && this.field_70146_Z.nextInt(i + 1) > 0 ? p_70682_1_ : p_70682_1_ - 1;
+        int i = EnchantmentHelper.getRespirationModifier(this);
+        return i > 0 && this.rand.nextInt(i + 1) > 0 ? air : air - 1;
     }
 
-    protected int func_70693_a(EntityPlayer p_70693_1_)
+    protected int getExperiencePoints(EntityPlayer player)
     {
         return 0;
     }
 
-    protected boolean func_70684_aJ()
+    protected boolean isPlayer()
     {
         return false;
     }
 
-    public Random func_70681_au()
+    public Random getRNG()
     {
-        return this.field_70146_Z;
+        return this.rand;
     }
 
     @Nullable
-    public EntityLivingBase func_70643_av()
+    public EntityLivingBase getAITarget()
     {
-        return this.field_70755_b;
+        return this.entityLivingToAttack;
     }
 
-    public int func_142015_aE()
+    public int getRevengeTimer()
     {
-        return this.field_70756_c;
+        return this.revengeTimer;
     }
 
-    public void func_70604_c(@Nullable EntityLivingBase p_70604_1_)
+    public void setRevengeTarget(@Nullable EntityLivingBase livingBase)
     {
-        this.field_70755_b = p_70604_1_;
-        this.field_70756_c = this.field_70173_aa;
+        this.entityLivingToAttack = livingBase;
+        this.revengeTimer = this.ticksExisted;
+        net.minecraftforge.common.ForgeHooks.onLivingSetAttackTarget(this, livingBase);
     }
 
-    public EntityLivingBase func_110144_aD()
+    public EntityLivingBase getLastAttacker()
     {
-        return this.field_110150_bn;
+        return this.lastAttacker;
     }
 
-    public int func_142013_aG()
+    public int getLastAttackerTime()
     {
-        return this.field_142016_bo;
+        return this.lastAttackerTime;
     }
 
-    public void func_130011_c(Entity p_130011_1_)
+    public void setLastAttacker(Entity entityIn)
     {
-        if (p_130011_1_ instanceof EntityLivingBase)
+        if (entityIn instanceof EntityLivingBase)
         {
-            this.field_110150_bn = (EntityLivingBase)p_130011_1_;
+            this.lastAttacker = (EntityLivingBase)entityIn;
         }
         else
         {
-            this.field_110150_bn = null;
+            this.lastAttacker = null;
         }
 
-        this.field_142016_bo = this.field_70173_aa;
+        this.lastAttackerTime = this.ticksExisted;
     }
 
-    public int func_70654_ax()
+    public int getAge()
     {
-        return this.field_70708_bq;
+        return this.entityAge;
     }
 
-    protected void func_184606_a_(ItemStack p_184606_1_)
+    protected void playEquipSound(ItemStack stack)
     {
-        if (!p_184606_1_.func_190926_b())
+        if (!stack.isEmpty())
         {
-            SoundEvent soundevent = SoundEvents.field_187719_p;
-            Item item = p_184606_1_.func_77973_b();
+            SoundEvent soundevent = SoundEvents.ITEM_ARMOR_EQUIP_GENERIC;
+            Item item = stack.getItem();
 
             if (item instanceof ItemArmor)
             {
-                soundevent = ((ItemArmor)item).func_82812_d().func_185017_b();
+                soundevent = ((ItemArmor)item).getArmorMaterial().getSoundEvent();
             }
-            else if (item == Items.field_185160_cR)
+            else if (item == Items.ELYTRA)
             {
-                soundevent = SoundEvents.field_191258_p;
+                soundevent = SoundEvents.ITEM_ARMOR_EQIIP_ELYTRA;
             }
 
-            this.func_184185_a(soundevent, 1.0F, 1.0F);
+            this.playSound(soundevent, 1.0F, 1.0F);
         }
     }
 
-    public void func_70014_b(NBTTagCompound p_70014_1_)
+    public void writeEntityToNBT(NBTTagCompound compound)
     {
-        p_70014_1_.func_74776_a("Health", this.func_110143_aJ());
-        p_70014_1_.func_74777_a("HurtTime", (short)this.field_70737_aN);
-        p_70014_1_.func_74768_a("HurtByTimestamp", this.field_70756_c);
-        p_70014_1_.func_74777_a("DeathTime", (short)this.field_70725_aQ);
-        p_70014_1_.func_74776_a("AbsorptionAmount", this.func_110139_bj());
+        compound.setFloat("Health", this.getHealth());
+        compound.setShort("HurtTime", (short)this.hurtTime);
+        compound.setInteger("HurtByTimestamp", this.revengeTimer);
+        compound.setShort("DeathTime", (short)this.deathTime);
+        compound.setFloat("AbsorptionAmount", this.getAbsorptionAmount());
 
         for (EntityEquipmentSlot entityequipmentslot : EntityEquipmentSlot.values())
         {
-            ItemStack itemstack = this.func_184582_a(entityequipmentslot);
+            ItemStack itemstack = this.getItemStackFromSlot(entityequipmentslot);
 
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
-                this.func_110140_aT().func_111148_a(itemstack.func_111283_C(entityequipmentslot));
+                this.getAttributeMap().removeAttributeModifiers(itemstack.getAttributeModifiers(entityequipmentslot));
             }
         }
 
-        p_70014_1_.func_74782_a("Attributes", SharedMonsterAttributes.func_111257_a(this.func_110140_aT()));
+        compound.setTag("Attributes", SharedMonsterAttributes.writeBaseAttributeMapToNBT(this.getAttributeMap()));
 
         for (EntityEquipmentSlot entityequipmentslot1 : EntityEquipmentSlot.values())
         {
-            ItemStack itemstack1 = this.func_184582_a(entityequipmentslot1);
+            ItemStack itemstack1 = this.getItemStackFromSlot(entityequipmentslot1);
 
-            if (!itemstack1.func_190926_b())
+            if (!itemstack1.isEmpty())
             {
-                this.func_110140_aT().func_111147_b(itemstack1.func_111283_C(entityequipmentslot1));
+                this.getAttributeMap().applyAttributeModifiers(itemstack1.getAttributeModifiers(entityequipmentslot1));
             }
         }
 
-        if (!this.field_70713_bf.isEmpty())
+        if (!this.activePotionsMap.isEmpty())
         {
             NBTTagList nbttaglist = new NBTTagList();
 
-            for (PotionEffect potioneffect : this.field_70713_bf.values())
+            for (PotionEffect potioneffect : this.activePotionsMap.values())
             {
-                nbttaglist.func_74742_a(potioneffect.func_82719_a(new NBTTagCompound()));
+                nbttaglist.appendTag(potioneffect.writeCustomPotionEffectToNBT(new NBTTagCompound()));
             }
 
-            p_70014_1_.func_74782_a("ActiveEffects", nbttaglist);
+            compound.setTag("ActiveEffects", nbttaglist);
         }
 
-        p_70014_1_.func_74757_a("FallFlying", this.func_184613_cA());
+        compound.setBoolean("FallFlying", this.isElytraFlying());
     }
 
-    public void func_70037_a(NBTTagCompound p_70037_1_)
+    public void readEntityFromNBT(NBTTagCompound compound)
     {
-        this.func_110149_m(p_70037_1_.func_74760_g("AbsorptionAmount"));
+        this.setAbsorptionAmount(compound.getFloat("AbsorptionAmount"));
 
-        if (p_70037_1_.func_150297_b("Attributes", 9) && this.field_70170_p != null && !this.field_70170_p.field_72995_K)
+        if (compound.hasKey("Attributes", 9) && this.world != null && !this.world.isRemote)
         {
-            SharedMonsterAttributes.func_151475_a(this.func_110140_aT(), p_70037_1_.func_150295_c("Attributes", 10));
+            SharedMonsterAttributes.setAttributeModifiers(this.getAttributeMap(), compound.getTagList("Attributes", 10));
         }
+        // CraftBukkit start
+        if (compound.hasKey("Bukkit.MaxHealth")) {
+            NBTBase nbtbase = compound.getTag("Bukkit.MaxHealth");
+            if (nbtbase.getId() == 5) {
+                this.getEntityAttribute(net.minecraft.entity.SharedMonsterAttributes.MAX_HEALTH).setBaseValue(((NBTTagFloat) nbtbase).getDouble());
+            } else if (nbtbase.getId() == 3) {
+                this.getEntityAttribute(net.minecraft.entity.SharedMonsterAttributes.MAX_HEALTH).setBaseValue(((NBTTagInt) nbtbase).getDouble());
+            }
+        }
+        // CraftBukkit end
 
-        if (p_70037_1_.func_150297_b("ActiveEffects", 9))
+        if (compound.hasKey("ActiveEffects", 9))
         {
-            NBTTagList nbttaglist = p_70037_1_.func_150295_c("ActiveEffects", 10);
+            NBTTagList nbttaglist = compound.getTagList("ActiveEffects", 10);
 
-            for (int i = 0; i < nbttaglist.func_74745_c(); ++i)
+            for (int i = 0; i < nbttaglist.tagCount(); ++i)
             {
-                NBTTagCompound nbttagcompound = nbttaglist.func_150305_b(i);
-                PotionEffect potioneffect = PotionEffect.func_82722_b(nbttagcompound);
+                NBTTagCompound nbttagcompound = nbttaglist.getCompoundTagAt(i);
+                PotionEffect potioneffect = PotionEffect.readCustomPotionEffectFromNBT(nbttagcompound);
 
                 if (potioneffect != null)
                 {
-                    this.field_70713_bf.put(potioneffect.func_188419_a(), potioneffect);
+                    this.activePotionsMap.put(potioneffect.getPotion(), potioneffect);
                 }
             }
         }
 
-        if (p_70037_1_.func_150297_b("Health", 99))
+        if (compound.hasKey("Health", 99))
         {
-            this.func_70606_j(p_70037_1_.func_74760_g("Health"));
+            this.setHealth(compound.getFloat("Health"));
         }
 
-        this.field_70737_aN = p_70037_1_.func_74765_d("HurtTime");
-        this.field_70725_aQ = p_70037_1_.func_74765_d("DeathTime");
-        this.field_70756_c = p_70037_1_.func_74762_e("HurtByTimestamp");
+        this.hurtTime = compound.getShort("HurtTime");
+        this.deathTime = compound.getShort("DeathTime");
+        this.revengeTimer = compound.getInteger("HurtByTimestamp");
 
-        if (p_70037_1_.func_150297_b("Team", 8))
+        if (compound.hasKey("Team", 8))
         {
-            String s = p_70037_1_.func_74779_i("Team");
-            boolean flag = this.field_70170_p.func_96441_U().func_151392_a(this.func_189512_bd(), s);
+            String s = compound.getString("Team");
+            boolean flag = this.world.getScoreboard().addPlayerToTeam(this.getCachedUniqueIdString(), s);
 
             if (!flag)
             {
-                field_190632_a.info("Unable to add mob to team \"" + s + "\" (that team probably doesn\'t exist)");
+                LOG.info("Unable to add mob to team \"" + s + "\" (that team probably doesn\'t exist)");
             }
         }
 
-        if (p_70037_1_.func_74767_n("FallFlying"))
+        if (compound.getBoolean("FallFlying"))
         {
-            this.func_70052_a(7, true);
+            this.setFlag(7, true);
         }
     }
-
-    protected void func_70679_bo()
+    // CraftBukkit start
+    private boolean isTickingEffects = false;
+    private List<Object> effectsToProcess = Lists.newArrayList();
+    // CraftBukkit end
+    protected void updatePotionEffects()
     {
-        Iterator<Potion> iterator = this.field_70713_bf.keySet().iterator();
+        Iterator<Potion> iterator = this.activePotionsMap.keySet().iterator();
 
         try
         {
+            isTickingEffects = true;
             while (iterator.hasNext())
             {
                 Potion potion = (Potion)iterator.next();
-                PotionEffect potioneffect = (PotionEffect)this.field_70713_bf.get(potion);
+                PotionEffect potioneffect = (PotionEffect)this.activePotionsMap.get(potion);
 
-                if (!potioneffect.func_76455_a(this))
+                if (!potioneffect.onUpdate(this))
                 {
-                    if (!this.field_70170_p.field_72995_K)
+                    if (!this.world.isRemote)
                     {
                         iterator.remove();
-                        this.func_70688_c(potioneffect);
+                        this.onFinishedPotionEffect(potioneffect);
                     }
                 }
-                else if (potioneffect.func_76459_b() % 600 == 0)
+                else if (potioneffect.getDuration() % 600 == 0)
                 {
-                    this.func_70695_b(potioneffect, false);
+                    this.onChangedPotionEffect(potioneffect, false);
                 }
             }
         }
         catch (ConcurrentModificationException var11)
         {
-            ;
+            LOG.warn("ticking potion",var11);
         }
-
-        if (this.field_70752_e)
+        // CraftBukkit start
+        isTickingEffects = false;
+        for (Object e : effectsToProcess) {
+            if (e instanceof PotionEffect) {
+                addPotionEffect((PotionEffect) e);
+            } else {
+                removePotionEffect((Potion) e);
+            }
+        }
+        effectsToProcess.clear();
+        // CraftBukkit end
+        if (this.potionsNeedUpdate)
         {
-            if (!this.field_70170_p.field_72995_K)
+            if (!this.world.isRemote)
             {
-                this.func_175135_B();
+                this.updatePotionMetadata();
             }
 
-            this.field_70752_e = false;
+            this.potionsNeedUpdate = false;
         }
 
-        int i = ((Integer)this.field_70180_af.func_187225_a(field_184633_f)).intValue();
-        boolean flag1 = ((Boolean)this.field_70180_af.func_187225_a(field_184634_g)).booleanValue();
+        int i = ((Integer)this.dataManager.get(POTION_EFFECTS)).intValue();
+        boolean flag1 = ((Boolean)this.dataManager.get(HIDE_PARTICLES)).booleanValue();
 
         if (i > 0)
         {
             boolean flag;
 
-            if (this.func_82150_aj())
+            if (this.isInvisible())
             {
-                flag = this.field_70146_Z.nextInt(15) == 0;
+                flag = this.rand.nextInt(15) == 0;
             }
             else
             {
-                flag = this.field_70146_Z.nextBoolean();
+                flag = this.rand.nextBoolean();
             }
 
             if (flag1)
             {
-                flag &= this.field_70146_Z.nextInt(5) == 0;
+                flag &= this.rand.nextInt(5) == 0;
             }
 
             if (flag && i > 0)
@@ -653,32 +695,34 @@
                 double d0 = (double)(i >> 16 & 255) / 255.0D;
                 double d1 = (double)(i >> 8 & 255) / 255.0D;
                 double d2 = (double)(i >> 0 & 255) / 255.0D;
-                this.field_70170_p.func_175688_a(flag1 ? EnumParticleTypes.SPELL_MOB_AMBIENT : EnumParticleTypes.SPELL_MOB, this.field_70165_t + (this.field_70146_Z.nextDouble() - 0.5D) * (double)this.field_70130_N, this.field_70163_u + this.field_70146_Z.nextDouble() * (double)this.field_70131_O, this.field_70161_v + (this.field_70146_Z.nextDouble() - 0.5D) * (double)this.field_70130_N, d0, d1, d2, new int[0]);
+                this.world.spawnParticle(flag1 ? EnumParticleTypes.SPELL_MOB_AMBIENT : EnumParticleTypes.SPELL_MOB, this.posX + (this.rand.nextDouble() - 0.5D) * (double)this.width, this.posY + this.rand.nextDouble() * (double)this.height, this.posZ + (this.rand.nextDouble() - 0.5D) * (double)this.width, d0, d1, d2, new int[0]);
             }
         }
     }
 
-    protected void func_175135_B()
+    protected void updatePotionMetadata()
     {
-        if (this.field_70713_bf.isEmpty())
+        if (this.activePotionsMap.isEmpty())
         {
-            this.func_175133_bi();
-            this.func_82142_c(false);
+            this.resetPotionEffectMetadata();
+            this.setInvisible(false);
         }
         else
         {
-            Collection<PotionEffect> collection = this.field_70713_bf.values();
-            this.field_70180_af.func_187227_b(field_184634_g, Boolean.valueOf(func_184593_a(collection)));
-            this.field_70180_af.func_187227_b(field_184633_f, Integer.valueOf(PotionUtils.func_185181_a(collection)));
-            this.func_82142_c(this.func_70644_a(MobEffects.field_76441_p));
+            Collection<PotionEffect> collection = this.activePotionsMap.values();
+            net.minecraftforge.event.entity.living.PotionColorCalculationEvent event = new net.minecraftforge.event.entity.living.PotionColorCalculationEvent(this, PotionUtils.getPotionColorFromEffectList(collection), areAllPotionsAmbient(collection), collection);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event);
+            this.dataManager.set(HIDE_PARTICLES, event.areParticlesHidden());
+            this.dataManager.set(POTION_EFFECTS, event.getColor());
+            this.setInvisible(this.isPotionActive(MobEffects.INVISIBILITY));
         }
     }
 
-    public static boolean func_184593_a(Collection<PotionEffect> p_184593_0_)
+    public static boolean areAllPotionsAmbient(Collection<PotionEffect> potionEffects)
     {
-        for (PotionEffect potioneffect : p_184593_0_)
+        for (PotionEffect potioneffect : potionEffects)
         {
-            if (!potioneffect.func_82720_e())
+            if (!potioneffect.getIsAmbient())
             {
                 return false;
             }
@@ -687,68 +731,68 @@
         return true;
     }
 
-    protected void func_175133_bi()
+    protected void resetPotionEffectMetadata()
     {
-        this.field_70180_af.func_187227_b(field_184634_g, Boolean.valueOf(false));
-        this.field_70180_af.func_187227_b(field_184633_f, Integer.valueOf(0));
+        this.dataManager.set(HIDE_PARTICLES, Boolean.valueOf(false));
+        this.dataManager.set(POTION_EFFECTS, Integer.valueOf(0));
     }
 
-    public void func_70674_bp()
+    public void clearActivePotions()
     {
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            Iterator<PotionEffect> iterator = this.field_70713_bf.values().iterator();
+            Iterator<PotionEffect> iterator = this.activePotionsMap.values().iterator();
 
             while (iterator.hasNext())
             {
-                this.func_70688_c((PotionEffect)iterator.next());
+                this.onFinishedPotionEffect((PotionEffect)iterator.next());
                 iterator.remove();
             }
         }
     }
 
-    public Collection<PotionEffect> func_70651_bq()
+    public Collection<PotionEffect> getActivePotionEffects()
     {
-        return this.field_70713_bf.values();
+        return this.activePotionsMap.values();
     }
 
-    public boolean func_70644_a(Potion p_70644_1_)
+    public boolean isPotionActive(Potion potionIn)
     {
-        return this.field_70713_bf.containsKey(p_70644_1_);
+        return this.activePotionsMap.containsKey(potionIn);
     }
 
     @Nullable
-    public PotionEffect func_70660_b(Potion p_70660_1_)
+    public PotionEffect getActivePotionEffect(Potion potionIn)
     {
-        return (PotionEffect)this.field_70713_bf.get(p_70660_1_);
+        return (PotionEffect)this.activePotionsMap.get(potionIn);
     }
 
-    public void func_70690_d(PotionEffect p_70690_1_)
+    public void addPotionEffect(PotionEffect potioneffectIn)
     {
-        if (this.func_70687_e(p_70690_1_))
+        if (this.isPotionApplicable(potioneffectIn))
         {
-            PotionEffect potioneffect = (PotionEffect)this.field_70713_bf.get(p_70690_1_.func_188419_a());
+            PotionEffect potioneffect = (PotionEffect)this.activePotionsMap.get(potioneffectIn.getPotion());
 
             if (potioneffect == null)
             {
-                this.field_70713_bf.put(p_70690_1_.func_188419_a(), p_70690_1_);
-                this.func_70670_a(p_70690_1_);
+                this.activePotionsMap.put(potioneffectIn.getPotion(), potioneffectIn);
+                this.onNewPotionEffect(potioneffectIn);
             }
             else
             {
-                potioneffect.func_76452_a(p_70690_1_);
-                this.func_70695_b(potioneffect, true);
+                potioneffect.combine(potioneffectIn);
+                this.onChangedPotionEffect(potioneffect, true);
             }
         }
     }
 
-    public boolean func_70687_e(PotionEffect p_70687_1_)
+    public boolean isPotionApplicable(PotionEffect potioneffectIn)
     {
-        if (this.func_70668_bt() == EnumCreatureAttribute.UNDEAD)
+        if (this.getCreatureAttribute() == EnumCreatureAttribute.UNDEAD)
         {
-            Potion potion = p_70687_1_.func_188419_a();
+            Potion potion = potioneffectIn.getPotion();
 
-            if (potion == MobEffects.field_76428_l || potion == MobEffects.field_76436_u)
+            if (potion == MobEffects.REGENERATION || potion == MobEffects.POISON)
             {
                 return false;
             }
@@ -757,175 +801,192 @@
         return true;
     }
 
-    public boolean func_70662_br()
+    public boolean isEntityUndead()
     {
-        return this.func_70668_bt() == EnumCreatureAttribute.UNDEAD;
+        return this.getCreatureAttribute() == EnumCreatureAttribute.UNDEAD;
     }
 
     @Nullable
-    public PotionEffect func_184596_c(@Nullable Potion p_184596_1_)
+    public PotionEffect removeActivePotionEffect(@Nullable Potion potioneffectin)
     {
-        return (PotionEffect)this.field_70713_bf.remove(p_184596_1_);
+        // CraftBukkit start
+        if (isTickingEffects) {
+            effectsToProcess.add(potioneffectin);
+            return null;
+        }
+        // CraftBukkit end
+        return (PotionEffect)this.activePotionsMap.remove(potioneffectin);
     }
 
-    public void func_184589_d(Potion p_184589_1_)
+    public void removePotionEffect(Potion potionIn)
     {
-        PotionEffect potioneffect = this.func_184596_c(p_184589_1_);
+        PotionEffect potioneffect = this.removeActivePotionEffect(potionIn);
 
         if (potioneffect != null)
         {
-            this.func_70688_c(potioneffect);
+            this.onFinishedPotionEffect(potioneffect);
         }
     }
 
-    protected void func_70670_a(PotionEffect p_70670_1_)
+    protected void onNewPotionEffect(PotionEffect id)
     {
-        this.field_70752_e = true;
+        this.potionsNeedUpdate = true;
 
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            p_70670_1_.func_188419_a().func_111185_a(this, this.func_110140_aT(), p_70670_1_.func_76458_c());
+            id.getPotion().applyAttributesModifiersToEntity(this, this.getAttributeMap(), id.getAmplifier());
         }
     }
 
-    protected void func_70695_b(PotionEffect p_70695_1_, boolean p_70695_2_)
+    protected void onChangedPotionEffect(PotionEffect id, boolean p_70695_2_)
     {
-        this.field_70752_e = true;
+        this.potionsNeedUpdate = true;
 
-        if (p_70695_2_ && !this.field_70170_p.field_72995_K)
+        if (p_70695_2_ && !this.world.isRemote)
         {
-            Potion potion = p_70695_1_.func_188419_a();
-            potion.func_111187_a(this, this.func_110140_aT(), p_70695_1_.func_76458_c());
-            potion.func_111185_a(this, this.func_110140_aT(), p_70695_1_.func_76458_c());
+            Potion potion = id.getPotion();
+            potion.removeAttributesModifiersFromEntity(this, this.getAttributeMap(), id.getAmplifier());
+            potion.applyAttributesModifiersToEntity(this, this.getAttributeMap(), id.getAmplifier());
         }
     }
 
-    protected void func_70688_c(PotionEffect p_70688_1_)
+    protected void onFinishedPotionEffect(PotionEffect effect)
     {
-        this.field_70752_e = true;
+        this.potionsNeedUpdate = true;
 
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            p_70688_1_.func_188419_a().func_111187_a(this, this.func_110140_aT(), p_70688_1_.func_76458_c());
+            effect.getPotion().removeAttributesModifiersFromEntity(this, this.getAttributeMap(), effect.getAmplifier());
         }
     }
 
-    public void func_70691_i(float p_70691_1_)
+    // CraftBukkit start - Delegate so we can handle providing a reason for health being regained
+    public void heal(float f) {
+        f = net.minecraftforge.event.ForgeEventFactory.onLivingHeal(this, f);
+        heal(f, EntityRegainHealthEvent.RegainReason.REGEN);
+    }
+    public void heal(float healAmount, EntityRegainHealthEvent.RegainReason reason)
     {
-        float f = this.func_110143_aJ();
+        float f1 = this.getHealth();
 
-        if (f > 0.0F)
-        {
-            this.func_70606_j(f + p_70691_1_);
+        if (f1 > 0.0F) {
+            EntityRegainHealthEvent event = new EntityRegainHealthEvent(this.getBukkitEntity(), healAmount, reason);
+            this.world.getServer().getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                this.setHealth((float) (this.getHealth() + event.getAmount()));
+            }
+            // CraftBukkit end
         }
     }
 
-    public final float func_110143_aJ()
+    public final float getHealth()
     {
-        return ((Float)this.field_70180_af.func_187225_a(field_184632_c)).floatValue();
+        return ((Float)this.dataManager.get(HEALTH)).floatValue();
     }
 
-    public void func_70606_j(float p_70606_1_)
+    public void setHealth(float health)
     {
-        this.field_70180_af.func_187227_b(field_184632_c, Float.valueOf(MathHelper.func_76131_a(p_70606_1_, 0.0F, this.func_110138_aP())));
+        this.dataManager.set(HEALTH, Float.valueOf(MathHelper.clamp(health, 0.0F, this.getMaxHealth())));
     }
 
-    public boolean func_70097_a(DamageSource p_70097_1_, float p_70097_2_)
+    public boolean attackEntityFrom(DamageSource source, float amount)
     {
-        if (this.func_180431_b(p_70097_1_))
+        if (!net.minecraftforge.common.ForgeHooks.onLivingAttack(this, source, amount)) return false;
+        if (this.isEntityInvulnerable(source))
         {
             return false;
         }
-        else if (this.field_70170_p.field_72995_K)
+        else if (this.world.isRemote)
         {
             return false;
         }
         else
         {
-            this.field_70708_bq = 0;
+            this.entityAge = 0;
 
-            if (this.func_110143_aJ() <= 0.0F)
+            if (this.getHealth() <= 0.0F)
             {
                 return false;
             }
-            else if (p_70097_1_.func_76347_k() && this.func_70644_a(MobEffects.field_76426_n))
+            else if (source.isFireDamage() && this.isPotionActive(MobEffects.FIRE_RESISTANCE))
             {
                 return false;
             }
             else
             {
-                if ((p_70097_1_ == DamageSource.field_82728_o || p_70097_1_ == DamageSource.field_82729_p) && !this.func_184582_a(EntityEquipmentSlot.HEAD).func_190926_b())
+                if ((source == DamageSource.ANVIL || source == DamageSource.FALLING_BLOCK) && !this.getItemStackFromSlot(EntityEquipmentSlot.HEAD).isEmpty())
                 {
-                    this.func_184582_a(EntityEquipmentSlot.HEAD).func_77972_a((int)(p_70097_2_ * 4.0F + this.field_70146_Z.nextFloat() * p_70097_2_ * 2.0F), this);
-                    p_70097_2_ *= 0.75F;
+                    this.getItemStackFromSlot(EntityEquipmentSlot.HEAD).damageItem((int)(amount * 4.0F + this.rand.nextFloat() * amount * 2.0F), this);
+                    amount *= 0.75F;
                 }
 
                 boolean flag = false;
 
-                if (p_70097_2_ > 0.0F && this.func_184583_d(p_70097_1_))
+                if (amount > 0.0F && this.canBlockDamageSource(source))
                 {
-                    this.func_184590_k(p_70097_2_);
-                    p_70097_2_ = 0.0F;
+                    this.damageShield(amount);
+                    amount = 0.0F;
 
-                    if (!p_70097_1_.func_76352_a())
+                    if (!source.isProjectile())
                     {
-                        Entity entity = p_70097_1_.func_76364_f();
+                        Entity entity = source.getSourceOfDamage();
 
                         if (entity instanceof EntityLivingBase)
                         {
-                            this.func_190629_c((EntityLivingBase)entity);
+                            this.blockUsingShield((EntityLivingBase)entity);
                         }
                     }
 
                     flag = true;
                 }
 
-                this.field_70721_aZ = 1.5F;
+                this.limbSwingAmount = 1.5F;
                 boolean flag1 = true;
 
-                if ((float)this.field_70172_ad > (float)this.field_70771_an / 2.0F)
+                if ((float)this.hurtResistantTime > (float)this.maxHurtResistantTime / 2.0F)
                 {
-                    if (p_70097_2_ <= this.field_110153_bc)
+                    if (amount <= this.lastDamage)
                     {
                         return false;
                     }
 
-                    this.func_70665_d(p_70097_1_, p_70097_2_ - this.field_110153_bc);
-                    this.field_110153_bc = p_70097_2_;
+                    this.damageEntity(source, amount - this.lastDamage);
+                    this.lastDamage = amount;
                     flag1 = false;
                 }
                 else
                 {
-                    this.field_110153_bc = p_70097_2_;
-                    this.field_70172_ad = this.field_70771_an;
-                    this.func_70665_d(p_70097_1_, p_70097_2_);
-                    this.field_70738_aO = 10;
-                    this.field_70737_aN = this.field_70738_aO;
+                    this.lastDamage = amount;
+                    this.hurtResistantTime = this.maxHurtResistantTime;
+                    this.damageEntity(source, amount);
+                    this.maxHurtTime = 10;
+                    this.hurtTime = this.maxHurtTime;
                 }
 
-                this.field_70739_aP = 0.0F;
-                Entity entity1 = p_70097_1_.func_76346_g();
+                this.attackedAtYaw = 0.0F;
+                Entity entity1 = source.getEntity();
 
                 if (entity1 != null)
                 {
                     if (entity1 instanceof EntityLivingBase)
                     {
-                        this.func_70604_c((EntityLivingBase)entity1);
+                        this.setRevengeTarget((EntityLivingBase)entity1);
                     }
 
                     if (entity1 instanceof EntityPlayer)
                     {
-                        this.field_70718_bc = 100;
-                        this.field_70717_bb = (EntityPlayer)entity1;
+                        this.recentlyHit = 100;
+                        this.attackingPlayer = (EntityPlayer)entity1;
                     }
-                    else if (entity1 instanceof EntityWolf)
+                    else if (entity1 instanceof net.minecraft.entity.passive.EntityTameable)
                     {
-                        EntityWolf entitywolf = (EntityWolf)entity1;
+                        net.minecraft.entity.passive.EntityTameable entitywolf = (net.minecraft.entity.passive.EntityTameable)entity1;
 
-                        if (entitywolf.func_70909_n())
+                        if (entitywolf.isTamed())
                         {
-                            this.field_70718_bc = 100;
-                            this.field_70717_bb = null;
+                            this.recentlyHit = 100;
+                            this.attackingPlayer = null;
                         }
                     }
                 }
@@ -934,79 +995,79 @@
                 {
                     if (flag)
                     {
-                        this.field_70170_p.func_72960_a(this, (byte)29);
+                        this.world.setEntityState(this, (byte)29);
                     }
-                    else if (p_70097_1_ instanceof EntityDamageSource && ((EntityDamageSource)p_70097_1_).func_180139_w())
+                    else if (source instanceof EntityDamageSource && ((EntityDamageSource)source).getIsThornsDamage())
                     {
-                        this.field_70170_p.func_72960_a(this, (byte)33);
+                        this.world.setEntityState(this, (byte)33);
                     }
                     else
                     {
-                        this.field_70170_p.func_72960_a(this, (byte)2);
+                        this.world.setEntityState(this, (byte)2);
                     }
 
-                    if (p_70097_1_ != DamageSource.field_76369_e && (!flag || p_70097_2_ > 0.0F))
+                    if (source != DamageSource.DROWN && (!flag || amount > 0.0F))
                     {
-                        this.func_70018_K();
+                        this.setBeenAttacked();
                     }
 
                     if (entity1 != null)
                     {
-                        double d1 = entity1.field_70165_t - this.field_70165_t;
+                        double d1 = entity1.posX - this.posX;
                         double d0;
 
-                        for (d0 = entity1.field_70161_v - this.field_70161_v; d1 * d1 + d0 * d0 < 1.0E-4D; d0 = (Math.random() - Math.random()) * 0.01D)
+                        for (d0 = entity1.posZ - this.posZ; d1 * d1 + d0 * d0 < 1.0E-4D; d0 = (Math.random() - Math.random()) * 0.01D)
                         {
                             d1 = (Math.random() - Math.random()) * 0.01D;
                         }
 
-                        this.field_70739_aP = (float)(MathHelper.func_181159_b(d0, d1) * (180D / Math.PI) - (double)this.field_70177_z);
-                        this.func_70653_a(entity1, 0.4F, d1, d0);
+                        this.attackedAtYaw = (float)(MathHelper.atan2(d0, d1) * (180D / Math.PI) - (double)this.rotationYaw);
+                        this.knockBack(entity1, 0.4F, d1, d0);
                     }
                     else
                     {
-                        this.field_70739_aP = (float)((int)(Math.random() * 2.0D) * 180);
+                        this.attackedAtYaw = (float)((int)(Math.random() * 2.0D) * 180);
                     }
                 }
 
-                if (this.func_110143_aJ() <= 0.0F)
+                if (this.getHealth() <= 0.0F)
                 {
-                    if (!this.func_190628_d(p_70097_1_))
+                    if (!this.checkTotemDeathProtection(source))
                     {
-                        SoundEvent soundevent = this.func_184615_bR();
+                        SoundEvent soundevent = this.getDeathSound();
 
                         if (flag1 && soundevent != null)
                         {
-                            this.func_184185_a(soundevent, this.func_70599_aP(), this.func_70647_i());
+                            this.playSound(soundevent, this.getSoundVolume(), this.getSoundPitch());
                         }
 
-                        this.func_70645_a(p_70097_1_);
+                        this.onDeath(source);
                     }
                 }
                 else if (flag1)
                 {
-                    this.func_184581_c(p_70097_1_);
+                    this.playHurtSound(source);
                 }
 
-                if (!flag || p_70097_2_ > 0.0F)
+                if (!flag || amount > 0.0F)
                 {
-                    this.field_189750_bF = p_70097_1_;
-                    this.field_189751_bG = this.field_70170_p.func_82737_E();
+                    this.lastDamageSource = source;
+                    this.lastDamageStamp = this.world.getTotalWorldTime();
                 }
 
-                return !flag || p_70097_2_ > 0.0F;
+                return !flag || amount > 0.0F;
             }
         }
     }
 
-    protected void func_190629_c(EntityLivingBase p_190629_1_)
+    protected void blockUsingShield(EntityLivingBase p_190629_1_)
     {
-        p_190629_1_.func_70653_a(this, 0.5F, this.field_70165_t - p_190629_1_.field_70165_t, this.field_70161_v - p_190629_1_.field_70161_v);
+        p_190629_1_.knockBack(this, 0.5F, this.posX - p_190629_1_.posX, this.posZ - p_190629_1_.posZ);
     }
 
-    private boolean func_190628_d(DamageSource p_190628_1_)
+    private boolean checkTotemDeathProtection(DamageSource p_190628_1_)
     {
-        if (p_190628_1_.func_76357_e())
+        if (p_190628_1_.canHarmInCreative())
         {
             return false;
         }
@@ -1016,11 +1077,11 @@
 
             for (EnumHand enumhand : EnumHand.values())
             {
-                ItemStack itemstack = this.func_184586_b(enumhand);
+                ItemStack itemstack = this.getHeldItem(enumhand);
 
-                if (itemstack.func_77973_b() == Items.field_190929_cY)
+                if (itemstack.getItem() == Items.TOTEM)
                 {
-                    itemstack.func_190918_g(1);
+                    itemstack.shrink(1);
                     flag = true;
                     break;
                 }
@@ -1030,14 +1091,14 @@
             {
                 if (this instanceof EntityPlayer)
                 {
-                    ((EntityPlayer)this).func_71029_a(StatList.func_188057_b(Items.field_190929_cY));
+                    ((EntityPlayer)this).addStat(StatList.getObjectUseStats(Items.TOTEM));
                 }
 
-                this.func_70606_j(1.0F);
-                this.func_70674_bp();
-                this.func_70690_d(new PotionEffect(MobEffects.field_76428_l, 900, 1));
-                this.func_70690_d(new PotionEffect(MobEffects.field_76444_x, 100, 1));
-                this.field_70170_p.func_72960_a(this, (byte)35);
+                this.setHealth(1.0F);
+                this.clearActivePotions();
+                this.addPotionEffect(new PotionEffect(MobEffects.REGENERATION, 900, 1));
+                this.addPotionEffect(new PotionEffect(MobEffects.ABSORPTION, 100, 1));
+                this.world.setEntityState(this, (byte)35);
             }
 
             return flag;
@@ -1045,39 +1106,39 @@
     }
 
     @Nullable
-    public DamageSource func_189748_bU()
+    public DamageSource getLastDamageSource()
     {
-        if (this.field_70170_p.func_82737_E() - this.field_189751_bG > 40L)
+        if (this.world.getTotalWorldTime() - this.lastDamageStamp > 40L)
         {
-            this.field_189750_bF = null;
+            this.lastDamageSource = null;
         }
 
-        return this.field_189750_bF;
+        return this.lastDamageSource;
     }
 
-    protected void func_184581_c(DamageSource p_184581_1_)
+    protected void playHurtSound(DamageSource source)
     {
-        SoundEvent soundevent = this.func_184601_bQ();
+        SoundEvent soundevent = this.getHurtSound();
 
         if (soundevent != null)
         {
-            this.func_184185_a(soundevent, this.func_70599_aP(), this.func_70647_i());
+            this.playSound(soundevent, this.getSoundVolume(), this.getSoundPitch());
         }
     }
 
-    private boolean func_184583_d(DamageSource p_184583_1_)
+    private boolean canBlockDamageSource(DamageSource damageSourceIn)
     {
-        if (!p_184583_1_.func_76363_c() && this.func_184585_cz())
+        if (!damageSourceIn.isUnblockable() && this.isActiveItemStackBlocking())
         {
-            Vec3d vec3d = p_184583_1_.func_188404_v();
+            Vec3d vec3d = damageSourceIn.getDamageLocation();
 
             if (vec3d != null)
             {
-                Vec3d vec3d1 = this.func_70676_i(1.0F);
-                Vec3d vec3d2 = vec3d.func_72444_a(new Vec3d(this.field_70165_t, this.field_70163_u, this.field_70161_v)).func_72432_b();
-                vec3d2 = new Vec3d(vec3d2.field_72450_a, 0.0D, vec3d2.field_72449_c);
+                Vec3d vec3d1 = this.getLook(1.0F);
+                Vec3d vec3d2 = vec3d.subtractReverse(new Vec3d(this.posX, this.posY, this.posZ)).normalize();
+                vec3d2 = new Vec3d(vec3d2.xCoord, 0.0D, vec3d2.zCoord);
 
-                if (vec3d2.func_72430_b(vec3d1) < 0.0D)
+                if (vec3d2.dotProduct(vec3d1) < 0.0D)
                 {
                     return true;
                 }
@@ -1087,145 +1148,163 @@
         return false;
     }
 
-    public void func_70669_a(ItemStack p_70669_1_)
+    public void renderBrokenItemStack(ItemStack stack)
     {
-        this.func_184185_a(SoundEvents.field_187635_cQ, 0.8F, 0.8F + this.field_70170_p.field_73012_v.nextFloat() * 0.4F);
+        this.world.playSound(null, this.posX, this.posY, this.posZ, SoundEvents.ENTITY_ITEM_BREAK, this.getSoundCategory(), 0.8F, 0.8F + this.world.rand.nextFloat() * 0.4F); //Forge: Fix MC-2518 Items are not damaged on the client so client needs packet as well.
 
         for (int i = 0; i < 5; ++i)
         {
-            Vec3d vec3d = new Vec3d(((double)this.field_70146_Z.nextFloat() - 0.5D) * 0.1D, Math.random() * 0.1D + 0.1D, 0.0D);
-            vec3d = vec3d.func_178789_a(-this.field_70125_A * 0.017453292F);
-            vec3d = vec3d.func_178785_b(-this.field_70177_z * 0.017453292F);
-            double d0 = (double)(-this.field_70146_Z.nextFloat()) * 0.6D - 0.3D;
-            Vec3d vec3d1 = new Vec3d(((double)this.field_70146_Z.nextFloat() - 0.5D) * 0.3D, d0, 0.6D);
-            vec3d1 = vec3d1.func_178789_a(-this.field_70125_A * 0.017453292F);
-            vec3d1 = vec3d1.func_178785_b(-this.field_70177_z * 0.017453292F);
-            vec3d1 = vec3d1.func_72441_c(this.field_70165_t, this.field_70163_u + (double)this.func_70047_e(), this.field_70161_v);
-            this.field_70170_p.func_175688_a(EnumParticleTypes.ITEM_CRACK, vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, new int[] {Item.func_150891_b(p_70669_1_.func_77973_b())});
+            Vec3d vec3d = new Vec3d(((double)this.rand.nextFloat() - 0.5D) * 0.1D, Math.random() * 0.1D + 0.1D, 0.0D);
+            vec3d = vec3d.rotatePitch(-this.rotationPitch * 0.017453292F);
+            vec3d = vec3d.rotateYaw(-this.rotationYaw * 0.017453292F);
+            double d0 = (double)(-this.rand.nextFloat()) * 0.6D - 0.3D;
+            Vec3d vec3d1 = new Vec3d(((double)this.rand.nextFloat() - 0.5D) * 0.3D, d0, 0.6D);
+            vec3d1 = vec3d1.rotatePitch(-this.rotationPitch * 0.017453292F);
+            vec3d1 = vec3d1.rotateYaw(-this.rotationYaw * 0.017453292F);
+            vec3d1 = vec3d1.addVector(this.posX, this.posY + (double)this.getEyeHeight(), this.posZ);
+            if (this.world instanceof WorldServer) //Forge: Fix MC-2518 spawnParticle is nooped on server, need to use server specific variant
+                ((WorldServer)this.world).spawnParticle(EnumParticleTypes.ITEM_CRACK, vec3d1.xCoord, vec3d1.yCoord, vec3d1.zCoord, 0,  vec3d.xCoord, vec3d.yCoord + 0.05D, vec3d.zCoord, 0.0D, Item.getIdFromItem(stack.getItem()), stack.getMetadata());
+            else //Fix the fact that spawning ItemCrack uses TWO arguments.
+                this.world.spawnParticle(EnumParticleTypes.ITEM_CRACK, vec3d1.xCoord, vec3d1.yCoord, vec3d1.zCoord, vec3d.xCoord, vec3d.yCoord + 0.05D, vec3d.zCoord, Item.getIdFromItem(stack.getItem()), stack.getMetadata());
         }
     }
 
-    public void func_70645_a(DamageSource p_70645_1_)
+    public void onDeath(DamageSource cause)
     {
-        if (!this.field_70729_aU)
+        if (net.minecraftforge.common.ForgeHooks.onLivingDeath(this, cause)) return;
+        if (!this.dead)
         {
-            Entity entity = p_70645_1_.func_76346_g();
-            EntityLivingBase entitylivingbase = this.func_94060_bK();
+            Entity entity = cause.getEntity();
+            EntityLivingBase entitylivingbase = this.getAttackingEntity();
 
-            if (this.field_70744_aE >= 0 && entitylivingbase != null)
+            if (this.scoreValue >= 0 && entitylivingbase != null)
             {
-                entitylivingbase.func_70084_c(this, this.field_70744_aE);
+                entitylivingbase.addToPlayerScore(this, this.scoreValue);
             }
 
             if (entity != null)
             {
-                entity.func_70074_a(this);
+                entity.onKillEntity(this);
             }
 
-            this.field_70729_aU = true;
-            this.func_110142_aN().func_94549_h();
+            this.dead = true;
+            this.getCombatTracker().reset();
 
-            if (!this.field_70170_p.field_72995_K)
+            if (!this.world.isRemote)
             {
-                int i = 0;
+                int i = net.minecraftforge.common.ForgeHooks.getLootingLevel(this, entity, cause);
 
-                if (entity instanceof EntityPlayer)
+                captureDrops = true;
+                capturedDrops.clear();
+
+                if (this.canDropLoot() && this.world.getGameRules().getBoolean("doMobLoot"))
                 {
-                    i = EnchantmentHelper.func_185283_h((EntityLivingBase)entity);
+                    boolean flag = this.recentlyHit > 0;
+                    this.dropLoot(flag, i, cause);
+                    // CraftBukkit start - Call death event
+                    CraftEventFactory.callEntityDeathEvent(this, this.drops);
+                    this.drops = new ArrayList<org.bukkit.inventory.ItemStack>();
+                } else {
+                    CraftEventFactory.callEntityDeathEvent(this);
+                    // CraftBukkit end
                 }
 
-                if (this.func_146066_aG() && this.field_70170_p.func_82736_K().func_82766_b("doMobLoot"))
+                captureDrops = false;
+
+                if (!net.minecraftforge.common.ForgeHooks.onLivingDrops(this, cause, capturedDrops, i, recentlyHit > 0))
                 {
-                    boolean flag = this.field_70718_bc > 0;
-                    this.func_184610_a(flag, i, p_70645_1_);
+                    for (EntityItem item : capturedDrops)
+                    {
+                        world.spawnEntity(item);
+                    }
                 }
             }
 
-            this.field_70170_p.func_72960_a(this, (byte)3);
+            this.world.setEntityState(this, (byte)3);
         }
     }
 
-    protected void func_184610_a(boolean p_184610_1_, int p_184610_2_, DamageSource p_184610_3_)
+    protected void dropLoot(boolean wasRecentlyHit, int lootingModifier, DamageSource source)
     {
-        this.func_70628_a(p_184610_1_, p_184610_2_);
-        this.func_82160_b(p_184610_1_, p_184610_2_);
+        this.dropFewItems(wasRecentlyHit, lootingModifier);
+        this.dropEquipment(wasRecentlyHit, lootingModifier);
     }
 
-    protected void func_82160_b(boolean p_82160_1_, int p_82160_2_)
+    protected void dropEquipment(boolean wasRecentlyHit, int lootingModifier)
     {
     }
 
-    public void func_70653_a(Entity p_70653_1_, float p_70653_2_, double p_70653_3_, double p_70653_5_)
+    public void knockBack(Entity entityIn, float strength, double xRatio, double zRatio)
     {
-        if (this.field_70146_Z.nextDouble() >= this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e())
+        if (this.rand.nextDouble() >= this.getEntityAttribute(SharedMonsterAttributes.KNOCKBACK_RESISTANCE).getAttributeValue())
         {
-            this.field_70160_al = true;
-            float f = MathHelper.func_76133_a(p_70653_3_ * p_70653_3_ + p_70653_5_ * p_70653_5_);
-            this.field_70159_w /= 2.0D;
-            this.field_70179_y /= 2.0D;
-            this.field_70159_w -= p_70653_3_ / (double)f * (double)p_70653_2_;
-            this.field_70179_y -= p_70653_5_ / (double)f * (double)p_70653_2_;
+            this.isAirBorne = true;
+            float f = MathHelper.sqrt(xRatio * xRatio + zRatio * zRatio);
+            this.motionX /= 2.0D;
+            this.motionZ /= 2.0D;
+            this.motionX -= xRatio / (double)f * (double)strength;
+            this.motionZ -= zRatio / (double)f * (double)strength;
 
-            if (this.field_70122_E)
+            if (this.onGround)
             {
-                this.field_70181_x /= 2.0D;
-                this.field_70181_x += (double)p_70653_2_;
+                this.motionY /= 2.0D;
+                this.motionY += (double)strength;
 
-                if (this.field_70181_x > 0.4000000059604645D)
+                if (this.motionY > 0.4000000059604645D)
                 {
-                    this.field_70181_x = 0.4000000059604645D;
+                    this.motionY = 0.4000000059604645D;
                 }
             }
         }
     }
 
     @Nullable
-    protected SoundEvent func_184601_bQ()
+    protected SoundEvent getHurtSound()
     {
-        return SoundEvents.field_187543_bD;
+        return SoundEvents.ENTITY_GENERIC_HURT;
     }
 
     @Nullable
-    protected SoundEvent func_184615_bR()
+    protected SoundEvent getDeathSound()
     {
-        return SoundEvents.field_187661_by;
+        return SoundEvents.ENTITY_GENERIC_DEATH;
     }
 
-    protected SoundEvent func_184588_d(int p_184588_1_)
+    protected SoundEvent getFallSound(int heightIn)
     {
-        return p_184588_1_ > 4 ? SoundEvents.field_187655_bw : SoundEvents.field_187545_bE;
+        return heightIn > 4 ? SoundEvents.ENTITY_GENERIC_BIG_FALL : SoundEvents.ENTITY_GENERIC_SMALL_FALL;
     }
 
-    protected void func_70628_a(boolean p_70628_1_, int p_70628_2_)
+    protected void dropFewItems(boolean wasRecentlyHit, int lootingModifier)
     {
     }
 
-    public boolean func_70617_f_()
+    public boolean isOnLadder()
     {
-        int i = MathHelper.func_76128_c(this.field_70165_t);
-        int j = MathHelper.func_76128_c(this.func_174813_aQ().field_72338_b);
-        int k = MathHelper.func_76128_c(this.field_70161_v);
+        int i = MathHelper.floor(this.posX);
+        int j = MathHelper.floor(this.getEntityBoundingBox().minY);
+        int k = MathHelper.floor(this.posZ);
 
-        if (this instanceof EntityPlayer && ((EntityPlayer)this).func_175149_v())
+        if (this instanceof EntityPlayer && ((EntityPlayer)this).isSpectator())
         {
             return false;
         }
         else
         {
             BlockPos blockpos = new BlockPos(i, j, k);
-            IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos);
-            Block block = iblockstate.func_177230_c();
-            return block != Blocks.field_150468_ap && block != Blocks.field_150395_bd ? block instanceof BlockTrapDoor && this.func_184604_a(blockpos, iblockstate) : true;
+            IBlockState iblockstate = this.world.getBlockState(blockpos);
+            Block block = iblockstate.getBlock();
+            return net.minecraftforge.common.ForgeHooks.isLivingOnLadder(iblockstate, world, new BlockPos(i, j, k), this);
         }
     }
 
-    private boolean func_184604_a(BlockPos p_184604_1_, IBlockState p_184604_2_)
+    private boolean canGoThroughtTrapDoorOnLadder(BlockPos pos, IBlockState state)
     {
-        if (((Boolean)p_184604_2_.func_177229_b(BlockTrapDoor.field_176283_b)).booleanValue())
+        if (((Boolean)state.getValue(BlockTrapDoor.OPEN)).booleanValue())
         {
-            IBlockState iblockstate = this.field_70170_p.func_180495_p(p_184604_1_.func_177977_b());
+            IBlockState iblockstate = this.world.getBlockState(pos.down());
 
-            if (iblockstate.func_177230_c() == Blocks.field_150468_ap && iblockstate.func_177229_b(BlockLadder.field_176382_a) == p_184604_2_.func_177229_b(BlockTrapDoor.field_176284_a))
+            if (iblockstate.getBlock() == Blocks.LADDER && iblockstate.getValue(BlockLadder.FACING) == state.getValue(BlockTrapDoor.FACING))
             {
                 return true;
             }
@@ -1234,679 +1313,690 @@
         return false;
     }
 
-    public boolean func_70089_S()
+    public boolean isEntityAlive()
     {
-        return !this.field_70128_L && this.func_110143_aJ() > 0.0F;
+        return !this.isDead && this.getHealth() > 0.0F;
     }
 
-    public void func_180430_e(float p_180430_1_, float p_180430_2_)
+    public void fall(float distance, float damageMultiplier)
     {
-        super.func_180430_e(p_180430_1_, p_180430_2_);
-        PotionEffect potioneffect = this.func_70660_b(MobEffects.field_76430_j);
-        float f = potioneffect == null ? 0.0F : (float)(potioneffect.func_76458_c() + 1);
-        int i = MathHelper.func_76123_f((p_180430_1_ - 3.0F - f) * p_180430_2_);
+        float[] ret = net.minecraftforge.common.ForgeHooks.onLivingFall(this, distance, damageMultiplier);
+        if (ret == null) return;
+        distance = ret[0]; damageMultiplier = ret[1];
+        super.fall(distance, damageMultiplier);
+        PotionEffect potioneffect = this.getActivePotionEffect(MobEffects.JUMP_BOOST);
+        float f = potioneffect == null ? 0.0F : (float)(potioneffect.getAmplifier() + 1);
+        int i = MathHelper.ceil((distance - 3.0F - f) * damageMultiplier);
 
         if (i > 0)
         {
-            this.func_184185_a(this.func_184588_d(i), 1.0F, 1.0F);
-            this.func_70097_a(DamageSource.field_76379_h, (float)i);
-            int j = MathHelper.func_76128_c(this.field_70165_t);
-            int k = MathHelper.func_76128_c(this.field_70163_u - 0.20000000298023224D);
-            int l = MathHelper.func_76128_c(this.field_70161_v);
-            IBlockState iblockstate = this.field_70170_p.func_180495_p(new BlockPos(j, k, l));
+            this.playSound(this.getFallSound(i), 1.0F, 1.0F);
+            this.attackEntityFrom(DamageSource.FALL, (float)i);
+            int j = MathHelper.floor(this.posX);
+            int k = MathHelper.floor(this.posY - 0.20000000298023224D);
+            int l = MathHelper.floor(this.posZ);
+            IBlockState iblockstate = this.world.getBlockState(new BlockPos(j, k, l));
 
-            if (iblockstate.func_185904_a() != Material.field_151579_a)
+            if (iblockstate.getMaterial() != Material.AIR)
             {
-                SoundType soundtype = iblockstate.func_177230_c().func_185467_w();
-                this.func_184185_a(soundtype.func_185842_g(), soundtype.func_185843_a() * 0.5F, soundtype.func_185847_b() * 0.75F);
+                SoundType soundtype = iblockstate.getBlock().getSoundType(iblockstate, world, new BlockPos(j, k, l), this);
+                this.playSound(soundtype.getFallSound(), soundtype.getVolume() * 0.5F, soundtype.getPitch() * 0.75F);
             }
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70057_ab()
+    public void performHurtAnimation()
     {
-        this.field_70738_aO = 10;
-        this.field_70737_aN = this.field_70738_aO;
-        this.field_70739_aP = 0.0F;
+        this.maxHurtTime = 10;
+        this.hurtTime = this.maxHurtTime;
+        this.attackedAtYaw = 0.0F;
     }
 
-    public int func_70658_aO()
+    public int getTotalArmorValue()
     {
-        IAttributeInstance iattributeinstance = this.func_110148_a(SharedMonsterAttributes.field_188791_g);
-        return MathHelper.func_76128_c(iattributeinstance.func_111126_e());
+        IAttributeInstance iattributeinstance = this.getEntityAttribute(SharedMonsterAttributes.ARMOR);
+        return MathHelper.floor(iattributeinstance.getAttributeValue());
     }
 
-    protected void func_70675_k(float p_70675_1_)
+    protected void damageArmor(float damage)
     {
     }
 
-    protected void func_184590_k(float p_184590_1_)
+    protected void damageShield(float damage)
     {
     }
 
-    protected float func_70655_b(DamageSource p_70655_1_, float p_70655_2_)
+    protected float applyArmorCalculations(DamageSource source, float damage)
     {
-        if (!p_70655_1_.func_76363_c())
+        if (!source.isUnblockable())
         {
-            this.func_70675_k(p_70655_2_);
-            p_70655_2_ = CombatRules.func_189427_a(p_70655_2_, (float)this.func_70658_aO(), (float)this.func_110148_a(SharedMonsterAttributes.field_189429_h).func_111126_e());
+            this.damageArmor(damage);
+            damage = CombatRules.getDamageAfterAbsorb(damage, (float)this.getTotalArmorValue(), (float)this.getEntityAttribute(SharedMonsterAttributes.ARMOR_TOUGHNESS).getAttributeValue());
         }
 
-        return p_70655_2_;
+        return damage;
     }
 
-    protected float func_70672_c(DamageSource p_70672_1_, float p_70672_2_)
+    protected float applyPotionDamageCalculations(DamageSource source, float damage)
     {
-        if (p_70672_1_.func_151517_h())
+        if (source.isDamageAbsolute())
         {
-            return p_70672_2_;
+            return damage;
         }
         else
         {
-            if (this.func_70644_a(MobEffects.field_76429_m) && p_70672_1_ != DamageSource.field_76380_i)
+            if (this.isPotionActive(MobEffects.RESISTANCE) && source != DamageSource.OUT_OF_WORLD)
             {
-                int i = (this.func_70660_b(MobEffects.field_76429_m).func_76458_c() + 1) * 5;
+                int i = (this.getActivePotionEffect(MobEffects.RESISTANCE).getAmplifier() + 1) * 5;
                 int j = 25 - i;
-                float f = p_70672_2_ * (float)j;
-                p_70672_2_ = f / 25.0F;
+                float f = damage * (float)j;
+                damage = f / 25.0F;
             }
 
-            if (p_70672_2_ <= 0.0F)
+            if (damage <= 0.0F)
             {
                 return 0.0F;
             }
             else
             {
-                int k = EnchantmentHelper.func_77508_a(this.func_184193_aE(), p_70672_1_);
+                int k = EnchantmentHelper.getEnchantmentModifierDamage(this.getArmorInventoryList(), source);
 
                 if (k > 0)
                 {
-                    p_70672_2_ = CombatRules.func_188401_b(p_70672_2_, (float)k);
+                    damage = CombatRules.getDamageAfterMagicAbsorb(damage, (float)k);
                 }
 
-                return p_70672_2_;
+                return damage;
             }
         }
     }
 
-    protected void func_70665_d(DamageSource p_70665_1_, float p_70665_2_)
+    protected void damageEntity(DamageSource damageSrc, float damageAmount)
     {
-        if (!this.func_180431_b(p_70665_1_))
+        if (!this.isEntityInvulnerable(damageSrc))
         {
-            p_70665_2_ = this.func_70655_b(p_70665_1_, p_70665_2_);
-            p_70665_2_ = this.func_70672_c(p_70665_1_, p_70665_2_);
-            float f = p_70665_2_;
-            p_70665_2_ = Math.max(p_70665_2_ - this.func_110139_bj(), 0.0F);
-            this.func_110149_m(this.func_110139_bj() - (f - p_70665_2_));
+            damageAmount = net.minecraftforge.common.ForgeHooks.onLivingHurt(this, damageSrc, damageAmount);
+            if (damageAmount <= 0) return;
+            damageAmount = this.applyArmorCalculations(damageSrc, damageAmount);
+            damageAmount = this.applyPotionDamageCalculations(damageSrc, damageAmount);
+            float f = damageAmount;
+            damageAmount = Math.max(damageAmount - this.getAbsorptionAmount(), 0.0F);
+            this.setAbsorptionAmount(this.getAbsorptionAmount() - (f - damageAmount));
 
-            if (p_70665_2_ != 0.0F)
+            if (damageAmount != 0.0F)
             {
-                float f1 = this.func_110143_aJ();
-                this.func_70606_j(f1 - p_70665_2_);
-                this.func_110142_aN().func_94547_a(p_70665_1_, f1, p_70665_2_);
-                this.func_110149_m(this.func_110139_bj() - p_70665_2_);
+                float f1 = this.getHealth();
+                this.setHealth(f1 - damageAmount);
+                this.getCombatTracker().trackDamage(damageSrc, f1, damageAmount);
+                this.setAbsorptionAmount(this.getAbsorptionAmount() - damageAmount);
             }
         }
     }
 
-    public CombatTracker func_110142_aN()
+    public CombatTracker getCombatTracker()
     {
-        return this.field_94063_bt;
+        return this._combatTracker;
     }
 
     @Nullable
-    public EntityLivingBase func_94060_bK()
+    public EntityLivingBase getAttackingEntity()
     {
-        return (EntityLivingBase)(this.field_94063_bt.func_94550_c() != null ? this.field_94063_bt.func_94550_c() : (this.field_70717_bb != null ? this.field_70717_bb : (this.field_70755_b != null ? this.field_70755_b : null)));
+        return (EntityLivingBase)(this._combatTracker.getBestAttacker() != null ? this._combatTracker.getBestAttacker() : (this.attackingPlayer != null ? this.attackingPlayer : (this.entityLivingToAttack != null ? this.entityLivingToAttack : null)));
     }
 
-    public final float func_110138_aP()
+    public final float getMaxHealth()
     {
-        return (float)this.func_110148_a(SharedMonsterAttributes.field_111267_a).func_111126_e();
+        return (float)this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).getAttributeValue();
     }
 
-    public final int func_85035_bI()
+    public final int getArrowCountInEntity()
     {
-        return ((Integer)this.field_70180_af.func_187225_a(field_184635_h)).intValue();
+        return ((Integer)this.dataManager.get(ARROW_COUNT_IN_ENTITY)).intValue();
     }
 
-    public final void func_85034_r(int p_85034_1_)
+    public final void setArrowCountInEntity(int count)
     {
-        this.field_70180_af.func_187227_b(field_184635_h, Integer.valueOf(p_85034_1_));
+        this.dataManager.set(ARROW_COUNT_IN_ENTITY, Integer.valueOf(count));
     }
 
-    private int func_82166_i()
+    private int getArmSwingAnimationEnd()
     {
-        return this.func_70644_a(MobEffects.field_76422_e) ? 6 - (1 + this.func_70660_b(MobEffects.field_76422_e).func_76458_c()) : (this.func_70644_a(MobEffects.field_76419_f) ? 6 + (1 + this.func_70660_b(MobEffects.field_76419_f).func_76458_c()) * 2 : 6);
+        return this.isPotionActive(MobEffects.HASTE) ? 6 - (1 + this.getActivePotionEffect(MobEffects.HASTE).getAmplifier()) : (this.isPotionActive(MobEffects.MINING_FATIGUE) ? 6 + (1 + this.getActivePotionEffect(MobEffects.MINING_FATIGUE).getAmplifier()) * 2 : 6);
     }
 
-    public void func_184609_a(EnumHand p_184609_1_)
+    public void swingArm(EnumHand hand)
     {
-        if (!this.field_82175_bq || this.field_110158_av >= this.func_82166_i() / 2 || this.field_110158_av < 0)
+        ItemStack stack = this.getHeldItem(hand);
+        if (stack != null && stack.getItem() != null)
         {
-            this.field_110158_av = -1;
-            this.field_82175_bq = true;
-            this.field_184622_au = p_184609_1_;
+            if (stack.getItem().onEntitySwing(this, stack)) return;
+        }
+        if (!this.isSwingInProgress || this.swingProgressInt >= this.getArmSwingAnimationEnd() / 2 || this.swingProgressInt < 0)
+        {
+            this.swingProgressInt = -1;
+            this.isSwingInProgress = true;
+            this.swingingHand = hand;
 
-            if (this.field_70170_p instanceof WorldServer)
+            if (this.world instanceof WorldServer)
             {
-                ((WorldServer)this.field_70170_p).func_73039_n().func_151247_a(this, new SPacketAnimation(this, p_184609_1_ == EnumHand.MAIN_HAND ? 0 : 3));
+                ((WorldServer)this.world).getEntityTracker().sendToTracking(this, new SPacketAnimation(this, hand == EnumHand.MAIN_HAND ? 0 : 3));
             }
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70103_a(byte p_70103_1_)
+    public void handleStatusUpdate(byte id)
     {
-        boolean flag = p_70103_1_ == 33;
+        boolean flag = id == 33;
 
-        if (p_70103_1_ != 2 && !flag)
+        if (id != 2 && !flag)
         {
-            if (p_70103_1_ == 3)
+            if (id == 3)
             {
-                SoundEvent soundevent1 = this.func_184615_bR();
+                SoundEvent soundevent1 = this.getDeathSound();
 
                 if (soundevent1 != null)
                 {
-                    this.func_184185_a(soundevent1, this.func_70599_aP(), (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.0F);
+                    this.playSound(soundevent1, this.getSoundVolume(), (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
                 }
 
-                this.func_70606_j(0.0F);
-                this.func_70645_a(DamageSource.field_76377_j);
+                this.setHealth(0.0F);
+                this.onDeath(DamageSource.GENERIC);
             }
-            else if (p_70103_1_ == 30)
+            else if (id == 30)
             {
-                this.func_184185_a(SoundEvents.field_187769_eM, 0.8F, 0.8F + this.field_70170_p.field_73012_v.nextFloat() * 0.4F);
+                this.playSound(SoundEvents.ITEM_SHIELD_BREAK, 0.8F, 0.8F + this.world.rand.nextFloat() * 0.4F);
             }
-            else if (p_70103_1_ == 29)
+            else if (id == 29)
             {
-                this.func_184185_a(SoundEvents.field_187767_eL, 1.0F, 0.8F + this.field_70170_p.field_73012_v.nextFloat() * 0.4F);
+                this.playSound(SoundEvents.ITEM_SHIELD_BLOCK, 1.0F, 0.8F + this.world.rand.nextFloat() * 0.4F);
             }
             else
             {
-                super.func_70103_a(p_70103_1_);
+                super.handleStatusUpdate(id);
             }
         }
         else
         {
-            this.field_70721_aZ = 1.5F;
-            this.field_70172_ad = this.field_70771_an;
-            this.field_70738_aO = 10;
-            this.field_70737_aN = this.field_70738_aO;
-            this.field_70739_aP = 0.0F;
+            this.limbSwingAmount = 1.5F;
+            this.hurtResistantTime = this.maxHurtResistantTime;
+            this.maxHurtTime = 10;
+            this.hurtTime = this.maxHurtTime;
+            this.attackedAtYaw = 0.0F;
 
             if (flag)
             {
-                this.func_184185_a(SoundEvents.field_187903_gc, this.func_70599_aP(), (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.0F);
+                this.playSound(SoundEvents.ENCHANT_THORNS_HIT, this.getSoundVolume(), (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
             }
 
-            SoundEvent soundevent = this.func_184601_bQ();
+            SoundEvent soundevent = this.getHurtSound();
 
             if (soundevent != null)
             {
-                this.func_184185_a(soundevent, this.func_70599_aP(), (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.0F);
+                this.playSound(soundevent, this.getSoundVolume(), (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
             }
 
-            this.func_70097_a(DamageSource.field_76377_j, 0.0F);
+            this.attackEntityFrom(DamageSource.GENERIC, 0.0F);
         }
     }
 
-    protected void func_70076_C()
+    protected void kill()
     {
-        this.func_70097_a(DamageSource.field_76380_i, 4.0F);
+        this.attackEntityFrom(DamageSource.OUT_OF_WORLD, 4.0F);
     }
 
-    protected void func_82168_bl()
+    protected void updateArmSwingProgress()
     {
-        int i = this.func_82166_i();
+        int i = this.getArmSwingAnimationEnd();
 
-        if (this.field_82175_bq)
+        if (this.isSwingInProgress)
         {
-            ++this.field_110158_av;
+            ++this.swingProgressInt;
 
-            if (this.field_110158_av >= i)
+            if (this.swingProgressInt >= i)
             {
-                this.field_110158_av = 0;
-                this.field_82175_bq = false;
+                this.swingProgressInt = 0;
+                this.isSwingInProgress = false;
             }
         }
         else
         {
-            this.field_110158_av = 0;
+            this.swingProgressInt = 0;
         }
 
-        this.field_70733_aJ = (float)this.field_110158_av / (float)i;
+        this.swingProgress = (float)this.swingProgressInt / (float)i;
     }
 
-    public IAttributeInstance func_110148_a(IAttribute p_110148_1_)
+    public IAttributeInstance getEntityAttribute(IAttribute attribute)
     {
-        return this.func_110140_aT().func_111151_a(p_110148_1_);
+        return this.getAttributeMap().getAttributeInstance(attribute);
     }
 
-    public AbstractAttributeMap func_110140_aT()
+    public AbstractAttributeMap getAttributeMap()
     {
-        if (this.field_110155_d == null)
+        if (this.attributeMap == null)
         {
-            this.field_110155_d = new AttributeMap();
+            this.attributeMap = new AttributeMap();
         }
 
-        return this.field_110155_d;
+        return this.attributeMap;
     }
 
-    public EnumCreatureAttribute func_70668_bt()
+    public EnumCreatureAttribute getCreatureAttribute()
     {
         return EnumCreatureAttribute.UNDEFINED;
     }
 
-    public ItemStack func_184614_ca()
+    public ItemStack getHeldItemMainhand()
     {
-        return this.func_184582_a(EntityEquipmentSlot.MAINHAND);
+        return this.getItemStackFromSlot(EntityEquipmentSlot.MAINHAND);
     }
 
-    public ItemStack func_184592_cb()
+    public ItemStack getHeldItemOffhand()
     {
-        return this.func_184582_a(EntityEquipmentSlot.OFFHAND);
+        return this.getItemStackFromSlot(EntityEquipmentSlot.OFFHAND);
     }
 
-    public ItemStack func_184586_b(EnumHand p_184586_1_)
+    public ItemStack getHeldItem(EnumHand hand)
     {
-        if (p_184586_1_ == EnumHand.MAIN_HAND)
+        if (hand == EnumHand.MAIN_HAND)
         {
-            return this.func_184582_a(EntityEquipmentSlot.MAINHAND);
+            return this.getItemStackFromSlot(EntityEquipmentSlot.MAINHAND);
         }
-        else if (p_184586_1_ == EnumHand.OFF_HAND)
+        else if (hand == EnumHand.OFF_HAND)
         {
-            return this.func_184582_a(EntityEquipmentSlot.OFFHAND);
+            return this.getItemStackFromSlot(EntityEquipmentSlot.OFFHAND);
         }
         else
         {
-            throw new IllegalArgumentException("Invalid hand " + p_184586_1_);
+            throw new IllegalArgumentException("Invalid hand " + hand);
         }
     }
 
-    public void func_184611_a(EnumHand p_184611_1_, ItemStack p_184611_2_)
+    public void setHeldItem(EnumHand hand, ItemStack stack)
     {
-        if (p_184611_1_ == EnumHand.MAIN_HAND)
+        if (hand == EnumHand.MAIN_HAND)
         {
-            this.func_184201_a(EntityEquipmentSlot.MAINHAND, p_184611_2_);
+            this.setItemStackToSlot(EntityEquipmentSlot.MAINHAND, stack);
         }
         else
         {
-            if (p_184611_1_ != EnumHand.OFF_HAND)
+            if (hand != EnumHand.OFF_HAND)
             {
-                throw new IllegalArgumentException("Invalid hand " + p_184611_1_);
+                throw new IllegalArgumentException("Invalid hand " + hand);
             }
 
-            this.func_184201_a(EntityEquipmentSlot.OFFHAND, p_184611_2_);
+            this.setItemStackToSlot(EntityEquipmentSlot.OFFHAND, stack);
         }
     }
 
-    public boolean func_190630_a(EntityEquipmentSlot p_190630_1_)
+    public boolean hasItemInSlot(EntityEquipmentSlot p_190630_1_)
     {
-        return !this.func_184582_a(p_190630_1_).func_190926_b();
+        return !this.getItemStackFromSlot(p_190630_1_).isEmpty();
     }
 
-    public abstract Iterable<ItemStack> func_184193_aE();
+    public abstract Iterable<ItemStack> getArmorInventoryList();
 
-    public abstract ItemStack func_184582_a(EntityEquipmentSlot p_184582_1_);
+    public abstract ItemStack getItemStackFromSlot(EntityEquipmentSlot slotIn);
 
-    public abstract void func_184201_a(EntityEquipmentSlot p_184201_1_, ItemStack p_184201_2_);
+    public abstract void setItemStackToSlot(EntityEquipmentSlot slotIn, ItemStack stack);
 
-    public void func_70031_b(boolean p_70031_1_)
+    public void setSprinting(boolean sprinting)
     {
-        super.func_70031_b(p_70031_1_);
-        IAttributeInstance iattributeinstance = this.func_110148_a(SharedMonsterAttributes.field_111263_d);
+        super.setSprinting(sprinting);
+        IAttributeInstance iattributeinstance = this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);
 
-        if (iattributeinstance.func_111127_a(field_110156_b) != null)
+        if (iattributeinstance.getModifier(SPRINTING_SPEED_BOOST_ID) != null)
         {
-            iattributeinstance.func_111124_b(field_110157_c);
+            iattributeinstance.removeModifier(SPRINTING_SPEED_BOOST);
         }
 
-        if (p_70031_1_)
+        if (sprinting)
         {
-            iattributeinstance.func_111121_a(field_110157_c);
+            iattributeinstance.applyModifier(SPRINTING_SPEED_BOOST);
         }
     }
 
-    protected float func_70599_aP()
+    protected float getSoundVolume()
     {
         return 1.0F;
     }
 
-    protected float func_70647_i()
+    protected float getSoundPitch()
     {
-        return this.func_70631_g_() ? (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.5F : (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.0F;
+        return this.isChild() ? (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.5F : (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F;
     }
 
-    protected boolean func_70610_aX()
+    protected boolean isMovementBlocked()
     {
-        return this.func_110143_aJ() <= 0.0F;
+        return this.getHealth() <= 0.0F;
     }
 
-    public void func_110145_l(Entity p_110145_1_)
+    public void dismountEntity(Entity entityIn)
     {
-        if (!(p_110145_1_ instanceof EntityBoat) && !(p_110145_1_ instanceof AbstractHorse))
+        if (!(entityIn instanceof EntityBoat) && !(entityIn instanceof AbstractHorse))
         {
-            double d1 = p_110145_1_.field_70165_t;
-            double d13 = p_110145_1_.func_174813_aQ().field_72338_b + (double)p_110145_1_.field_70131_O;
-            double d14 = p_110145_1_.field_70161_v;
-            EnumFacing enumfacing1 = p_110145_1_.func_184172_bi();
+            double d1 = entityIn.posX;
+            double d13 = entityIn.getEntityBoundingBox().minY + (double)entityIn.height;
+            double d14 = entityIn.posZ;
+            EnumFacing enumfacing1 = entityIn.getAdjustedHorizontalFacing();
 
             if (enumfacing1 != null)
             {
-                EnumFacing enumfacing = enumfacing1.func_176746_e();
+                EnumFacing enumfacing = enumfacing1.rotateY();
                 int[][] aint1 = new int[][] {{0, 1}, {0, -1}, { -1, 1}, { -1, -1}, {1, 1}, {1, -1}, { -1, 0}, {1, 0}, {0, 1}};
-                double d5 = Math.floor(this.field_70165_t) + 0.5D;
-                double d6 = Math.floor(this.field_70161_v) + 0.5D;
-                double d7 = this.func_174813_aQ().field_72336_d - this.func_174813_aQ().field_72340_a;
-                double d8 = this.func_174813_aQ().field_72334_f - this.func_174813_aQ().field_72339_c;
-                AxisAlignedBB axisalignedbb = new AxisAlignedBB(d5 - d7 / 2.0D, this.func_174813_aQ().field_72338_b - (double)p_110145_1_.field_70131_O, d6 - d8 / 2.0D, d5 + d7 / 2.0D, this.func_174813_aQ().field_72337_e - (double)p_110145_1_.field_70131_O, d6 + d8 / 2.0D);
+                double d5 = Math.floor(this.posX) + 0.5D;
+                double d6 = Math.floor(this.posZ) + 0.5D;
+                double d7 = this.getEntityBoundingBox().maxX - this.getEntityBoundingBox().minX;
+                double d8 = this.getEntityBoundingBox().maxZ - this.getEntityBoundingBox().minZ;
+                AxisAlignedBB axisalignedbb = new AxisAlignedBB(d5 - d7 / 2.0D, this.getEntityBoundingBox().minY - (double)entityIn.height, d6 - d8 / 2.0D, d5 + d7 / 2.0D, this.getEntityBoundingBox().maxY - (double)entityIn.height, d6 + d8 / 2.0D);
 
                 for (int[] aint : aint1)
                 {
-                    double d9 = (double)(enumfacing1.func_82601_c() * aint[0] + enumfacing.func_82601_c() * aint[1]);
-                    double d10 = (double)(enumfacing1.func_82599_e() * aint[0] + enumfacing.func_82599_e() * aint[1]);
+                    double d9 = (double)(enumfacing1.getFrontOffsetX() * aint[0] + enumfacing.getFrontOffsetX() * aint[1]);
+                    double d10 = (double)(enumfacing1.getFrontOffsetZ() * aint[0] + enumfacing.getFrontOffsetZ() * aint[1]);
                     double d11 = d5 + d9;
                     double d12 = d6 + d10;
-                    AxisAlignedBB axisalignedbb1 = axisalignedbb.func_72317_d(d9, 1.0D, d10);
+                    AxisAlignedBB axisalignedbb1 = axisalignedbb.offset(d9, 1.0D, d10);
 
-                    if (!this.field_70170_p.func_184143_b(axisalignedbb1))
+                    if (!this.world.collidesWithAnyBlock(axisalignedbb1))
                     {
-                        if (this.field_70170_p.func_180495_p(new BlockPos(d11, this.field_70163_u, d12)).func_185896_q())
+                        if (this.world.getBlockState(new BlockPos(d11, this.posY, d12)).isSideSolid(world, new BlockPos(d11, this.posY, d12), EnumFacing.UP))
                         {
-                            this.func_70634_a(d11, this.field_70163_u + 1.0D, d12);
+                            this.setPositionAndUpdate(d11, this.posY + 1.0D, d12);
                             return;
                         }
 
-                        BlockPos blockpos = new BlockPos(d11, this.field_70163_u - 1.0D, d12);
+                        BlockPos blockpos = new BlockPos(d11, this.posY - 1.0D, d12);
 
-                        if (this.field_70170_p.func_180495_p(blockpos).func_185896_q() || this.field_70170_p.func_180495_p(blockpos).func_185904_a() == Material.field_151586_h)
+                        if (this.world.getBlockState(blockpos).isSideSolid(world, blockpos, EnumFacing.UP) || this.world.getBlockState(blockpos).getMaterial() == Material.WATER)
                         {
                             d1 = d11;
-                            d13 = this.field_70163_u + 1.0D;
+                            d13 = this.posY + 1.0D;
                             d14 = d12;
                         }
                     }
-                    else if (!this.field_70170_p.func_184143_b(axisalignedbb1.func_72317_d(0.0D, 1.0D, 0.0D)) && this.field_70170_p.func_180495_p(new BlockPos(d11, this.field_70163_u + 1.0D, d12)).func_185896_q())
+                    else if (!this.world.collidesWithAnyBlock(axisalignedbb1.offset(0.0D, 1.0D, 0.0D)) && this.world.getBlockState(new BlockPos(d11, this.posY + 1.0D, d12)).isSideSolid(world, new BlockPos(d11, this.posY + 1.0D, d12), EnumFacing.UP))
                     {
                         d1 = d11;
-                        d13 = this.field_70163_u + 2.0D;
+                        d13 = this.posY + 2.0D;
                         d14 = d12;
                     }
                 }
             }
 
-            this.func_70634_a(d1, d13, d14);
+            this.setPositionAndUpdate(d1, d13, d14);
         }
         else
         {
-            double d0 = (double)(this.field_70130_N / 2.0F + p_110145_1_.field_70130_N / 2.0F) + 0.4D;
+            double d0 = (double)(this.width / 2.0F + entityIn.width / 2.0F) + 0.4D;
             float f;
 
-            if (p_110145_1_ instanceof EntityBoat)
+            if (entityIn instanceof EntityBoat)
             {
                 f = 0.0F;
             }
             else
             {
-                f = ((float)Math.PI / 2F) * (float)(this.func_184591_cq() == EnumHandSide.RIGHT ? -1 : 1);
+                f = ((float)Math.PI / 2F) * (float)(this.getPrimaryHand() == EnumHandSide.RIGHT ? -1 : 1);
             }
 
-            float f1 = -MathHelper.func_76126_a(-this.field_70177_z * 0.017453292F - (float)Math.PI + f);
-            float f2 = -MathHelper.func_76134_b(-this.field_70177_z * 0.017453292F - (float)Math.PI + f);
+            float f1 = -MathHelper.sin(-this.rotationYaw * 0.017453292F - (float)Math.PI + f);
+            float f2 = -MathHelper.cos(-this.rotationYaw * 0.017453292F - (float)Math.PI + f);
             double d2 = Math.abs(f1) > Math.abs(f2) ? d0 / (double)Math.abs(f1) : d0 / (double)Math.abs(f2);
-            double d3 = this.field_70165_t + (double)f1 * d2;
-            double d4 = this.field_70161_v + (double)f2 * d2;
-            this.func_70107_b(d3, p_110145_1_.field_70163_u + (double)p_110145_1_.field_70131_O + 0.001D, d4);
+            double d3 = this.posX + (double)f1 * d2;
+            double d4 = this.posZ + (double)f2 * d2;
+            this.setPosition(d3, entityIn.posY + (double)entityIn.height + 0.001D, d4);
 
-            if (this.field_70170_p.func_184143_b(this.func_174813_aQ()))
+            if (this.world.collidesWithAnyBlock(this.getEntityBoundingBox()))
             {
-                this.func_70107_b(d3, p_110145_1_.field_70163_u + (double)p_110145_1_.field_70131_O + 1.001D, d4);
+                this.setPosition(d3, entityIn.posY + (double)entityIn.height + 1.001D, d4);
 
-                if (this.field_70170_p.func_184143_b(this.func_174813_aQ()))
+                if (this.world.collidesWithAnyBlock(this.getEntityBoundingBox()))
                 {
-                    this.func_70107_b(p_110145_1_.field_70165_t, p_110145_1_.field_70163_u + (double)this.field_70131_O + 0.001D, p_110145_1_.field_70161_v);
+                    this.setPosition(entityIn.posX, entityIn.posY + (double)this.height + 0.001D, entityIn.posZ);
                 }
             }
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean func_94059_bO()
+    public boolean getAlwaysRenderNameTagForRender()
     {
-        return this.func_174833_aM();
+        return this.getAlwaysRenderNameTag();
     }
 
-    protected float func_175134_bD()
+    protected float getJumpUpwardsMotion()
     {
         return 0.42F;
     }
 
-    protected void func_70664_aZ()
+    protected void jump()
     {
-        this.field_70181_x = (double)this.func_175134_bD();
+        this.motionY = (double)this.getJumpUpwardsMotion();
 
-        if (this.func_70644_a(MobEffects.field_76430_j))
+        if (this.isPotionActive(MobEffects.JUMP_BOOST))
         {
-            this.field_70181_x += (double)((float)(this.func_70660_b(MobEffects.field_76430_j).func_76458_c() + 1) * 0.1F);
+            this.motionY += (double)((float)(this.getActivePotionEffect(MobEffects.JUMP_BOOST).getAmplifier() + 1) * 0.1F);
         }
 
-        if (this.func_70051_ag())
+        if (this.isSprinting())
         {
-            float f = this.field_70177_z * 0.017453292F;
-            this.field_70159_w -= (double)(MathHelper.func_76126_a(f) * 0.2F);
-            this.field_70179_y += (double)(MathHelper.func_76134_b(f) * 0.2F);
+            float f = this.rotationYaw * 0.017453292F;
+            this.motionX -= (double)(MathHelper.sin(f) * 0.2F);
+            this.motionZ += (double)(MathHelper.cos(f) * 0.2F);
         }
 
-        this.field_70160_al = true;
+        this.isAirBorne = true;
+        net.minecraftforge.common.ForgeHooks.onLivingJump(this);
     }
 
-    protected void func_70629_bd()
+    protected void handleJumpWater()
     {
-        this.field_70181_x += 0.03999999910593033D;
+        this.motionY += 0.03999999910593033D;
     }
 
-    protected void func_180466_bG()
+    protected void handleJumpLava()
     {
-        this.field_70181_x += 0.03999999910593033D;
+        this.motionY += 0.03999999910593033D;
     }
 
-    protected float func_189749_co()
+    protected float getWaterSlowDown()
     {
         return 0.8F;
     }
 
-    public void func_70612_e(float p_70612_1_, float p_70612_2_)
+    public void moveEntityWithHeading(float strafe, float forward)
     {
-        if (this.func_70613_aW() || this.func_184186_bw())
+        if (this.isServerWorld() || this.canPassengerSteer())
         {
-            if (!this.func_70090_H() || this instanceof EntityPlayer && ((EntityPlayer)this).field_71075_bZ.field_75100_b)
+            if (!this.isInWater() || this instanceof EntityPlayer && ((EntityPlayer)this).capabilities.isFlying)
             {
-                if (!this.func_180799_ab() || this instanceof EntityPlayer && ((EntityPlayer)this).field_71075_bZ.field_75100_b)
+                if (!this.isInLava() || this instanceof EntityPlayer && ((EntityPlayer)this).capabilities.isFlying)
                 {
-                    if (this.func_184613_cA())
+                    if (this.isElytraFlying())
                     {
-                        if (this.field_70181_x > -0.5D)
+                        if (this.motionY > -0.5D)
                         {
-                            this.field_70143_R = 1.0F;
+                            this.fallDistance = 1.0F;
                         }
 
-                        Vec3d vec3d = this.func_70040_Z();
-                        float f = this.field_70125_A * 0.017453292F;
-                        double d6 = Math.sqrt(vec3d.field_72450_a * vec3d.field_72450_a + vec3d.field_72449_c * vec3d.field_72449_c);
-                        double d8 = Math.sqrt(this.field_70159_w * this.field_70159_w + this.field_70179_y * this.field_70179_y);
-                        double d1 = vec3d.func_72433_c();
-                        float f4 = MathHelper.func_76134_b(f);
+                        Vec3d vec3d = this.getLookVec();
+                        float f = this.rotationPitch * 0.017453292F;
+                        double d6 = Math.sqrt(vec3d.xCoord * vec3d.xCoord + vec3d.zCoord * vec3d.zCoord);
+                        double d8 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
+                        double d1 = vec3d.lengthVector();
+                        float f4 = MathHelper.cos(f);
                         f4 = (float)((double)f4 * (double)f4 * Math.min(1.0D, d1 / 0.4D));
-                        this.field_70181_x += -0.08D + (double)f4 * 0.06D;
+                        this.motionY += -0.08D + (double)f4 * 0.06D;
 
-                        if (this.field_70181_x < 0.0D && d6 > 0.0D)
+                        if (this.motionY < 0.0D && d6 > 0.0D)
                         {
-                            double d2 = this.field_70181_x * -0.1D * (double)f4;
-                            this.field_70181_x += d2;
-                            this.field_70159_w += vec3d.field_72450_a * d2 / d6;
-                            this.field_70179_y += vec3d.field_72449_c * d2 / d6;
+                            double d2 = this.motionY * -0.1D * (double)f4;
+                            this.motionY += d2;
+                            this.motionX += vec3d.xCoord * d2 / d6;
+                            this.motionZ += vec3d.zCoord * d2 / d6;
                         }
 
                         if (f < 0.0F)
                         {
-                            double d9 = d8 * (double)(-MathHelper.func_76126_a(f)) * 0.04D;
-                            this.field_70181_x += d9 * 3.2D;
-                            this.field_70159_w -= vec3d.field_72450_a * d9 / d6;
-                            this.field_70179_y -= vec3d.field_72449_c * d9 / d6;
+                            double d9 = d8 * (double)(-MathHelper.sin(f)) * 0.04D;
+                            this.motionY += d9 * 3.2D;
+                            this.motionX -= vec3d.xCoord * d9 / d6;
+                            this.motionZ -= vec3d.zCoord * d9 / d6;
                         }
 
                         if (d6 > 0.0D)
                         {
-                            this.field_70159_w += (vec3d.field_72450_a / d6 * d8 - this.field_70159_w) * 0.1D;
-                            this.field_70179_y += (vec3d.field_72449_c / d6 * d8 - this.field_70179_y) * 0.1D;
+                            this.motionX += (vec3d.xCoord / d6 * d8 - this.motionX) * 0.1D;
+                            this.motionZ += (vec3d.zCoord / d6 * d8 - this.motionZ) * 0.1D;
                         }
 
-                        this.field_70159_w *= 0.9900000095367432D;
-                        this.field_70181_x *= 0.9800000190734863D;
-                        this.field_70179_y *= 0.9900000095367432D;
-                        this.func_70091_d(MoverType.SELF, this.field_70159_w, this.field_70181_x, this.field_70179_y);
+                        this.motionX *= 0.9900000095367432D;
+                        this.motionY *= 0.9800000190734863D;
+                        this.motionZ *= 0.9900000095367432D;
+                        this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
 
-                        if (this.field_70123_F && !this.field_70170_p.field_72995_K)
+                        if (this.isCollidedHorizontally && !this.world.isRemote)
                         {
-                            double d10 = Math.sqrt(this.field_70159_w * this.field_70159_w + this.field_70179_y * this.field_70179_y);
+                            double d10 = Math.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
                             double d3 = d8 - d10;
                             float f5 = (float)(d3 * 10.0D - 3.0D);
 
                             if (f5 > 0.0F)
                             {
-                                this.func_184185_a(this.func_184588_d((int)f5), 1.0F, 1.0F);
-                                this.func_70097_a(DamageSource.field_188406_j, f5);
+                                this.playSound(this.getFallSound((int)f5), 1.0F, 1.0F);
+                                this.attackEntityFrom(DamageSource.FLY_INTO_WALL, f5);
                             }
                         }
 
-                        if (this.field_70122_E && !this.field_70170_p.field_72995_K)
+                        if (this.onGround && !this.world.isRemote)
                         {
-                            this.func_70052_a(7, false);
+                            this.setFlag(7, false);
                         }
                     }
                     else
                     {
                         float f6 = 0.91F;
-                        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185345_c(this.field_70165_t, this.func_174813_aQ().field_72338_b - 1.0D, this.field_70161_v);
+                        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain(this.posX, this.getEntityBoundingBox().minY - 1.0D, this.posZ);
 
-                        if (this.field_70122_E)
+                        if (this.onGround)
                         {
-                            f6 = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos).func_177230_c().field_149765_K * 0.91F;
+                            f6 = this.world.getBlockState(blockpos$pooledmutableblockpos).getBlock().slipperiness * 0.91F;
                         }
 
                         float f7 = 0.16277136F / (f6 * f6 * f6);
                         float f8;
 
-                        if (this.field_70122_E)
+                        if (this.onGround)
                         {
-                            f8 = this.func_70689_ay() * f7;
+                            f8 = this.getAIMoveSpeed() * f7;
                         }
                         else
                         {
-                            f8 = this.field_70747_aH;
+                            f8 = this.jumpMovementFactor;
                         }
 
-                        this.func_70060_a(p_70612_1_, p_70612_2_, f8);
+                        this.moveRelative(strafe, forward, f8);
                         f6 = 0.91F;
 
-                        if (this.field_70122_E)
+                        if (this.onGround)
                         {
-                            f6 = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos.func_189532_c(this.field_70165_t, this.func_174813_aQ().field_72338_b - 1.0D, this.field_70161_v)).func_177230_c().field_149765_K * 0.91F;
+                            f6 = this.world.getBlockState(blockpos$pooledmutableblockpos.setPos(this.posX, this.getEntityBoundingBox().minY - 1.0D, this.posZ)).getBlock().slipperiness * 0.91F;
                         }
 
-                        if (this.func_70617_f_())
+                        if (this.isOnLadder())
                         {
                             float f9 = 0.15F;
-                            this.field_70159_w = MathHelper.func_151237_a(this.field_70159_w, -0.15000000596046448D, 0.15000000596046448D);
-                            this.field_70179_y = MathHelper.func_151237_a(this.field_70179_y, -0.15000000596046448D, 0.15000000596046448D);
-                            this.field_70143_R = 0.0F;
+                            this.motionX = MathHelper.clamp(this.motionX, -0.15000000596046448D, 0.15000000596046448D);
+                            this.motionZ = MathHelper.clamp(this.motionZ, -0.15000000596046448D, 0.15000000596046448D);
+                            this.fallDistance = 0.0F;
 
-                            if (this.field_70181_x < -0.15D)
+                            if (this.motionY < -0.15D)
                             {
-                                this.field_70181_x = -0.15D;
+                                this.motionY = -0.15D;
                             }
 
-                            boolean flag = this.func_70093_af() && this instanceof EntityPlayer;
+                            boolean flag = this.isSneaking() && this instanceof EntityPlayer;
 
-                            if (flag && this.field_70181_x < 0.0D)
+                            if (flag && this.motionY < 0.0D)
                             {
-                                this.field_70181_x = 0.0D;
+                                this.motionY = 0.0D;
                             }
                         }
 
-                        this.func_70091_d(MoverType.SELF, this.field_70159_w, this.field_70181_x, this.field_70179_y);
+                        this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
 
-                        if (this.field_70123_F && this.func_70617_f_())
+                        if (this.isCollidedHorizontally && this.isOnLadder())
                         {
-                            this.field_70181_x = 0.2D;
+                            this.motionY = 0.2D;
                         }
 
-                        if (this.func_70644_a(MobEffects.field_188424_y))
+                        if (this.isPotionActive(MobEffects.LEVITATION))
                         {
-                            this.field_70181_x += (0.05D * (double)(this.func_70660_b(MobEffects.field_188424_y).func_76458_c() + 1) - this.field_70181_x) * 0.2D;
+                            this.motionY += (0.05D * (double)(this.getActivePotionEffect(MobEffects.LEVITATION).getAmplifier() + 1) - this.motionY) * 0.2D;
                         }
                         else
                         {
-                            blockpos$pooledmutableblockpos.func_189532_c(this.field_70165_t, 0.0D, this.field_70161_v);
+                            blockpos$pooledmutableblockpos.setPos(this.posX, 0.0D, this.posZ);
 
-                            if (!this.field_70170_p.field_72995_K || this.field_70170_p.func_175667_e(blockpos$pooledmutableblockpos) && this.field_70170_p.func_175726_f(blockpos$pooledmutableblockpos).func_177410_o())
+                            if (!this.world.isRemote || this.world.isBlockLoaded(blockpos$pooledmutableblockpos) && this.world.getChunkFromBlockCoords(blockpos$pooledmutableblockpos).isLoaded())
                             {
-                                if (!this.func_189652_ae())
+                                if (!this.hasNoGravity())
                                 {
-                                    this.field_70181_x -= 0.08D;
+                                    this.motionY -= 0.08D;
                                 }
                             }
-                            else if (this.field_70163_u > 0.0D)
+                            else if (this.posY > 0.0D)
                             {
-                                this.field_70181_x = -0.1D;
+                                this.motionY = -0.1D;
                             }
                             else
                             {
-                                this.field_70181_x = 0.0D;
+                                this.motionY = 0.0D;
                             }
                         }
 
-                        this.field_70181_x *= 0.9800000190734863D;
-                        this.field_70159_w *= (double)f6;
-                        this.field_70179_y *= (double)f6;
-                        blockpos$pooledmutableblockpos.func_185344_t();
+                        this.motionY *= 0.9800000190734863D;
+                        this.motionX *= (double)f6;
+                        this.motionZ *= (double)f6;
+                        blockpos$pooledmutableblockpos.release();
                     }
                 }
                 else
                 {
-                    double d4 = this.field_70163_u;
-                    this.func_70060_a(p_70612_1_, p_70612_2_, 0.02F);
-                    this.func_70091_d(MoverType.SELF, this.field_70159_w, this.field_70181_x, this.field_70179_y);
-                    this.field_70159_w *= 0.5D;
-                    this.field_70181_x *= 0.5D;
-                    this.field_70179_y *= 0.5D;
+                    double d4 = this.posY;
+                    this.moveRelative(strafe, forward, 0.02F);
+                    this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
+                    this.motionX *= 0.5D;
+                    this.motionY *= 0.5D;
+                    this.motionZ *= 0.5D;
 
-                    if (!this.func_189652_ae())
+                    if (!this.hasNoGravity())
                     {
-                        this.field_70181_x -= 0.02D;
+                        this.motionY -= 0.02D;
                     }
 
-                    if (this.field_70123_F && this.func_70038_c(this.field_70159_w, this.field_70181_x + 0.6000000238418579D - this.field_70163_u + d4, this.field_70179_y))
+                    if (this.isCollidedHorizontally && this.isOffsetPositionInLiquid(this.motionX, this.motionY + 0.6000000238418579D - this.posY + d4, this.motionZ))
                     {
-                        this.field_70181_x = 0.30000001192092896D;
+                        this.motionY = 0.30000001192092896D;
                     }
                 }
             }
             else
             {
-                double d0 = this.field_70163_u;
-                float f1 = this.func_189749_co();
+                double d0 = this.posY;
+                float f1 = this.getWaterSlowDown();
                 float f2 = 0.02F;
-                float f3 = (float)EnchantmentHelper.func_185294_d(this);
+                float f3 = (float)EnchantmentHelper.getDepthStriderModifier(this);
 
                 if (f3 > 3.0F)
                 {
                     f3 = 3.0F;
                 }
 
-                if (!this.field_70122_E)
+                if (!this.onGround)
                 {
                     f3 *= 0.5F;
                 }
@@ -1914,83 +2004,84 @@
                 if (f3 > 0.0F)
                 {
                     f1 += (0.54600006F - f1) * f3 / 3.0F;
-                    f2 += (this.func_70689_ay() - f2) * f3 / 3.0F;
+                    f2 += (this.getAIMoveSpeed() - f2) * f3 / 3.0F;
                 }
 
-                this.func_70060_a(p_70612_1_, p_70612_2_, f2);
-                this.func_70091_d(MoverType.SELF, this.field_70159_w, this.field_70181_x, this.field_70179_y);
-                this.field_70159_w *= (double)f1;
-                this.field_70181_x *= 0.800000011920929D;
-                this.field_70179_y *= (double)f1;
+                this.moveRelative(strafe, forward, f2);
+                this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
+                this.motionX *= (double)f1;
+                this.motionY *= 0.800000011920929D;
+                this.motionZ *= (double)f1;
 
-                if (!this.func_189652_ae())
+                if (!this.hasNoGravity())
                 {
-                    this.field_70181_x -= 0.02D;
+                    this.motionY -= 0.02D;
                 }
 
-                if (this.field_70123_F && this.func_70038_c(this.field_70159_w, this.field_70181_x + 0.6000000238418579D - this.field_70163_u + d0, this.field_70179_y))
+                if (this.isCollidedHorizontally && this.isOffsetPositionInLiquid(this.motionX, this.motionY + 0.6000000238418579D - this.posY + d0, this.motionZ))
                 {
-                    this.field_70181_x = 0.30000001192092896D;
+                    this.motionY = 0.30000001192092896D;
                 }
             }
         }
 
-        this.field_184618_aE = this.field_70721_aZ;
-        double d5 = this.field_70165_t - this.field_70169_q;
-        double d7 = this.field_70161_v - this.field_70166_s;
-        float f10 = MathHelper.func_76133_a(d5 * d5 + d7 * d7) * 4.0F;
+        this.prevLimbSwingAmount = this.limbSwingAmount;
+        double d5 = this.posX - this.prevPosX;
+        double d7 = this.posZ - this.prevPosZ;
+        float f10 = MathHelper.sqrt(d5 * d5 + d7 * d7) * 4.0F;
 
         if (f10 > 1.0F)
         {
             f10 = 1.0F;
         }
 
-        this.field_70721_aZ += (f10 - this.field_70721_aZ) * 0.4F;
-        this.field_184619_aG += this.field_70721_aZ;
+        this.limbSwingAmount += (f10 - this.limbSwingAmount) * 0.4F;
+        this.limbSwing += this.limbSwingAmount;
     }
 
-    public float func_70689_ay()
+    public float getAIMoveSpeed()
     {
-        return this.field_70746_aG;
+        return this.landMovementFactor;
     }
 
-    public void func_70659_e(float p_70659_1_)
+    public void setAIMoveSpeed(float speedIn)
     {
-        this.field_70746_aG = p_70659_1_;
+        this.landMovementFactor = speedIn;
     }
 
-    public boolean func_70652_k(Entity p_70652_1_)
+    public boolean attackEntityAsMob(Entity entityIn)
     {
-        this.func_130011_c(p_70652_1_);
+        this.setLastAttacker(entityIn);
         return false;
     }
 
-    public boolean func_70608_bn()
+    public boolean isPlayerSleeping()
     {
         return false;
     }
 
-    public void func_70071_h_()
+    public void onUpdate()
     {
-        super.func_70071_h_();
-        this.func_184608_ct();
+        if (net.minecraftforge.common.ForgeHooks.onLivingUpdate(this)) return;
+        super.onUpdate();
+        this.updateActiveHand();
 
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            int i = this.func_85035_bI();
+            int i = this.getArrowCountInEntity();
 
             if (i > 0)
             {
-                if (this.field_70720_be <= 0)
+                if (this.arrowHitTimer <= 0)
                 {
-                    this.field_70720_be = 20 * (30 - i);
+                    this.arrowHitTimer = 20 * (30 - i);
                 }
 
-                --this.field_70720_be;
+                --this.arrowHitTimer;
 
-                if (this.field_70720_be <= 0)
+                if (this.arrowHitTimer <= 0)
                 {
-                    this.func_85034_r(i - 1);
+                    this.setArrowCountInEntity(i - 1);
                 }
             }
 
@@ -1998,151 +2089,152 @@
             {
                 ItemStack itemstack;
 
-                switch (entityequipmentslot.func_188453_a())
+                switch (entityequipmentslot.getSlotType())
                 {
                     case HAND:
-                        itemstack = (ItemStack)this.field_184630_bs.get(entityequipmentslot.func_188454_b());
+                        itemstack = (ItemStack)this.handInventory.get(entityequipmentslot.getIndex());
                         break;
                     case ARMOR:
-                        itemstack = (ItemStack)this.field_184631_bt.get(entityequipmentslot.func_188454_b());
+                        itemstack = (ItemStack)this.armorArray.get(entityequipmentslot.getIndex());
                         break;
                     default:
                         continue;
                 }
 
-                ItemStack itemstack1 = this.func_184582_a(entityequipmentslot);
+                ItemStack itemstack1 = this.getItemStackFromSlot(entityequipmentslot);
 
-                if (!ItemStack.func_77989_b(itemstack1, itemstack))
+                if (!ItemStack.areItemStacksEqual(itemstack1, itemstack))
                 {
-                    ((WorldServer)this.field_70170_p).func_73039_n().func_151247_a(this, new SPacketEntityEquipment(this.func_145782_y(), entityequipmentslot, itemstack1));
+                    ((WorldServer)this.world).getEntityTracker().sendToTracking(this, new SPacketEntityEquipment(this.getEntityId(), entityequipmentslot, itemstack1));
+                    net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent(this, entityequipmentslot, itemstack, itemstack1));
 
-                    if (!itemstack.func_190926_b())
+                    if (!itemstack.isEmpty())
                     {
-                        this.func_110140_aT().func_111148_a(itemstack.func_111283_C(entityequipmentslot));
+                        this.getAttributeMap().removeAttributeModifiers(itemstack.getAttributeModifiers(entityequipmentslot));
                     }
 
-                    if (!itemstack1.func_190926_b())
+                    if (!itemstack1.isEmpty())
                     {
-                        this.func_110140_aT().func_111147_b(itemstack1.func_111283_C(entityequipmentslot));
+                        this.getAttributeMap().applyAttributeModifiers(itemstack1.getAttributeModifiers(entityequipmentslot));
                     }
 
-                    switch (entityequipmentslot.func_188453_a())
+                    switch (entityequipmentslot.getSlotType())
                     {
                         case HAND:
-                            this.field_184630_bs.set(entityequipmentslot.func_188454_b(), itemstack1.func_190926_b() ? ItemStack.field_190927_a : itemstack1.func_77946_l());
+                            this.handInventory.set(entityequipmentslot.getIndex(), itemstack1.isEmpty() ? ItemStack.EMPTY : itemstack1.copy());
                             break;
                         case ARMOR:
-                            this.field_184631_bt.set(entityequipmentslot.func_188454_b(), itemstack1.func_190926_b() ? ItemStack.field_190927_a : itemstack1.func_77946_l());
+                            this.armorArray.set(entityequipmentslot.getIndex(), itemstack1.isEmpty() ? ItemStack.EMPTY : itemstack1.copy());
                     }
                 }
             }
 
-            if (this.field_70173_aa % 20 == 0)
+            if (this.ticksExisted % 20 == 0)
             {
-                this.func_110142_aN().func_94549_h();
+                this.getCombatTracker().reset();
             }
 
-            if (!this.field_184238_ar)
+            if (!this.glowing)
             {
-                boolean flag = this.func_70644_a(MobEffects.field_188423_x);
+                boolean flag = this.isPotionActive(MobEffects.GLOWING);
 
-                if (this.func_70083_f(6) != flag)
+                if (this.getFlag(6) != flag)
                 {
-                    this.func_70052_a(6, flag);
+                    this.setFlag(6, flag);
                 }
             }
         }
 
-        this.func_70636_d();
-        double d0 = this.field_70165_t - this.field_70169_q;
-        double d1 = this.field_70161_v - this.field_70166_s;
+        this.onLivingUpdate();
+        double d0 = this.posX - this.prevPosX;
+        double d1 = this.posZ - this.prevPosZ;
         float f1 = (float)(d0 * d0 + d1 * d1);
-        float f2 = this.field_70761_aq;
+        float f2 = this.renderYawOffset;
         float f3 = 0.0F;
-        this.field_70768_au = this.field_110154_aX;
+        this.prevOnGroundSpeedFactor = this.onGroundSpeedFactor;
         float f = 0.0F;
 
         if (f1 > 0.0025000002F)
         {
             f = 1.0F;
             f3 = (float)Math.sqrt((double)f1) * 3.0F;
-            f2 = (float)MathHelper.func_181159_b(d1, d0) * (180F / (float)Math.PI) - 90.0F;
+            f2 = (float)MathHelper.atan2(d1, d0) * (180F / (float)Math.PI) - 90.0F;
         }
 
-        if (this.field_70733_aJ > 0.0F)
+        if (this.swingProgress > 0.0F)
         {
-            f2 = this.field_70177_z;
+            f2 = this.rotationYaw;
         }
 
-        if (!this.field_70122_E)
+        if (!this.onGround)
         {
             f = 0.0F;
         }
 
-        this.field_110154_aX += (f - this.field_110154_aX) * 0.3F;
-        this.field_70170_p.field_72984_F.func_76320_a("headTurn");
-        f3 = this.func_110146_f(f2, f3);
-        this.field_70170_p.field_72984_F.func_76319_b();
-        this.field_70170_p.field_72984_F.func_76320_a("rangeChecks");
+        this.onGroundSpeedFactor += (f - this.onGroundSpeedFactor) * 0.3F;
+        this.world.theProfiler.startSection("headTurn");
+        f3 = this.updateDistance(f2, f3);
+        this.world.theProfiler.endSection();
+        this.world.theProfiler.startSection("rangeChecks");
 
-        while (this.field_70177_z - this.field_70126_B < -180.0F)
+        while (this.rotationYaw - this.prevRotationYaw < -180.0F)
         {
-            this.field_70126_B -= 360.0F;
+            this.prevRotationYaw -= 360.0F;
         }
 
-        while (this.field_70177_z - this.field_70126_B >= 180.0F)
+        while (this.rotationYaw - this.prevRotationYaw >= 180.0F)
         {
-            this.field_70126_B += 360.0F;
+            this.prevRotationYaw += 360.0F;
         }
 
-        while (this.field_70761_aq - this.field_70760_ar < -180.0F)
+        while (this.renderYawOffset - this.prevRenderYawOffset < -180.0F)
         {
-            this.field_70760_ar -= 360.0F;
+            this.prevRenderYawOffset -= 360.0F;
         }
 
-        while (this.field_70761_aq - this.field_70760_ar >= 180.0F)
+        while (this.renderYawOffset - this.prevRenderYawOffset >= 180.0F)
         {
-            this.field_70760_ar += 360.0F;
+            this.prevRenderYawOffset += 360.0F;
         }
 
-        while (this.field_70125_A - this.field_70127_C < -180.0F)
+        while (this.rotationPitch - this.prevRotationPitch < -180.0F)
         {
-            this.field_70127_C -= 360.0F;
+            this.prevRotationPitch -= 360.0F;
         }
 
-        while (this.field_70125_A - this.field_70127_C >= 180.0F)
+        while (this.rotationPitch - this.prevRotationPitch >= 180.0F)
         {
-            this.field_70127_C += 360.0F;
+            this.prevRotationPitch += 360.0F;
         }
 
-        while (this.field_70759_as - this.field_70758_at < -180.0F)
+        while (this.rotationYawHead - this.prevRotationYawHead < -180.0F)
         {
-            this.field_70758_at -= 360.0F;
+            this.prevRotationYawHead -= 360.0F;
         }
 
-        while (this.field_70759_as - this.field_70758_at >= 180.0F)
+        while (this.rotationYawHead - this.prevRotationYawHead >= 180.0F)
         {
-            this.field_70758_at += 360.0F;
+            this.prevRotationYawHead += 360.0F;
         }
 
-        this.field_70170_p.field_72984_F.func_76319_b();
-        this.field_70764_aw += f3;
+        this.world.theProfiler.endSection();
+        this.movedDistance += f3;
 
-        if (this.func_184613_cA())
+        if (this.isElytraFlying())
         {
-            ++this.field_184629_bo;
+            ++this.ticksElytraFlying;
         }
         else
         {
-            this.field_184629_bo = 0;
+            this.ticksElytraFlying = 0;
         }
     }
 
-    protected float func_110146_f(float p_110146_1_, float p_110146_2_)
+    protected float updateDistance(float p_110146_1_, float p_110146_2_)
     {
-        float f = MathHelper.func_76142_g(p_110146_1_ - this.field_70761_aq);
-        this.field_70761_aq += f * 0.3F;
-        float f1 = MathHelper.func_76142_g(this.field_70177_z - this.field_70761_aq);
+        float f = MathHelper.wrapDegrees(p_110146_1_ - this.renderYawOffset);
+        this.renderYawOffset += f * 0.3F;
+        float f1 = MathHelper.wrapDegrees(this.rotationYaw - this.renderYawOffset);
         boolean flag = f1 < -90.0F || f1 >= 90.0F;
 
         if (f1 < -75.0F)
@@ -2155,11 +2247,11 @@
             f1 = 75.0F;
         }
 
-        this.field_70761_aq = this.field_70177_z - f1;
+        this.renderYawOffset = this.rotationYaw - f1;
 
         if (f1 * f1 > 2500.0F)
         {
-            this.field_70761_aq += f1 * 0.2F;
+            this.renderYawOffset += f1 * 0.2F;
         }
 
         if (flag)
@@ -2170,115 +2262,115 @@
         return p_110146_2_;
     }
 
-    public void func_70636_d()
+    public void onLivingUpdate()
     {
-        if (this.field_70773_bE > 0)
+        if (this.jumpTicks > 0)
         {
-            --this.field_70773_bE;
+            --this.jumpTicks;
         }
 
-        if (this.field_70716_bi > 0 && !this.func_184186_bw())
+        if (this.newPosRotationIncrements > 0 && !this.canPassengerSteer())
         {
-            double d0 = this.field_70165_t + (this.field_184623_bh - this.field_70165_t) / (double)this.field_70716_bi;
-            double d1 = this.field_70163_u + (this.field_184624_bi - this.field_70163_u) / (double)this.field_70716_bi;
-            double d2 = this.field_70161_v + (this.field_184625_bj - this.field_70161_v) / (double)this.field_70716_bi;
-            double d3 = MathHelper.func_76138_g(this.field_184626_bk - (double)this.field_70177_z);
-            this.field_70177_z = (float)((double)this.field_70177_z + d3 / (double)this.field_70716_bi);
-            this.field_70125_A = (float)((double)this.field_70125_A + (this.field_70709_bj - (double)this.field_70125_A) / (double)this.field_70716_bi);
-            --this.field_70716_bi;
-            this.func_70107_b(d0, d1, d2);
-            this.func_70101_b(this.field_70177_z, this.field_70125_A);
+            double d0 = this.posX + (this.interpTargetX - this.posX) / (double)this.newPosRotationIncrements;
+            double d1 = this.posY + (this.interpTargetY - this.posY) / (double)this.newPosRotationIncrements;
+            double d2 = this.posZ + (this.interpTargetZ - this.posZ) / (double)this.newPosRotationIncrements;
+            double d3 = MathHelper.wrapDegrees(this.interpTargetYaw - (double)this.rotationYaw);
+            this.rotationYaw = (float)((double)this.rotationYaw + d3 / (double)this.newPosRotationIncrements);
+            this.rotationPitch = (float)((double)this.rotationPitch + (this.interpTargetPitch - (double)this.rotationPitch) / (double)this.newPosRotationIncrements);
+            --this.newPosRotationIncrements;
+            this.setPosition(d0, d1, d2);
+            this.setRotation(this.rotationYaw, this.rotationPitch);
         }
-        else if (!this.func_70613_aW())
+        else if (!this.isServerWorld())
         {
-            this.field_70159_w *= 0.98D;
-            this.field_70181_x *= 0.98D;
-            this.field_70179_y *= 0.98D;
+            this.motionX *= 0.98D;
+            this.motionY *= 0.98D;
+            this.motionZ *= 0.98D;
         }
 
-        if (Math.abs(this.field_70159_w) < 0.003D)
+        if (Math.abs(this.motionX) < 0.003D)
         {
-            this.field_70159_w = 0.0D;
+            this.motionX = 0.0D;
         }
 
-        if (Math.abs(this.field_70181_x) < 0.003D)
+        if (Math.abs(this.motionY) < 0.003D)
         {
-            this.field_70181_x = 0.0D;
+            this.motionY = 0.0D;
         }
 
-        if (Math.abs(this.field_70179_y) < 0.003D)
+        if (Math.abs(this.motionZ) < 0.003D)
         {
-            this.field_70179_y = 0.0D;
+            this.motionZ = 0.0D;
         }
 
-        this.field_70170_p.field_72984_F.func_76320_a("ai");
+        this.world.theProfiler.startSection("ai");
 
-        if (this.func_70610_aX())
+        if (this.isMovementBlocked())
         {
-            this.field_70703_bu = false;
-            this.field_70702_br = 0.0F;
-            this.field_70701_bs = 0.0F;
-            this.field_70704_bt = 0.0F;
+            this.isJumping = false;
+            this.moveStrafing = 0.0F;
+            this.moveForward = 0.0F;
+            this.randomYawVelocity = 0.0F;
         }
-        else if (this.func_70613_aW())
+        else if (this.isServerWorld())
         {
-            this.field_70170_p.field_72984_F.func_76320_a("newAi");
-            this.func_70626_be();
-            this.field_70170_p.field_72984_F.func_76319_b();
+            this.world.theProfiler.startSection("newAi");
+            this.updateEntityActionState();
+            this.world.theProfiler.endSection();
         }
 
-        this.field_70170_p.field_72984_F.func_76319_b();
-        this.field_70170_p.field_72984_F.func_76320_a("jump");
+        this.world.theProfiler.endSection();
+        this.world.theProfiler.startSection("jump");
 
-        if (this.field_70703_bu)
+        if (this.isJumping)
         {
-            if (this.func_70090_H())
+            if (this.isInWater())
             {
-                this.func_70629_bd();
+                this.handleJumpWater();
             }
-            else if (this.func_180799_ab())
+            else if (this.isInLava())
             {
-                this.func_180466_bG();
+                this.handleJumpLava();
             }
-            else if (this.field_70122_E && this.field_70773_bE == 0)
+            else if (this.onGround && this.jumpTicks == 0)
             {
-                this.func_70664_aZ();
-                this.field_70773_bE = 10;
+                this.jump();
+                this.jumpTicks = 10;
             }
         }
         else
         {
-            this.field_70773_bE = 0;
+            this.jumpTicks = 0;
         }
 
-        this.field_70170_p.field_72984_F.func_76319_b();
-        this.field_70170_p.field_72984_F.func_76320_a("travel");
-        this.field_70702_br *= 0.98F;
-        this.field_70701_bs *= 0.98F;
-        this.field_70704_bt *= 0.9F;
-        this.func_184616_r();
-        this.func_70612_e(this.field_70702_br, this.field_70701_bs);
-        this.field_70170_p.field_72984_F.func_76319_b();
-        this.field_70170_p.field_72984_F.func_76320_a("push");
-        this.func_85033_bc();
-        this.field_70170_p.field_72984_F.func_76319_b();
+        this.world.theProfiler.endSection();
+        this.world.theProfiler.startSection("travel");
+        this.moveStrafing *= 0.98F;
+        this.moveForward *= 0.98F;
+        this.randomYawVelocity *= 0.9F;
+        this.updateElytra();
+        this.moveEntityWithHeading(this.moveStrafing, this.moveForward);
+        this.world.theProfiler.endSection();
+        this.world.theProfiler.startSection("push");
+        this.collideWithNearbyEntities();
+        this.world.theProfiler.endSection();
     }
 
-    private void func_184616_r()
+    private void updateElytra()
     {
-        boolean flag = this.func_70083_f(7);
+        boolean flag = this.getFlag(7);
 
-        if (flag && !this.field_70122_E && !this.func_184218_aH())
+        if (flag && !this.onGround && !this.isRiding())
         {
-            ItemStack itemstack = this.func_184582_a(EntityEquipmentSlot.CHEST);
+            ItemStack itemstack = this.getItemStackFromSlot(EntityEquipmentSlot.CHEST);
 
-            if (itemstack.func_77973_b() == Items.field_185160_cR && ItemElytra.func_185069_d(itemstack))
+            if (itemstack.getItem() == Items.ELYTRA && ItemElytra.isBroken(itemstack))
             {
                 flag = true;
 
-                if (!this.field_70170_p.field_72995_K && (this.field_184629_bo + 1) % 20 == 0)
+                if (!this.world.isRemote && (this.ticksElytraFlying + 1) % 20 == 0)
                 {
-                    itemstack.func_77972_a(1, this);
+                    itemstack.damageItem(1, this);
                 }
             }
             else
@@ -2291,31 +2383,31 @@
             flag = false;
         }
 
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            this.func_70052_a(7, flag);
+            this.setFlag(7, flag);
         }
     }
 
-    protected void func_70626_be()
+    protected void updateEntityActionState()
     {
     }
 
-    protected void func_85033_bc()
+    protected void collideWithNearbyEntities()
     {
-        List<Entity> list = this.field_70170_p.func_175674_a(this, this.func_174813_aQ(), EntitySelectors.<Entity>func_188442_a(this));
+        List<Entity> list = this.world.getEntitiesInAABBexcluding(this, this.getEntityBoundingBox(), EntitySelectors.<Entity>getTeamCollisionPredicate(this));
 
         if (!list.isEmpty())
         {
-            int i = this.field_70170_p.func_82736_K().func_180263_c("maxEntityCramming");
+            int i = this.world.getGameRules().getInt("maxEntityCramming");
 
-            if (i > 0 && list.size() > i - 1 && this.field_70146_Z.nextInt(4) == 0)
+            if (i > 0 && list.size() > i - 1 && this.rand.nextInt(4) == 0)
             {
                 int j = 0;
 
                 for (int k = 0; k < list.size(); ++k)
                 {
-                    if (!((Entity)list.get(k)).func_184218_aH())
+                    if (!((Entity)list.get(k)).isRiding())
                     {
                         ++j;
                     }
@@ -2323,343 +2415,389 @@
 
                 if (j > i - 1)
                 {
-                    this.func_70097_a(DamageSource.field_191291_g, 6.0F);
+                    this.attackEntityFrom(DamageSource.CRAMMING, 6.0F);
                 }
             }
 
             for (int l = 0; l < list.size(); ++l)
             {
                 Entity entity = (Entity)list.get(l);
-                this.func_82167_n(entity);
+                this.collideWithEntity(entity);
             }
         }
     }
 
-    protected void func_82167_n(Entity p_82167_1_)
+    protected void collideWithEntity(Entity entityIn)
     {
-        p_82167_1_.func_70108_f(this);
+        entityIn.applyEntityCollision(this);
     }
 
-    public void func_184210_p()
+    public void dismountRidingEntity()
     {
-        Entity entity = this.func_184187_bx();
-        super.func_184210_p();
+        Entity entity = this.getRidingEntity();
+        super.dismountRidingEntity();
 
-        if (entity != null && entity != this.func_184187_bx() && !this.field_70170_p.field_72995_K)
+        if (entity != null && entity != this.getRidingEntity() && !this.world.isRemote)
         {
-            this.func_110145_l(entity);
+            this.dismountEntity(entity);
         }
     }
 
-    public void func_70098_U()
+    public void updateRidden()
     {
-        super.func_70098_U();
-        this.field_70768_au = this.field_110154_aX;
-        this.field_110154_aX = 0.0F;
-        this.field_70143_R = 0.0F;
+        super.updateRidden();
+        this.prevOnGroundSpeedFactor = this.onGroundSpeedFactor;
+        this.onGroundSpeedFactor = 0.0F;
+        this.fallDistance = 0.0F;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_180426_a(double p_180426_1_, double p_180426_3_, double p_180426_5_, float p_180426_7_, float p_180426_8_, int p_180426_9_, boolean p_180426_10_)
+    public void setPositionAndRotationDirect(double x, double y, double z, float yaw, float pitch, int posRotationIncrements, boolean teleport)
     {
-        this.field_184623_bh = p_180426_1_;
-        this.field_184624_bi = p_180426_3_;
-        this.field_184625_bj = p_180426_5_;
-        this.field_184626_bk = (double)p_180426_7_;
-        this.field_70709_bj = (double)p_180426_8_;
-        this.field_70716_bi = p_180426_9_;
+        this.interpTargetX = x;
+        this.interpTargetY = y;
+        this.interpTargetZ = z;
+        this.interpTargetYaw = (double)yaw;
+        this.interpTargetPitch = (double)pitch;
+        this.newPosRotationIncrements = posRotationIncrements;
     }
 
-    public void func_70637_d(boolean p_70637_1_)
+    public void setJumping(boolean jumping)
     {
-        this.field_70703_bu = p_70637_1_;
+        this.isJumping = jumping;
     }
 
-    public void func_71001_a(Entity p_71001_1_, int p_71001_2_)
+    public void onItemPickup(Entity entityIn, int quantity)
     {
-        if (!p_71001_1_.field_70128_L && !this.field_70170_p.field_72995_K)
+        if (!entityIn.isDead && !this.world.isRemote)
         {
-            EntityTracker entitytracker = ((WorldServer)this.field_70170_p).func_73039_n();
+            EntityTracker entitytracker = ((WorldServer)this.world).getEntityTracker();
 
-            if (p_71001_1_ instanceof EntityItem || p_71001_1_ instanceof EntityArrow || p_71001_1_ instanceof EntityXPOrb)
+            if (entityIn instanceof EntityItem || entityIn instanceof EntityArrow || entityIn instanceof EntityXPOrb)
             {
-                entitytracker.func_151247_a(p_71001_1_, new SPacketCollectItem(p_71001_1_.func_145782_y(), this.func_145782_y(), p_71001_2_));
+                entitytracker.sendToTracking(entityIn, new SPacketCollectItem(entityIn.getEntityId(), this.getEntityId(), quantity));
             }
         }
     }
 
-    public boolean func_70685_l(Entity p_70685_1_)
+    public boolean canEntityBeSeen(Entity entityIn)
     {
-        return this.field_70170_p.func_147447_a(new Vec3d(this.field_70165_t, this.field_70163_u + (double)this.func_70047_e(), this.field_70161_v), new Vec3d(p_70685_1_.field_70165_t, p_70685_1_.field_70163_u + (double)p_70685_1_.func_70047_e(), p_70685_1_.field_70161_v), false, true, false) == null;
+        return this.world.rayTraceBlocks(new Vec3d(this.posX, this.posY + (double)this.getEyeHeight(), this.posZ), new Vec3d(entityIn.posX, entityIn.posY + (double)entityIn.getEyeHeight(), entityIn.posZ), false, true, false) == null;
     }
 
-    public Vec3d func_70040_Z()
+    public Vec3d getLookVec()
     {
-        return this.func_70676_i(1.0F);
+        return this.getLook(1.0F);
     }
 
-    public Vec3d func_70676_i(float p_70676_1_)
+    public Vec3d getLook(float partialTicks)
     {
-        if (p_70676_1_ == 1.0F)
+        if (partialTicks == 1.0F)
         {
-            return this.func_174806_f(this.field_70125_A, this.field_70759_as);
+            return this.getVectorForRotation(this.rotationPitch, this.rotationYawHead);
         }
         else
         {
-            float f = this.field_70127_C + (this.field_70125_A - this.field_70127_C) * p_70676_1_;
-            float f1 = this.field_70758_at + (this.field_70759_as - this.field_70758_at) * p_70676_1_;
-            return this.func_174806_f(f, f1);
+            float f = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * partialTicks;
+            float f1 = this.prevRotationYawHead + (this.rotationYawHead - this.prevRotationYawHead) * partialTicks;
+            return this.getVectorForRotation(f, f1);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public float func_70678_g(float p_70678_1_)
+    public float getSwingProgress(float partialTickTime)
     {
-        float f = this.field_70733_aJ - this.field_70732_aI;
+        float f = this.swingProgress - this.prevSwingProgress;
 
         if (f < 0.0F)
         {
             ++f;
         }
 
-        return this.field_70732_aI + f * p_70678_1_;
+        return this.prevSwingProgress + f * partialTickTime;
     }
 
-    public boolean func_70613_aW()
+    public boolean isServerWorld()
     {
-        return !this.field_70170_p.field_72995_K;
+        return !this.world.isRemote;
     }
 
-    public boolean func_70067_L()
+    public boolean canBeCollidedWith()
     {
-        return !this.field_70128_L;
+        return !this.isDead;
     }
 
-    public boolean func_70104_M()
+    public boolean canBePushed()
     {
-        return this.func_70089_S() && !this.func_70617_f_();
+        return this.isEntityAlive() && !this.isOnLadder();
     }
 
-    protected void func_70018_K()
+    protected void setBeenAttacked()
     {
-        this.field_70133_I = this.field_70146_Z.nextDouble() >= this.func_110148_a(SharedMonsterAttributes.field_111266_c).func_111126_e();
+        this.velocityChanged = this.rand.nextDouble() >= this.getEntityAttribute(SharedMonsterAttributes.KNOCKBACK_RESISTANCE).getAttributeValue();
     }
 
-    public float func_70079_am()
+    public float getRotationYawHead()
     {
-        return this.field_70759_as;
+        return this.rotationYawHead;
     }
 
-    public void func_70034_d(float p_70034_1_)
+    public void setRotationYawHead(float rotation)
     {
-        this.field_70759_as = p_70034_1_;
+        this.rotationYawHead = rotation;
     }
 
-    public void func_181013_g(float p_181013_1_)
+    public void setRenderYawOffset(float offset)
     {
-        this.field_70761_aq = p_181013_1_;
+        this.renderYawOffset = offset;
     }
 
-    public float func_110139_bj()
+    public float getAbsorptionAmount()
     {
-        return this.field_110151_bq;
+        return this.absorptionAmount;
     }
 
-    public void func_110149_m(float p_110149_1_)
+    public void setAbsorptionAmount(float amount)
     {
-        if (p_110149_1_ < 0.0F)
+        if (amount < 0.0F)
         {
-            p_110149_1_ = 0.0F;
+            amount = 0.0F;
         }
 
-        this.field_110151_bq = p_110149_1_;
+        this.absorptionAmount = amount;
     }
 
-    public void func_152111_bt()
+    public void sendEnterCombat()
     {
     }
 
-    public void func_152112_bu()
+    public void sendEndCombat()
     {
     }
 
-    protected void func_175136_bO()
+    protected void markPotionsDirty()
     {
-        this.field_70752_e = true;
+        this.potionsNeedUpdate = true;
     }
 
-    public abstract EnumHandSide func_184591_cq();
+    /***
+     * Removes all potion effects that have curativeItem as a curative item for its effect
+     * @param curativeItem The itemstack we are using to cure potion effects
+     */
+    public void curePotionEffects(ItemStack curativeItem)
+    {
+        if (world.isRemote) return;
+        Iterator<PotionEffect> iterator = this.activePotionsMap.values().iterator();
 
-    public boolean func_184587_cr()
+        while (iterator.hasNext())
+        {
+            PotionEffect effect = iterator.next();
+
+            if (effect.isCurativeItem(curativeItem))
+            {
+                onFinishedPotionEffect(effect);
+                iterator.remove();
+                this.potionsNeedUpdate = true;
+            }
+        }
+    }
+
+    /**
+     * Returns true if the entity's rider (EntityPlayer) should face forward when mounted.
+     * currently only used in vanilla code by pigs.
+     *
+     * @param player The player who is riding the entity.
+     * @return If the player should orient the same direction as this entity.
+     */
+    public boolean shouldRiderFaceForward(EntityPlayer player)
     {
-        return (((Byte)this.field_70180_af.func_187225_a(field_184621_as)).byteValue() & 1) > 0;
+        return this instanceof net.minecraft.entity.passive.EntityPig;
     }
 
-    public EnumHand func_184600_cs()
+    public abstract EnumHandSide getPrimaryHand();
+
+    public boolean isHandActive()
     {
-        return (((Byte)this.field_70180_af.func_187225_a(field_184621_as)).byteValue() & 2) > 0 ? EnumHand.OFF_HAND : EnumHand.MAIN_HAND;
+        return (((Byte)this.dataManager.get(HAND_STATES)).byteValue() & 1) > 0;
     }
 
-    protected void func_184608_ct()
+    public EnumHand getActiveHand()
     {
-        if (this.func_184587_cr())
+        return (((Byte)this.dataManager.get(HAND_STATES)).byteValue() & 2) > 0 ? EnumHand.OFF_HAND : EnumHand.MAIN_HAND;
+    }
+
+    protected void updateActiveHand()
+    {
+        if (this.isHandActive())
         {
-            ItemStack itemstack = this.func_184586_b(this.func_184600_cs());
+            ItemStack itemstack = this.getHeldItem(this.getActiveHand());
 
-            if (itemstack == this.field_184627_bm)
+            if (itemstack == this.activeItemStack)
             {
-                if (this.func_184605_cv() <= 25 && this.func_184605_cv() % 4 == 0)
+                if (this.activeItemStack != null)
                 {
-                    this.func_184584_a(this.field_184627_bm, 5);
+                    activeItemStackUseCount = net.minecraftforge.event.ForgeEventFactory.onItemUseTick(this, activeItemStack, activeItemStackUseCount);
+                    if (activeItemStackUseCount > 0)
+                        activeItemStack.getItem().onUsingTick(activeItemStack, this, activeItemStackUseCount);
                 }
 
-                if (--this.field_184628_bn == 0 && !this.field_70170_p.field_72995_K)
+                if (this.getItemInUseCount() <= 25 && this.getItemInUseCount() % 4 == 0)
                 {
-                    this.func_71036_o();
+                    this.updateItemUse(this.activeItemStack, 5);
                 }
+
+                if (--this.activeItemStackUseCount <= 0 && !this.world.isRemote)
+                {
+                    this.onItemUseFinish();
+                }
             }
             else
             {
-                this.func_184602_cy();
+                this.resetActiveHand();
             }
         }
     }
 
-    public void func_184598_c(EnumHand p_184598_1_)
+    public void setActiveHand(EnumHand hand)
     {
-        ItemStack itemstack = this.func_184586_b(p_184598_1_);
+        ItemStack itemstack = this.getHeldItem(hand);
 
-        if (!itemstack.func_190926_b() && !this.func_184587_cr())
+        if (!itemstack.isEmpty() && !this.isHandActive())
         {
-            this.field_184627_bm = itemstack;
-            this.field_184628_bn = itemstack.func_77988_m();
+            int duration = net.minecraftforge.event.ForgeEventFactory.onItemUseStart(this, itemstack, itemstack.getMaxItemUseDuration());
+            if (duration <= 0) return;
+            this.activeItemStack = itemstack;
+            this.activeItemStackUseCount = duration;
 
-            if (!this.field_70170_p.field_72995_K)
+            if (!this.world.isRemote)
             {
                 int i = 1;
 
-                if (p_184598_1_ == EnumHand.OFF_HAND)
+                if (hand == EnumHand.OFF_HAND)
                 {
                     i |= 2;
                 }
 
-                this.field_70180_af.func_187227_b(field_184621_as, Byte.valueOf((byte)i));
+                this.dataManager.set(HAND_STATES, Byte.valueOf((byte)i));
             }
         }
     }
 
-    public void func_184206_a(DataParameter<?> p_184206_1_)
+    public void notifyDataManagerChange(DataParameter<?> key)
     {
-        super.func_184206_a(p_184206_1_);
+        super.notifyDataManagerChange(key);
 
-        if (field_184621_as.equals(p_184206_1_) && this.field_70170_p.field_72995_K)
+        if (HAND_STATES.equals(key) && this.world.isRemote)
         {
-            if (this.func_184587_cr() && this.field_184627_bm.func_190926_b())
+            if (this.isHandActive() && this.activeItemStack.isEmpty())
             {
-                this.field_184627_bm = this.func_184586_b(this.func_184600_cs());
+                this.activeItemStack = this.getHeldItem(this.getActiveHand());
 
-                if (!this.field_184627_bm.func_190926_b())
+                if (!this.activeItemStack.isEmpty())
                 {
-                    this.field_184628_bn = this.field_184627_bm.func_77988_m();
+                    this.activeItemStackUseCount = this.activeItemStack.getMaxItemUseDuration();
                 }
             }
-            else if (!this.func_184587_cr() && !this.field_184627_bm.func_190926_b())
+            else if (!this.isHandActive() && !this.activeItemStack.isEmpty())
             {
-                this.field_184627_bm = ItemStack.field_190927_a;
-                this.field_184628_bn = 0;
+                this.activeItemStack = ItemStack.EMPTY;
+                this.activeItemStackUseCount = 0;
             }
         }
     }
 
-    protected void func_184584_a(ItemStack p_184584_1_, int p_184584_2_)
+    protected void updateItemUse(ItemStack stack, int eatingParticleCount)
     {
-        if (!p_184584_1_.func_190926_b() && this.func_184587_cr())
+        if (!stack.isEmpty() && this.isHandActive())
         {
-            if (p_184584_1_.func_77975_n() == EnumAction.DRINK)
+            if (stack.getItemUseAction() == EnumAction.DRINK)
             {
-                this.func_184185_a(SoundEvents.field_187664_bz, 0.5F, this.field_70170_p.field_73012_v.nextFloat() * 0.1F + 0.9F);
+                this.playSound(SoundEvents.ENTITY_GENERIC_DRINK, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
             }
 
-            if (p_184584_1_.func_77975_n() == EnumAction.EAT)
+            if (stack.getItemUseAction() == EnumAction.EAT)
             {
-                for (int i = 0; i < p_184584_2_; ++i)
+                for (int i = 0; i < eatingParticleCount; ++i)
                 {
-                    Vec3d vec3d = new Vec3d(((double)this.field_70146_Z.nextFloat() - 0.5D) * 0.1D, Math.random() * 0.1D + 0.1D, 0.0D);
-                    vec3d = vec3d.func_178789_a(-this.field_70125_A * 0.017453292F);
-                    vec3d = vec3d.func_178785_b(-this.field_70177_z * 0.017453292F);
-                    double d0 = (double)(-this.field_70146_Z.nextFloat()) * 0.6D - 0.3D;
-                    Vec3d vec3d1 = new Vec3d(((double)this.field_70146_Z.nextFloat() - 0.5D) * 0.3D, d0, 0.6D);
-                    vec3d1 = vec3d1.func_178789_a(-this.field_70125_A * 0.017453292F);
-                    vec3d1 = vec3d1.func_178785_b(-this.field_70177_z * 0.017453292F);
-                    vec3d1 = vec3d1.func_72441_c(this.field_70165_t, this.field_70163_u + (double)this.func_70047_e(), this.field_70161_v);
+                    Vec3d vec3d = new Vec3d(((double)this.rand.nextFloat() - 0.5D) * 0.1D, Math.random() * 0.1D + 0.1D, 0.0D);
+                    vec3d = vec3d.rotatePitch(-this.rotationPitch * 0.017453292F);
+                    vec3d = vec3d.rotateYaw(-this.rotationYaw * 0.017453292F);
+                    double d0 = (double)(-this.rand.nextFloat()) * 0.6D - 0.3D;
+                    Vec3d vec3d1 = new Vec3d(((double)this.rand.nextFloat() - 0.5D) * 0.3D, d0, 0.6D);
+                    vec3d1 = vec3d1.rotatePitch(-this.rotationPitch * 0.017453292F);
+                    vec3d1 = vec3d1.rotateYaw(-this.rotationYaw * 0.017453292F);
+                    vec3d1 = vec3d1.addVector(this.posX, this.posY + (double)this.getEyeHeight(), this.posZ);
 
-                    if (p_184584_1_.func_77981_g())
+                    if (stack.getHasSubtypes())
                     {
-                        this.field_70170_p.func_175688_a(EnumParticleTypes.ITEM_CRACK, vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, new int[] {Item.func_150891_b(p_184584_1_.func_77973_b()), p_184584_1_.func_77960_j()});
+                        this.world.spawnParticle(EnumParticleTypes.ITEM_CRACK, vec3d1.xCoord, vec3d1.yCoord, vec3d1.zCoord, vec3d.xCoord, vec3d.yCoord + 0.05D, vec3d.zCoord, new int[] {Item.getIdFromItem(stack.getItem()), stack.getMetadata()});
                     }
                     else
                     {
-                        this.field_70170_p.func_175688_a(EnumParticleTypes.ITEM_CRACK, vec3d1.field_72450_a, vec3d1.field_72448_b, vec3d1.field_72449_c, vec3d.field_72450_a, vec3d.field_72448_b + 0.05D, vec3d.field_72449_c, new int[] {Item.func_150891_b(p_184584_1_.func_77973_b())});
+                        this.world.spawnParticle(EnumParticleTypes.ITEM_CRACK, vec3d1.xCoord, vec3d1.yCoord, vec3d1.zCoord, vec3d.xCoord, vec3d.yCoord + 0.05D, vec3d.zCoord, new int[] {Item.getIdFromItem(stack.getItem())});
                     }
                 }
 
-                this.func_184185_a(SoundEvents.field_187537_bA, 0.5F + 0.5F * (float)this.field_70146_Z.nextInt(2), (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.2F + 1.0F);
+                this.playSound(SoundEvents.ENTITY_GENERIC_EAT, 0.5F + 0.5F * (float)this.rand.nextInt(2), (this.rand.nextFloat() - this.rand.nextFloat()) * 0.2F + 1.0F);
             }
         }
     }
 
-    protected void func_71036_o()
+    protected void onItemUseFinish()
     {
-        if (!this.field_184627_bm.func_190926_b() && this.func_184587_cr())
+        if (!this.activeItemStack.isEmpty() && this.isHandActive())
         {
-            this.func_184584_a(this.field_184627_bm, 16);
-            this.func_184611_a(this.func_184600_cs(), this.field_184627_bm.func_77950_b(this.field_70170_p, this));
-            this.func_184602_cy();
+            this.updateItemUse(this.activeItemStack, 16);
+            ItemStack itemstack = this.activeItemStack.onItemUseFinish(this.world, this);
+            itemstack = net.minecraftforge.event.ForgeEventFactory.onItemUseFinish(this, activeItemStack, getItemInUseCount(), itemstack);
+            this.setHeldItem(this.getActiveHand(), itemstack);
+            this.resetActiveHand();
         }
     }
 
-    public ItemStack func_184607_cu()
+    public ItemStack getActiveItemStack()
     {
-        return this.field_184627_bm;
+        return this.activeItemStack;
     }
 
-    public int func_184605_cv()
+    public int getItemInUseCount()
     {
-        return this.field_184628_bn;
+        return this.activeItemStackUseCount;
     }
 
-    public int func_184612_cw()
+    public int getItemInUseMaxCount()
     {
-        return this.func_184587_cr() ? this.field_184627_bm.func_77988_m() - this.func_184605_cv() : 0;
+        return this.isHandActive() ? this.activeItemStack.getMaxItemUseDuration() - this.getItemInUseCount() : 0;
     }
 
-    public void func_184597_cx()
+    public void stopActiveHand()
     {
-        if (!this.field_184627_bm.func_190926_b())
+        if (!this.activeItemStack.isEmpty())
         {
-            this.field_184627_bm.func_77974_b(this.field_70170_p, this, this.func_184605_cv());
+            if (!net.minecraftforge.event.ForgeEventFactory.onUseItemStop(this, activeItemStack, this.getItemInUseCount()))
+                this.activeItemStack.onPlayerStoppedUsing(this.world, this, this.getItemInUseCount());
         }
 
-        this.func_184602_cy();
+        this.resetActiveHand();
     }
 
-    public void func_184602_cy()
+    public void resetActiveHand()
     {
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            this.field_70180_af.func_187227_b(field_184621_as, Byte.valueOf((byte)0));
+            this.dataManager.set(HAND_STATES, Byte.valueOf((byte)0));
         }
 
-        this.field_184627_bm = ItemStack.field_190927_a;
-        this.field_184628_bn = 0;
+        this.activeItemStack = ItemStack.EMPTY;
+        this.activeItemStackUseCount = 0;
     }
 
-    public boolean func_184585_cz()
+    public boolean isActiveItemStackBlocking()
     {
-        if (this.func_184587_cr() && !this.field_184627_bm.func_190926_b())
+        if (this.isHandActive() && !this.activeItemStack.isEmpty())
         {
-            Item item = this.field_184627_bm.func_77973_b();
-            return item.func_77661_b(this.field_184627_bm) != EnumAction.BLOCK ? false : item.func_77626_a(this.field_184627_bm) - this.field_184628_bn >= 5;
+            Item item = this.activeItemStack.getItem();
+            return item.getItemUseAction(this.activeItemStack) != EnumAction.BLOCK ? false : item.getMaxItemUseDuration(this.activeItemStack) - this.activeItemStackUseCount >= 5;
         }
         else
         {
@@ -2667,55 +2805,55 @@
         }
     }
 
-    public boolean func_184613_cA()
+    public boolean isElytraFlying()
     {
-        return this.func_70083_f(7);
+        return this.getFlag(7);
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_184599_cB()
+    public int getTicksElytraFlying()
     {
-        return this.field_184629_bo;
+        return this.ticksElytraFlying;
     }
 
-    public boolean func_184595_k(double p_184595_1_, double p_184595_3_, double p_184595_5_)
+    public boolean attemptTeleport(double x, double y, double z)
     {
-        double d0 = this.field_70165_t;
-        double d1 = this.field_70163_u;
-        double d2 = this.field_70161_v;
-        this.field_70165_t = p_184595_1_;
-        this.field_70163_u = p_184595_3_;
-        this.field_70161_v = p_184595_5_;
+        double d0 = this.posX;
+        double d1 = this.posY;
+        double d2 = this.posZ;
+        this.posX = x;
+        this.posY = y;
+        this.posZ = z;
         boolean flag = false;
         BlockPos blockpos = new BlockPos(this);
-        World world = this.field_70170_p;
-        Random random = this.func_70681_au();
+        World world = this.world;
+        Random random = this.getRNG();
 
-        if (world.func_175667_e(blockpos))
+        if (world.isBlockLoaded(blockpos))
         {
             boolean flag1 = false;
 
-            while (!flag1 && blockpos.func_177956_o() > 0)
+            while (!flag1 && blockpos.getY() > 0)
             {
-                BlockPos blockpos1 = blockpos.func_177977_b();
-                IBlockState iblockstate = world.func_180495_p(blockpos1);
+                BlockPos blockpos1 = blockpos.down();
+                IBlockState iblockstate = world.getBlockState(blockpos1);
 
-                if (iblockstate.func_185904_a().func_76230_c())
+                if (iblockstate.getMaterial().blocksMovement())
                 {
                     flag1 = true;
                 }
                 else
                 {
-                    --this.field_70163_u;
+                    --this.posY;
                     blockpos = blockpos1;
                 }
             }
 
             if (flag1)
             {
-                this.func_70634_a(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+                this.setPositionAndUpdate(this.posX, this.posY, this.posZ);
 
-                if (world.func_184144_a(this, this.func_174813_aQ()).isEmpty() && !world.func_72953_d(this.func_174813_aQ()))
+                if (world.getCollisionBoxes(this, this.getEntityBoundingBox()).isEmpty() && !world.containsAnyLiquid(this.getEntityBoundingBox()))
                 {
                     flag = true;
                 }
@@ -2724,7 +2862,7 @@
 
         if (!flag)
         {
-            this.func_70634_a(d0, d1, d2);
+            this.setPositionAndUpdate(d0, d1, d2);
             return false;
         }
         else
@@ -2737,28 +2875,53 @@
                 float f = (random.nextFloat() - 0.5F) * 0.2F;
                 float f1 = (random.nextFloat() - 0.5F) * 0.2F;
                 float f2 = (random.nextFloat() - 0.5F) * 0.2F;
-                double d3 = d0 + (this.field_70165_t - d0) * d6 + (random.nextDouble() - 0.5D) * (double)this.field_70130_N * 2.0D;
-                double d4 = d1 + (this.field_70163_u - d1) * d6 + random.nextDouble() * (double)this.field_70131_O;
-                double d5 = d2 + (this.field_70161_v - d2) * d6 + (random.nextDouble() - 0.5D) * (double)this.field_70130_N * 2.0D;
-                world.func_175688_a(EnumParticleTypes.PORTAL, d3, d4, d5, (double)f, (double)f1, (double)f2, new int[0]);
+                double d3 = d0 + (this.posX - d0) * d6 + (random.nextDouble() - 0.5D) * (double)this.width * 2.0D;
+                double d4 = d1 + (this.posY - d1) * d6 + random.nextDouble() * (double)this.height;
+                double d5 = d2 + (this.posZ - d2) * d6 + (random.nextDouble() - 0.5D) * (double)this.width * 2.0D;
+                world.spawnParticle(EnumParticleTypes.PORTAL, d3, d4, d5, (double)f, (double)f1, (double)f2, new int[0]);
             }
 
             if (this instanceof EntityCreature)
             {
-                ((EntityCreature)this).func_70661_as().func_75499_g();
+                ((EntityCreature)this).getNavigator().clearPathEntity();
             }
 
             return true;
         }
     }
 
-    public boolean func_184603_cC()
+    public boolean canBeHitWithPotion()
     {
         return true;
     }
 
-    public boolean func_190631_cK()
+    public boolean attackable()
     {
         return true;
     }
+
+    // FORGE
+    private final net.minecraftforge.items.IItemHandlerModifiable handHandler = new net.minecraftforge.items.wrapper.EntityHandsInvWrapper(this);
+    private final net.minecraftforge.items.IItemHandlerModifiable armorHandler = new net.minecraftforge.items.wrapper.EntityArmorInvWrapper(this);
+    private final net.minecraftforge.items.IItemHandler joinedHandler = new net.minecraftforge.items.wrapper.CombinedInvWrapper(armorHandler, handHandler);
+
+    @SuppressWarnings("unchecked")
+    @Override
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        if (capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)
+        {
+            if (facing == null) return (T) joinedHandler;
+            else if (facing.getAxis().isVertical()) return (T) handHandler;
+            else if (facing.getAxis().isHorizontal()) return (T) armorHandler;
+        }
+        return super.getCapability(capability, facing);
+    }
+
+    @Override
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        return capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY || super.hasCapability(capability, facing);
+    }
 }
