--- ../src-base/minecraft/net/minecraft/entity/Entity.java
+++ ../src-work/minecraft/net/minecraft/entity/Entity.java
@@ -1,5 +1,6 @@
 package net.minecraft.entity;
 
+import com.google.common.base.Preconditions;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -31,6 +32,7 @@
 import net.minecraft.entity.effect.EntityLightningBolt;
 import net.minecraft.entity.item.EntityBoat;
 import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.passive.EntityTameable;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.init.Blocks;
@@ -79,13 +81,55 @@
 import net.minecraft.world.Teleporter;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+import net.minecraftforge.common.DimensionManager;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.Server;
+import org.bukkit.block.BlockFace;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Hanging;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.entity.EntityAirChangeEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.entity.EntityPortalEvent;
+import org.bukkit.event.hanging.HangingBreakByEntityEvent;
+import org.bukkit.event.vehicle.VehicleBlockCollisionEvent;
+import org.bukkit.event.vehicle.VehicleEnterEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
+import org.bukkit.plugin.PluginManager;
 
-public abstract class Entity implements ICommandSender
+public abstract class Entity implements ICommandSender, net.minecraftforge.common.capabilities.ICapabilitySerializable<NBTTagCompound>
 {
+    // CraftBukkit start
+    private static final int CURRENT_LEVEL = 2;
+    //Spigot
+    public int activationType = 1;
+    public int activatedTick;
+
+    static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
+        return tag.func_74764_b("Bukkit.updateLevel") && tag.func_74762_e("Bukkit.updateLevel") >= level;
+    }
+
+    protected CraftEntity bukkitEntity;
+
+    public CraftEntity getBukkitEntity() {
+        if (bukkitEntity == null) {
+            bukkitEntity = CraftEntity.getEntity(field_70170_p.getServer(), this);
+        }
+        return bukkitEntity;
+    }
+    // CraftBukikt end
+
     private static final Logger field_184243_a = LogManager.getLogger();
     private static final List<ItemStack> field_190535_b = Collections.<ItemStack>emptyList();
     private static final AxisAlignedBB field_174836_a = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
@@ -140,7 +184,7 @@
     public int field_70172_ad;
     protected boolean field_70148_d;
     protected boolean field_70178_ae;
-    protected EntityDataManager field_70180_af;
+    public EntityDataManager field_70180_af;
     protected static final DataParameter<Byte> field_184240_ax = EntityDataManager.<Byte>func_187226_a(Entity.class, DataSerializers.field_187191_a);
     private static final DataParameter<Integer> field_184241_ay = EntityDataManager.<Integer>func_187226_a(Entity.class, DataSerializers.field_187192_b);
     private static final DataParameter<String> field_184242_az = EntityDataManager.<String>func_187226_a(Entity.class, DataSerializers.field_187194_d);
@@ -175,6 +219,13 @@
     private boolean field_184237_aG;
     private double[] field_191505_aI;
     private long field_191506_aJ;
+    public boolean valid; // CraftBukkit
+    public org.bukkit.projectiles.ProjectileSource projectileSource; // CraftBukkit - For projectiles only
+    public boolean forceExplosionKnockback; // CraftBukkit - SPIGOT-949
+    /**
+     * Setting this to true will prevent the world from calling {@link #onUpdate()} for this entity. 
+     */
+    public boolean updateBlocked;
 
     public Entity(World p_i1582_1_)
     {
@@ -197,7 +248,7 @@
 
         if (p_i1582_1_ != null)
         {
-            this.field_71093_bK = p_i1582_1_.field_73011_w.func_186058_p().func_186068_a();
+            this.field_71093_bK = p_i1582_1_.field_73011_w.getDimension();
         }
 
         this.field_70180_af = new EntityDataManager(this);
@@ -208,8 +259,16 @@
         this.field_70180_af.func_187214_a(field_184234_aB, Boolean.valueOf(false));
         this.field_70180_af.func_187214_a(field_189655_aD, Boolean.valueOf(false));
         this.func_70088_a();
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EntityConstructing(this));
+        capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this);
     }
 
+    /** Forge: Used to store custom data for each entity. */
+    private NBTTagCompound customEntityData;
+    public boolean captureDrops = false;
+    public java.util.ArrayList<EntityItem> capturedDrops = new java.util.ArrayList<EntityItem>();
+    private net.minecraftforge.common.capabilities.CapabilityDispatcher capabilities;
+
     public int func_145782_y()
     {
         return this.field_145783_c;
@@ -325,6 +384,33 @@
 
     protected void func_70101_b(float p_70101_1_, float p_70101_2_)
     {
+        // CraftBukkit start - yaw was sometimes set to NaN, so we need to set it back to 0
+        if (Float.isNaN(p_70101_1_)) {
+            p_70101_1_ = 0;
+        }
+
+        if (p_70101_1_ == Float.POSITIVE_INFINITY || p_70101_1_ == Float.NEGATIVE_INFINITY) {
+            if (this instanceof EntityPlayerMP) {
+                this.field_70170_p.getServer().getLogger().warning(this.func_70005_c_() + " was caught trying to crash the server with an invalid yaw");
+                ((CraftPlayer) this.getBukkitEntity()).kickPlayer("Nope");
+            }
+            p_70101_1_ = 0;
+        }
+
+        // pitch was sometimes set to NaN, so we need to set it back to 0
+        if (Float.isNaN(p_70101_2_)) {
+            p_70101_2_ = 0;
+        }
+
+        if (p_70101_2_ == Float.POSITIVE_INFINITY || p_70101_2_ == Float.NEGATIVE_INFINITY) {
+            if (this instanceof EntityPlayerMP) {
+                this.field_70170_p.getServer().getLogger().warning(this.func_70005_c_() + " was caught trying to crash the server with an invalid pitch");
+                ((CraftPlayer) this.getBukkitEntity()).kickPlayer("Nope");
+            }
+            p_70101_2_ = 0;
+        }
+        // CraftBukkit end
+
         this.field_70177_z = p_70101_1_ % 360.0F;
         this.field_70125_A = p_70101_2_ % 360.0F;
     }
@@ -506,8 +592,26 @@
     {
         if (!this.field_70178_ae)
         {
-            this.func_70097_a(DamageSource.field_76371_c, 4.0F);
-            this.func_70015_d(15);
+            // CraftBukkit start - Fallen in lava TODO: this event spams!
+            if (this instanceof net.minecraft.entity.EntityLivingBase) {
+                if (field_190534_ay <= 0) {
+                    // not on fire yet
+                    // TODO: shouldn't be sending null for the block
+                    org.bukkit.block.Block damager = null; // ((WorldServer) this.l).getWorld().getBlockAt(i, j, k);
+                    org.bukkit.entity.Entity damagee = this.getBukkitEntity();
+                    EntityCombustEvent combustEvent = new org.bukkit.event.entity.EntityCombustByBlockEvent(damager, damagee, 15);
+                    this.field_70170_p.getServer().getPluginManager().callEvent(combustEvent);
+
+                    if (!combustEvent.isCancelled()) {
+                        this.func_70015_d(combustEvent.getDuration());
+                    }
+                } else {
+                    // This will be called every single tick the entity is in lava, so don't throw an event
+                    this.func_70015_d(15);
+                }
+                return;
+            }
+            // CraftBukkit end - we also don't throw an event unless the object in lava is living, to save on some event calls
         }
     }
 
@@ -889,6 +993,28 @@
                 block.func_176216_a(this.field_70170_p, this);
             }
 
+            // CraftBukkit start
+            if (field_70123_F && getBukkitEntity() instanceof Vehicle) {
+                Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+                org.bukkit.block.Block bl = this.field_70170_p.getWorld().getBlockAt(MathHelper.func_76128_c(this.field_70165_t), MathHelper.func_76128_c(this.field_70163_u), MathHelper.func_76128_c(this.field_70161_v));
+
+                if (d1 > p_70091_2_) {
+                    bl = bl.getRelative(BlockFace.EAST);
+                } else if (d1 < p_70091_2_) {
+                    bl = bl.getRelative(BlockFace.WEST);
+                } else if (d3 > p_70091_6_) {
+                    bl = bl.getRelative(BlockFace.SOUTH);
+                } else if (d3 < p_70091_6_) {
+                    bl = bl.getRelative(BlockFace.NORTH);
+                }
+
+                if (bl.getType() != org.bukkit.Material.AIR) {
+                    VehicleBlockCollisionEvent event = new VehicleBlockCollisionEvent(vehicle, bl);
+                    field_70170_p.getServer().getPluginManager().callEvent(event);
+                }
+            }
+            // CraftBukkit end
+
             if (this.func_70041_e_() && (!this.field_70122_E || !this.func_70093_af() || !(this instanceof EntityPlayer)) && !this.func_184218_aH())
             {
                 double d15 = this.field_70165_t - d10;
@@ -956,7 +1082,14 @@
 
                     if (this.field_190534_ay == 0)
                     {
-                        this.func_70015_d(8);
+                        // CraftBukkit start
+                        EntityCombustEvent event = new org.bukkit.event.entity.EntityCombustByBlockEvent(null, getBukkitEntity(), 8);
+                        field_70170_p.getServer().getPluginManager().callEvent(event);
+
+                        if (!event.isCancelled()) {
+                            this.func_70015_d(event.getDuration());
+                        }
+                        // CraftBukkit end
                     }
                 }
             }
@@ -1034,7 +1167,7 @@
 
     protected void func_180429_a(BlockPos p_180429_1_, Block p_180429_2_)
     {
-        SoundType soundtype = p_180429_2_.func_185467_w();
+        SoundType soundtype = p_180429_2_.getSoundType(field_70170_p.func_180495_p(p_180429_1_), field_70170_p, p_180429_1_, this);
 
         if (this.field_70170_p.func_180495_p(p_180429_1_.func_177984_a()).func_177230_c() == Blocks.field_150431_aC)
         {
@@ -1243,12 +1376,12 @@
             BlockPos blockpos = new BlockPos(this.field_70165_t, d0, this.field_70161_v);
             IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos);
 
+            Boolean result = iblockstate.func_177230_c().isEntityInsideMaterial(this.field_70170_p, blockpos, iblockstate, this, d0, p_70055_1_, true);
+            if (result != null) return result;
+
             if (iblockstate.func_185904_a() == p_70055_1_)
             {
-                float f = BlockLiquid.func_149801_b(iblockstate.func_177230_c().func_176201_c(iblockstate)) - 0.11111111F;
-                float f1 = (float)(blockpos.func_177956_o() + 1) - f;
-                boolean flag = d0 < (double)f1;
-                return !flag && this instanceof EntityPlayer ? false : flag;
+                return net.minecraftforge.common.ForgeHooks.isInsideOfMaterial(p_70055_1_, this, blockpos);
             }
             else
             {
@@ -1318,7 +1451,15 @@
 
     public void func_70029_a(World p_70029_1_)
     {
+        // CraftBukkit start
+        if (p_70029_1_ == null) {
+            func_70106_y();
+            this.field_70170_p = ((CraftWorld) Bukkit.getServer().getWorlds().get(0)).getHandle();
+            return;
+        }
+        // CraftBukkit end
         this.field_70170_p = p_70029_1_;
+        return;
     }
 
     public void func_70080_a(double p_70080_1_, double p_70080_3_, double p_70080_5_, float p_70080_7_, float p_70080_8_)
@@ -1629,6 +1770,16 @@
     {
         try
         {
+            // CraftBukkit start - Checking for NaN pitch/yaw and resetting to zero
+            // TODO: make sure this is the best way to address this.
+            if (Float.isNaN(this.field_70177_z)) {
+                this.field_70177_z = 0;
+            }
+
+            if (Float.isNaN(this.field_70125_A)) {
+                this.field_70125_A = 0;
+            }
+            // CraftBukkit end
             p_189511_1_.func_74782_a("Pos", this.func_70087_a(new double[] {this.field_70165_t, this.field_70163_u, this.field_70161_v}));
             p_189511_1_.func_74782_a("Motion", this.func_70087_a(new double[] {this.field_70159_w, this.field_70181_x, this.field_70179_y}));
             p_189511_1_.func_74782_a("Rotation", this.func_70049_a(new float[] {this.field_70177_z, this.field_70125_A}));
@@ -1640,7 +1791,12 @@
             p_189511_1_.func_74757_a("Invulnerable", this.field_83001_bt);
             p_189511_1_.func_74768_a("PortalCooldown", this.field_71088_bW);
             p_189511_1_.func_186854_a("UUID", this.func_110124_au());
-
+            // CraftBukkit start
+            // PAIL: Check above UUID reads 1.8 properly, ie: UUIDMost / UUIDLeast
+            p_189511_1_.func_74772_a("WorldUUIDLeast", this.field_70170_p.func_72860_G().getUUID().getLeastSignificantBits());
+            p_189511_1_.func_74772_a("WorldUUIDMost", this.field_70170_p.func_72860_G().getUUID().getMostSignificantBits());
+            p_189511_1_.func_74768_a("Bukkit.updateLevel", CURRENT_LEVEL);
+            // CraftBukkit end
             if (this.func_145818_k_())
             {
                 p_189511_1_.func_74778_a("CustomName", this.func_95999_t());
@@ -1667,6 +1823,7 @@
             {
                 p_189511_1_.func_74757_a("Glowing", this.field_184238_ar);
             }
+            p_189511_1_.func_74757_a("UpdateBlocked", updateBlocked);
 
             if (this.field_184236_aF.size() > 0)
             {
@@ -1680,6 +1837,9 @@
                 p_189511_1_.func_74782_a("Tags", nbttaglist);
             }
 
+            if (customEntityData != null) p_189511_1_.func_74782_a("ForgeData", customEntityData);
+            if (this.capabilities != null) p_189511_1_.func_74782_a("ForgeCaps", this.capabilities.serializeNBT());
+
             this.func_70014_b(p_189511_1_);
 
             if (this.func_184207_aI())
@@ -1786,7 +1946,11 @@
             this.func_174810_b(p_70020_1_.func_74767_n("Silent"));
             this.func_189654_d(p_70020_1_.func_74767_n("NoGravity"));
             this.func_184195_f(p_70020_1_.func_74767_n("Glowing"));
+            updateBlocked = p_70020_1_.func_74767_n("UpdateBlocked");
 
+            if (p_70020_1_.func_74764_b("ForgeData")) customEntityData = p_70020_1_.func_74775_l("ForgeData");
+            if (this.capabilities != null && p_70020_1_.func_74764_b("ForgeCaps")) this.capabilities.deserializeNBT(p_70020_1_.func_74775_l("ForgeCaps"));
+
             if (p_70020_1_.func_150297_b("Tags", 9))
             {
                 this.field_184236_aF.clear();
@@ -1798,13 +1962,63 @@
                     this.field_184236_aF.add(nbttaglist1.func_150307_f(j));
                 }
             }
-
             this.func_70037_a(p_70020_1_);
 
             if (this.func_142008_O())
             {
                 this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
             }
+            // CraftBukkit start
+            if (this instanceof EntityLivingBase) {
+                EntityLivingBase entity = (EntityLivingBase) this;
+
+                // Reset the persistence for tamed animals
+                if (entity instanceof EntityTameable && !isLevelAtLeast(p_70020_1_, 2) && !p_70020_1_.func_74767_n("PersistenceRequired")) {
+                    EntityLiving entityinsentient = (EntityLiving) entity;
+                    entityinsentient.field_82179_bU = !entityinsentient.func_70692_ba();
+                }
+            }
+            // CraftBukkit end
+
+            // CraftBukkit start - Exempt Vehicles from notch's sanity check
+            if (!(getBukkitEntity() instanceof Vehicle)) {
+                if (Math.abs(this.field_70159_w) > 10.0D) {
+                    this.field_70159_w = 0.0D;
+                }
+
+                if (Math.abs(this.field_70181_x) > 10.0D) {
+                    this.field_70181_x = 0.0D;
+                }
+
+                if (Math.abs(this.field_70179_y) > 10.0D) {
+                    this.field_70179_y = 0.0D;
+                }
+            }
+            // CraftBukkit end
+            // CraftBukkit start - Reset world
+            if (this instanceof EntityPlayerMP) {
+                Server server = Bukkit.getServer();
+                org.bukkit.World bworld = null;
+
+                // TODO: Remove World related checks, replaced with WorldUID
+                String worldName = p_70020_1_.func_74779_i("world");
+
+                if (p_70020_1_.func_74764_b("WorldUUIDMost") && p_70020_1_.func_74764_b("WorldUUIDLeast")) {
+                    UUID uid = new UUID(p_70020_1_.func_74763_f("WorldUUIDMost"), p_70020_1_.func_74763_f("WorldUUIDLeast"));
+                    bworld = server.getWorld(uid);
+                } else {
+                    bworld = server.getWorld(worldName);
+                }
+
+                if (bworld == null) {
+                    EntityPlayerMP entityPlayer = (EntityPlayerMP) this;
+                    bworld = ((CraftServer) server).getServer().func_71218_a(entityPlayer.field_71093_bK).getWorld();
+                }
+
+                //setWorld(bworld == null? DimensionManager.getWorld(0) : ((CraftWorld) bworld).getHandle());
+            }   //Fuck, this messed up my world!
+            // CraftBukkit end
+
         }
         catch (Throwable throwable)
         {
@@ -1878,7 +2092,15 @@
         {
             EntityItem entityitem = new EntityItem(this.field_70170_p, this.field_70165_t, this.field_70163_u + (double)p_70099_2_, this.field_70161_v, p_70099_1_);
             entityitem.func_174869_p();
-            this.field_70170_p.func_72838_d(entityitem);
+            if (captureDrops)
+                this.capturedDrops.add(entityitem);
+            else
+                this.field_70170_p.func_72838_d(entityitem);
+            // CraftBukkit start - Capture drops for death event
+            if (this instanceof net.minecraft.entity.EntityLivingBase && !((net.minecraft.entity.EntityLivingBase) this).forceDrops) {
+                ((net.minecraft.entity.EntityLivingBase) this).drops.add(org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(p_70099_1_));
+            }
+            // CraftBukkit end
             return entityitem;
         }
     }
@@ -1945,6 +2167,7 @@
             this.field_70159_w = 0.0D;
             this.field_70181_x = 0.0D;
             this.field_70179_y = 0.0D;
+            if(!updateBlocked)
             this.func_70071_h_();
 
             if (this.func_184218_aH())
@@ -1992,6 +2215,7 @@
             }
         }
 
+        if (!net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, p_184205_1_, true)) return false;
         if (p_184205_2_ || this.func_184228_n(p_184205_1_) && p_184205_1_.func_184219_q(this))
         {
             if (this.func_184218_aH())
@@ -2027,6 +2251,7 @@
         if (this.field_184239_as != null)
         {
             Entity entity = this.field_184239_as;
+            if (!net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, entity, false)) return;
             this.field_184239_as = null;
             entity.func_184225_p(this);
         }
@@ -2040,6 +2265,24 @@
         }
         else
         {
+            // CraftBukkit start
+            Preconditions.checkState(!p_184200_1_.field_184244_h.contains(this), "Circular entity riding! %s %s", this, p_184200_1_);
+
+            CraftEntity craft = (CraftEntity) p_184200_1_.getBukkitEntity().getVehicle();
+            net.minecraft.entity.Entity orig = craft == null ? null : craft.getHandle();
+            if (getBukkitEntity() instanceof Vehicle && p_184200_1_.getBukkitEntity() instanceof LivingEntity && p_184200_1_.field_70170_p.func_175680_a((int) p_184200_1_.field_70165_t >> 4, (int) p_184200_1_.field_70161_v >> 4, false)) { // Boolean not used
+                VehicleEnterEvent event = new VehicleEnterEvent(
+                        (Vehicle) getBukkitEntity(),
+                        p_184200_1_.getBukkitEntity()
+                );
+                Bukkit.getPluginManager().callEvent(event);
+                CraftEntity craftn = (CraftEntity) p_184200_1_.getBukkitEntity().getVehicle();
+                net.minecraft.entity.Entity n = craftn == null ? null : craftn.getHandle();
+                if (event.isCancelled() || n != orig) {
+                    return;
+                }
+            }
+            // CraftBukkit end
             if (!this.field_70170_p.field_72995_K && p_184200_1_ instanceof EntityPlayer && !(this.func_184179_bs() instanceof EntityPlayer))
             {
                 this.field_184244_h.add(0, p_184200_1_);
@@ -2059,6 +2302,22 @@
         }
         else
         {
+            // CraftBukkit start
+            CraftEntity craft = (CraftEntity) p_184225_1_.getBukkitEntity().getVehicle();
+            Entity orig = craft == null ? null : craft.getHandle();
+            if (getBukkitEntity() instanceof Vehicle && p_184225_1_.getBukkitEntity() instanceof LivingEntity) {
+                VehicleExitEvent event = new VehicleExitEvent(
+                        (Vehicle) getBukkitEntity(),
+                        (LivingEntity) p_184225_1_.getBukkitEntity()
+                );
+                Bukkit.getPluginManager().callEvent(event);
+                CraftEntity craftn = (CraftEntity) p_184225_1_.getBukkitEntity().getVehicle();
+                Entity n = craftn == null ? null : craftn.getHandle();
+                if (event.isCancelled() || n != orig) {
+                    return;
+                }
+            }
+            // CraftBukkit end
             this.field_184244_h.remove(p_184225_1_);
             p_184225_1_.field_184245_j = 60;
         }
@@ -2282,18 +2541,51 @@
 
     public void func_70050_g(int p_70050_1_)
     {
-        this.field_70180_af.func_187227_b(field_184241_ay, Integer.valueOf(p_70050_1_));
+        // CraftBukkit start
+        EntityAirChangeEvent event = new EntityAirChangeEvent(this.getBukkitEntity(), p_70050_1_);
+        event.getEntity().getServer().getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            return;
+        }
+        this.field_70180_af.func_187227_b(net.minecraft.entity.Entity.field_184241_ay, Integer.valueOf(event.getAmount()));
+        // CraftBukkit end
     }
 
     public void func_70077_a(EntityLightningBolt p_70077_1_)
     {
-        this.func_70097_a(DamageSource.field_180137_b, 5.0F);
-        ++this.field_190534_ay;
+        // CraftBukkit start
+        final org.bukkit.entity.Entity thisBukkitEntity = this.getBukkitEntity();
+        final org.bukkit.entity.Entity stormBukkitEntity = p_70077_1_.getBukkitEntity();
+        final PluginManager pluginManager = Bukkit.getPluginManager();
 
-        if (this.field_190534_ay == 0)
-        {
-            this.func_70015_d(8);
+        if (thisBukkitEntity instanceof Hanging) {
+            HangingBreakByEntityEvent hangingEvent = new HangingBreakByEntityEvent((Hanging) thisBukkitEntity, stormBukkitEntity);
+            pluginManager.callEvent(hangingEvent);
+
+            if (hangingEvent.isCancelled()) {
+                return;
+            }
         }
+
+        if (this.field_70178_ae) {
+            return;
+        }
+        CraftEventFactory.entityDamage = p_70077_1_;
+        if (!this.func_70097_a(DamageSource.field_180137_b, 5.0F)) {
+            CraftEventFactory.entityDamage = null;
+            return;
+        }
+        // CraftBukkit end
+        ++this.field_190534_ay;
+        if (this.field_190534_ay == 0) {
+            // CraftBukkit start - Call a combust event when lightning strikes
+            EntityCombustByEntityEvent entityCombustEvent = new EntityCombustByEntityEvent(stormBukkitEntity, thisBukkitEntity, 8);
+            pluginManager.callEvent(entityCombustEvent);
+            if (!entityCombustEvent.isCancelled()) {
+                this.func_70015_d(entityCombustEvent.getDuration());
+            }
+            // CraftBukkit end
+        }
     }
 
     public void func_70074_a(EntityLivingBase p_70074_1_)
@@ -2472,6 +2764,7 @@
     {
         if (!this.field_70170_p.field_72995_K && !this.field_70128_L)
         {
+            if (!net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, p_184204_1_)) return null;
             this.field_70170_p.field_72984_F.func_76320_a("changeDimension");
             MinecraftServer minecraftserver = this.func_184102_h();
             int i = this.field_71093_bK;
@@ -2489,7 +2782,10 @@
             this.field_70128_L = false;
             this.field_70170_p.field_72984_F.func_76320_a("reposition");
             BlockPos blockpos;
-
+            //MCPCRevive start
+            Location enter = this.getBukkitEntity().getLocation();
+            Location exit;
+            //MCPCRevive end
             if (p_184204_1_ == 1)
             {
                 blockpos = worldserver1.func_180504_m();
@@ -2519,7 +2815,15 @@
                 teleporter.func_180620_b(this, f);
                 blockpos = new BlockPos(this);
             }
-
+            //MCPCRevive start Craft bukkit start
+            exit = new Location(worldserver1.getWorld(),blockpos.func_177958_n(),blockpos.func_177956_o(),blockpos.func_177952_p());
+            EntityPortalEvent event = new EntityPortalEvent(this.getBukkitEntity(), enter, exit, null);
+            event.useTravelAgent(false);
+            event.getEntity().getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled() || event.getTo() == null || event.getTo().getWorld() == null || !this.func_70089_S()) {
+                return null;
+            }
+            //MCPCRevive CraftBukkit end
             worldserver.func_72866_a(this, false);
             this.field_70170_p.field_72984_F.func_76318_c("reloading");
             Entity entity = EntityList.func_191304_a(this.getClass(), worldserver1);
@@ -2565,7 +2869,7 @@
 
     public float func_180428_a(Explosion p_180428_1_, World p_180428_2_, BlockPos p_180428_3_, IBlockState p_180428_4_)
     {
-        return p_180428_4_.func_177230_c().func_149638_a(this);
+        return p_180428_4_.func_177230_c().getExplosionResistance(p_180428_2_, p_180428_3_, this, p_180428_1_);
     }
 
     public boolean func_174816_a(Explosion p_174816_1_, World p_174816_2_, BlockPos p_174816_3_, IBlockState p_174816_4_, float p_174816_5_)
@@ -2678,7 +2982,13 @@
 
     public void func_96094_a(String p_96094_1_)
     {
+
+        // CraftBukkit start - Add a sane limit for name length
+        if (p_96094_1_.length() > 256) {
+            p_96094_1_ = p_96094_1_.substring(0, 256);
+        }
         this.field_70180_af.func_187227_b(field_184242_az, p_96094_1_);
+        // CraftBukkit end
     }
 
     public String func_95999_t()
@@ -2761,6 +3071,27 @@
 
     public void func_174826_a(AxisAlignedBB p_174826_1_)
     {
+
+        // CraftBukkit start - block invalid bounding boxes
+        double a = p_174826_1_.field_72340_a,
+                b = p_174826_1_.field_72338_b,
+                c = p_174826_1_.field_72339_c,
+                d = p_174826_1_.field_72336_d,
+                e = p_174826_1_.field_72337_e,
+                f = p_174826_1_.field_72334_f;
+        double len = p_174826_1_.field_72336_d - p_174826_1_.field_72340_a;
+        if (len < 0) d = a;
+        if (len > 64) d = a + 64.0;
+
+        len = p_174826_1_.field_72337_e - p_174826_1_.field_72338_b;
+        if (len < 0) e = b;
+        if (len > 64) e = b + 64.0;
+
+        len = p_174826_1_.field_72334_f - p_174826_1_.field_72339_c;
+        if (len < 0) f = c;
+        if (len > 64) f = c + 64.0;
+        this.field_70121_D = new AxisAlignedBB(a, b, c, d, e, f);
+        // CraftBukkit end
         this.field_70121_D = p_174826_1_;
     }
 
@@ -2862,6 +3193,184 @@
         EnchantmentHelper.func_151385_b(p_174815_1_, p_174815_2_);
     }
 
+    /* ================================== Forge Start =====================================*/
+    /**
+     * Returns a NBTTagCompound that can be used to store custom data for this entity.
+     * It will be written, and read from disc, so it persists over world saves.
+     * @return A NBTTagCompound
+     */
+    public NBTTagCompound getEntityData()
+    {
+        if (customEntityData == null)
+        {
+            customEntityData = new NBTTagCompound();
+        }
+        return customEntityData;
+    }
+
+    /**
+     * Used in model rendering to determine if the entity riding this entity should be in the 'sitting' position.
+     * @return false to prevent an entity that is mounted to this entity from displaying the 'sitting' animation.
+     */
+    public boolean shouldRiderSit()
+    {
+        return true;
+    }
+
+    /**
+     * Called when a user uses the creative pick block button on this entity.
+     *
+     * @param target The full target the player is looking at
+     * @return A ItemStack to add to the player's inventory, empty ItemStack if nothing should be added.
+     */
+    public ItemStack getPickedResult(RayTraceResult target)
+    {
+        if (this instanceof net.minecraft.entity.item.EntityPainting)
+        {
+            return new ItemStack(net.minecraft.init.Items.field_151159_an);
+        }
+        else if (this instanceof EntityLeashKnot)
+        {
+            return new ItemStack(net.minecraft.init.Items.field_151058_ca);
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityItemFrame)
+        {
+            ItemStack held = ((net.minecraft.entity.item.EntityItemFrame)this).func_82335_i();
+            if (held.func_190926_b())
+            {
+                return new ItemStack(net.minecraft.init.Items.field_151160_bD);
+            }
+            else
+            {
+                return held.func_77946_l();
+            }
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityMinecart)
+        {
+            return ((net.minecraft.entity.item.EntityMinecart)this).getCartItem();
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityBoat)
+        {
+            return new ItemStack(((EntityBoat)this).func_184455_j());
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityArmorStand)
+        {
+            return new ItemStack(net.minecraft.init.Items.field_179565_cj);
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityEnderCrystal)
+        {
+            return new ItemStack(net.minecraft.init.Items.field_185158_cP);
+        }
+        else
+        {
+            ResourceLocation name = EntityList.func_191301_a(this);
+            if (name != null && EntityList.field_75627_a.containsKey(name))
+            {
+                ItemStack stack = new ItemStack(net.minecraft.init.Items.field_151063_bx);
+                net.minecraft.item.ItemMonsterPlacer.func_185078_a(stack, name);
+                return stack;
+            }
+        }
+        return ItemStack.field_190927_a;
+    }
+
+    public UUID getPersistentID()
+    {
+        return field_96093_i;
+    }
+
+    /**
+     * Reset the entity ID to a new value. Not to be used from Mod code
+     */
+    public final void resetEntityId()
+    {
+        this.field_145783_c = field_70152_a++;
+    }
+
+    public boolean shouldRenderInPass(int pass)
+    {
+        return pass == 0;
+    }
+
+    /**
+     * Returns true if the entity is of the @link{EnumCreatureType} provided
+     * @param type The EnumCreatureType type this entity is evaluating
+     * @param forSpawnCount If this is being invoked to check spawn count caps.
+     * @return If the creature is of the type provided
+     */
+    public boolean isCreatureType(EnumCreatureType type, boolean forSpawnCount)
+    {
+        if (forSpawnCount && (this instanceof EntityLiving) && ((EntityLiving)this).func_104002_bU()) return false;
+        return type.func_75598_a().isAssignableFrom(this.getClass());
+    }
+
+    /**
+     * If a rider of this entity can interact with this entity. Should return true on the
+     * ridden entity if so.
+     *
+     * @return if the entity can be interacted with from a rider
+     */
+    public boolean canRiderInteract()
+    {
+        return false;
+    }
+
+    /**
+     * If the rider should be dismounted from the entity when the entity goes under water
+     *
+     * @param rider The entity that is riding
+     * @return if the entity should be dismounted when under water
+     */
+    public boolean shouldDismountInWater(Entity rider)
+    {
+        return this instanceof EntityLivingBase;
+    }
+
+    @Override
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        if (getCapability(capability, facing) != null)
+            return true;
+        return capabilities == null ? false : capabilities.hasCapability(capability, facing);
+    }
+
+    @Override
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        return capabilities == null ? null : capabilities.getCapability(capability, facing);
+    }
+
+    public void deserializeNBT(NBTTagCompound nbt)
+    {
+        this.func_70020_e(nbt);
+    }
+
+    public NBTTagCompound serializeNBT()
+    {
+        NBTTagCompound ret = new NBTTagCompound();
+        ret.func_74778_a("id", this.func_70022_Q());
+        return this.func_189511_e(ret);
+    }
+
+    /**
+     * Checks if this {@link Entity} can trample a {@link Block}.
+     *
+     * @param world The world in which the block will be trampled
+     * @param block The block being tested
+     * @param pos The block pos
+     * @param fallDistance The fall distance
+     * @return {@code true} if this entity can trample, {@code false} otherwise
+     */
+    public boolean canTrample(World world, Block block, BlockPos pos, float fallDistance)
+    {
+        return world.field_73012_v.nextFloat() < fallDistance - 0.5F
+            && this instanceof EntityLivingBase
+            && (this instanceof EntityPlayer || world.func_82736_K().func_82766_b("mobGriefing"))
+            && this.field_70130_N * this.field_70130_N * this.field_70131_O > 0.512F;
+    }
+    /* ================================== Forge End =====================================*/
+
     public void func_184178_b(EntityPlayerMP p_184178_1_)
     {
     }
