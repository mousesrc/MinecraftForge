--- ../src-base/minecraft/net/minecraft/entity/Entity.java
+++ ../src-work/minecraft/net/minecraft/entity/Entity.java
@@ -1,5 +1,6 @@
 package net.minecraft.entity;
 
+import com.google.common.base.Preconditions;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -31,6 +32,7 @@
 import net.minecraft.entity.effect.EntityLightningBolt;
 import net.minecraft.entity.item.EntityBoat;
 import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.passive.EntityTameable;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.init.Blocks;
@@ -83,331 +85,414 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.Server;
+import org.bukkit.block.BlockFace;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.entity.CraftEntity;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Hanging;
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.entity.Vehicle;
+import org.bukkit.event.entity.EntityAirChangeEvent;
+import org.bukkit.event.entity.EntityCombustByEntityEvent;
+import org.bukkit.event.entity.EntityCombustEvent;
+import org.bukkit.event.entity.EntityPortalEvent;
+import org.bukkit.event.hanging.HangingBreakByEntityEvent;
+import org.bukkit.event.vehicle.VehicleBlockCollisionEvent;
+import org.bukkit.event.vehicle.VehicleEnterEvent;
+import org.bukkit.event.vehicle.VehicleExitEvent;
+import org.bukkit.plugin.PluginManager;
 
-public abstract class Entity implements ICommandSender
+public abstract class Entity implements ICommandSender, net.minecraftforge.common.capabilities.ICapabilitySerializable<NBTTagCompound>
 {
-    private static final Logger field_184243_a = LogManager.getLogger();
-    private static final List<ItemStack> field_190535_b = Collections.<ItemStack>emptyList();
-    private static final AxisAlignedBB field_174836_a = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
-    private static double field_70155_l = 1.0D;
-    private static int field_70152_a;
-    private int field_145783_c;
-    public boolean field_70156_m;
-    public final List<Entity> field_184244_h;
-    protected int field_184245_j;
-    private Entity field_184239_as;
-    public boolean field_98038_p;
-    public World field_70170_p;
-    public double field_70169_q;
-    public double field_70167_r;
-    public double field_70166_s;
-    public double field_70165_t;
-    public double field_70163_u;
-    public double field_70161_v;
-    public double field_70159_w;
-    public double field_70181_x;
-    public double field_70179_y;
-    public float field_70177_z;
-    public float field_70125_A;
-    public float field_70126_B;
-    public float field_70127_C;
-    private AxisAlignedBB field_70121_D;
-    public boolean field_70122_E;
-    public boolean field_70123_F;
-    public boolean field_70124_G;
-    public boolean field_70132_H;
-    public boolean field_70133_I;
-    protected boolean field_70134_J;
-    private boolean field_174835_g;
-    public boolean field_70128_L;
-    public float field_70130_N;
-    public float field_70131_O;
-    public float field_70141_P;
-    public float field_70140_Q;
-    public float field_82151_R;
-    public float field_70143_R;
-    private int field_70150_b;
-    public double field_70142_S;
-    public double field_70137_T;
-    public double field_70136_U;
-    public float field_70138_W;
-    public boolean field_70145_X;
-    public float field_70144_Y;
-    protected Random field_70146_Z;
-    public int field_70173_aa;
-    public int field_190534_ay;
-    public boolean field_70171_ac;
-    public int field_70172_ad;
-    protected boolean field_70148_d;
-    protected boolean field_70178_ae;
-    protected EntityDataManager field_70180_af;
-    protected static final DataParameter<Byte> field_184240_ax = EntityDataManager.<Byte>func_187226_a(Entity.class, DataSerializers.field_187191_a);
-    private static final DataParameter<Integer> field_184241_ay = EntityDataManager.<Integer>func_187226_a(Entity.class, DataSerializers.field_187192_b);
-    private static final DataParameter<String> field_184242_az = EntityDataManager.<String>func_187226_a(Entity.class, DataSerializers.field_187194_d);
-    private static final DataParameter<Boolean> field_184233_aA = EntityDataManager.<Boolean>func_187226_a(Entity.class, DataSerializers.field_187198_h);
-    private static final DataParameter<Boolean> field_184234_aB = EntityDataManager.<Boolean>func_187226_a(Entity.class, DataSerializers.field_187198_h);
-    private static final DataParameter<Boolean> field_189655_aD = EntityDataManager.<Boolean>func_187226_a(Entity.class, DataSerializers.field_187198_h);
-    public boolean field_70175_ag;
-    public int field_70176_ah;
-    public int field_70162_ai;
-    public int field_70164_aj;
+    // CraftBukkit start
+    private static final int CURRENT_LEVEL = 2;
+    //Spigot
+    public int activationType = 1;
+    public int activatedTick;
+
+    static boolean isLevelAtLeast(NBTTagCompound tag, int level) {
+        return tag.hasKey("Bukkit.updateLevel") && tag.getInteger("Bukkit.updateLevel") >= level;
+    }
+
+    protected CraftEntity bukkitEntity;
+
+    public CraftEntity getBukkitEntity() {
+        if (bukkitEntity == null) {
+            bukkitEntity = CraftEntity.getEntity(world.getServer(), this);
+        }
+        return bukkitEntity;
+    }
+    // CraftBukikt end
+
+    private static final Logger LOGGER = LogManager.getLogger();
+    private static final List<ItemStack> EMPTY_EQUIPMENT = Collections.<ItemStack>emptyList();
+    private static final AxisAlignedBB ZERO_AABB = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D);
+    private static double renderDistanceWeight = 1.0D;
+    private static int nextEntityID;
+    private int entityId;
+    public boolean preventEntitySpawning;
+    public final List<Entity> riddenByEntities;
+    protected int rideCooldown;
+    private Entity ridingEntity;
+    public boolean forceSpawn;
+    public World world;
+    public double prevPosX;
+    public double prevPosY;
+    public double prevPosZ;
+    public double posX;
+    public double posY;
+    public double posZ;
+    public double motionX;
+    public double motionY;
+    public double motionZ;
+    public float rotationYaw;
+    public float rotationPitch;
+    public float prevRotationYaw;
+    public float prevRotationPitch;
+    private AxisAlignedBB boundingBox;
+    public boolean onGround;
+    public boolean isCollidedHorizontally;
+    public boolean isCollidedVertically;
+    public boolean isCollided;
+    public boolean velocityChanged;
+    protected boolean isInWeb;
+    private boolean isOutsideBorder;
+    public boolean isDead;
+    public float width;
+    public float height;
+    public float prevDistanceWalkedModified;
+    public float distanceWalkedModified;
+    public float distanceWalkedOnStepModified;
+    public float fallDistance;
+    private int nextStepDistance;
+    public double lastTickPosX;
+    public double lastTickPosY;
+    public double lastTickPosZ;
+    public float stepHeight;
+    public boolean noClip;
+    public float entityCollisionReduction;
+    protected Random rand;
+    public int ticksExisted;
+    public int fire;
+    public boolean inWater;
+    public int hurtResistantTime;
+    protected boolean firstUpdate;
+    protected boolean isImmuneToFire;
+    public EntityDataManager dataManager;
+    protected static final DataParameter<Byte> FLAGS = EntityDataManager.<Byte>createKey(Entity.class, DataSerializers.BYTE);
+    private static final DataParameter<Integer> AIR = EntityDataManager.<Integer>createKey(Entity.class, DataSerializers.VARINT);
+    private static final DataParameter<String> CUSTOM_NAME = EntityDataManager.<String>createKey(Entity.class, DataSerializers.STRING);
+    private static final DataParameter<Boolean> CUSTOM_NAME_VISIBLE = EntityDataManager.<Boolean>createKey(Entity.class, DataSerializers.BOOLEAN);
+    private static final DataParameter<Boolean> SILENT = EntityDataManager.<Boolean>createKey(Entity.class, DataSerializers.BOOLEAN);
+    private static final DataParameter<Boolean> NO_GRAVITY = EntityDataManager.<Boolean>createKey(Entity.class, DataSerializers.BOOLEAN);
+    public boolean addedToChunk;
+    public int chunkCoordX;
+    public int chunkCoordY;
+    public int chunkCoordZ;
     @SideOnly(Side.CLIENT)
-    public long field_70118_ct;
+    public long serverPosX;
     @SideOnly(Side.CLIENT)
-    public long field_70117_cu;
+    public long serverPosY;
     @SideOnly(Side.CLIENT)
-    public long field_70116_cv;
-    public boolean field_70158_ak;
-    public boolean field_70160_al;
-    public int field_71088_bW;
-    protected boolean field_71087_bX;
-    protected int field_82153_h;
-    public int field_71093_bK;
-    protected BlockPos field_181016_an;
-    protected Vec3d field_181017_ao;
-    protected EnumFacing field_181018_ap;
-    private boolean field_83001_bt;
-    protected UUID field_96093_i;
-    protected String field_189513_ar;
-    private final CommandResultStats field_174837_as;
-    public boolean field_184238_ar;
-    private final Set<String> field_184236_aF;
-    private boolean field_184237_aG;
+    public long serverPosZ;
+    public boolean ignoreFrustumCheck;
+    public boolean isAirBorne;
+    public int timeUntilPortal;
+    protected boolean inPortal;
+    protected int portalCounter;
+    public int dimension;
+    protected BlockPos lastPortalPos;
+    protected Vec3d lastPortalVec;
+    protected EnumFacing teleportDirection;
+    private boolean invulnerable;
+    protected UUID entityUniqueID;
+    protected String cachedUniqueIdString;
+    private final CommandResultStats cmdResultStats;
+    public boolean glowing;
+    private final Set<String> tags;
+    private boolean isPositionDirty;
     private double[] field_191505_aI;
     private long field_191506_aJ;
+    public boolean valid; // CraftBukkit
+    public org.bukkit.projectiles.ProjectileSource projectileSource; // CraftBukkit - For projectiles only
+    public boolean forceExplosionKnockback; // CraftBukkit - SPIGOT-949
+    /**
+     * Setting this to true will prevent the world from calling {@link #onUpdate()} for this entity. 
+     */
+    public boolean updateBlocked;
 
-    public Entity(World p_i1582_1_)
+    public Entity(World worldIn)
     {
-        this.field_145783_c = field_70152_a++;
-        this.field_184244_h = Lists.<Entity>newArrayList();
-        this.field_70121_D = field_174836_a;
-        this.field_70130_N = 0.6F;
-        this.field_70131_O = 1.8F;
-        this.field_70150_b = 1;
-        this.field_70146_Z = new Random();
-        this.field_190534_ay = -this.func_190531_bD();
-        this.field_70148_d = true;
-        this.field_96093_i = MathHelper.func_180182_a(this.field_70146_Z);
-        this.field_189513_ar = this.field_96093_i.toString();
-        this.field_174837_as = new CommandResultStats();
-        this.field_184236_aF = Sets.<String>newHashSet();
+        this.entityId = nextEntityID++;
+        this.riddenByEntities = Lists.<Entity>newArrayList();
+        this.boundingBox = ZERO_AABB;
+        this.width = 0.6F;
+        this.height = 1.8F;
+        this.nextStepDistance = 1;
+        this.rand = new Random();
+        this.fire = -this.getFireImmuneTicks();
+        this.firstUpdate = true;
+        this.entityUniqueID = MathHelper.getRandomUUID(this.rand);
+        this.cachedUniqueIdString = this.entityUniqueID.toString();
+        this.cmdResultStats = new CommandResultStats();
+        this.tags = Sets.<String>newHashSet();
         this.field_191505_aI = new double[] {0.0D, 0.0D, 0.0D};
-        this.field_70170_p = p_i1582_1_;
-        this.func_70107_b(0.0D, 0.0D, 0.0D);
+        this.world = worldIn;
+        this.setPosition(0.0D, 0.0D, 0.0D);
 
-        if (p_i1582_1_ != null)
+        if (worldIn != null)
         {
-            this.field_71093_bK = p_i1582_1_.field_73011_w.func_186058_p().func_186068_a();
+            this.dimension = worldIn.provider.getDimension();
         }
 
-        this.field_70180_af = new EntityDataManager(this);
-        this.field_70180_af.func_187214_a(field_184240_ax, Byte.valueOf((byte)0));
-        this.field_70180_af.func_187214_a(field_184241_ay, Integer.valueOf(300));
-        this.field_70180_af.func_187214_a(field_184233_aA, Boolean.valueOf(false));
-        this.field_70180_af.func_187214_a(field_184242_az, "");
-        this.field_70180_af.func_187214_a(field_184234_aB, Boolean.valueOf(false));
-        this.field_70180_af.func_187214_a(field_189655_aD, Boolean.valueOf(false));
-        this.func_70088_a();
+        this.dataManager = new EntityDataManager(this);
+        this.dataManager.register(FLAGS, Byte.valueOf((byte)0));
+        this.dataManager.register(AIR, Integer.valueOf(300));
+        this.dataManager.register(CUSTOM_NAME_VISIBLE, Boolean.valueOf(false));
+        this.dataManager.register(CUSTOM_NAME, "");
+        this.dataManager.register(SILENT, Boolean.valueOf(false));
+        this.dataManager.register(NO_GRAVITY, Boolean.valueOf(false));
+        this.entityInit();
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EntityConstructing(this));
+        capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this);
     }
 
-    public int func_145782_y()
+    /** Forge: Used to store custom data for each entity. */
+    private NBTTagCompound customEntityData;
+    public boolean captureDrops = false;
+    public java.util.ArrayList<EntityItem> capturedDrops = new java.util.ArrayList<EntityItem>();
+    private net.minecraftforge.common.capabilities.CapabilityDispatcher capabilities;
+
+    public int getEntityId()
     {
-        return this.field_145783_c;
+        return this.entityId;
     }
 
-    public void func_145769_d(int p_145769_1_)
+    public void setEntityId(int id)
     {
-        this.field_145783_c = p_145769_1_;
+        this.entityId = id;
     }
 
-    public Set<String> func_184216_O()
+    public Set<String> getTags()
     {
-        return this.field_184236_aF;
+        return this.tags;
     }
 
-    public boolean func_184211_a(String p_184211_1_)
+    public boolean addTag(String tag)
     {
-        if (this.field_184236_aF.size() >= 1024)
+        if (this.tags.size() >= 1024)
         {
             return false;
         }
         else
         {
-            this.field_184236_aF.add(p_184211_1_);
+            this.tags.add(tag);
             return true;
         }
     }
 
-    public boolean func_184197_b(String p_184197_1_)
+    public boolean removeTag(String tag)
     {
-        return this.field_184236_aF.remove(p_184197_1_);
+        return this.tags.remove(tag);
     }
 
-    public void func_174812_G()
+    public void onKillCommand()
     {
-        this.func_70106_y();
+        this.setDead();
     }
 
-    protected abstract void func_70088_a();
+    protected abstract void entityInit();
 
-    public EntityDataManager func_184212_Q()
+    public EntityDataManager getDataManager()
     {
-        return this.field_70180_af;
+        return this.dataManager;
     }
 
     public boolean equals(Object p_equals_1_)
     {
-        return p_equals_1_ instanceof Entity ? ((Entity)p_equals_1_).field_145783_c == this.field_145783_c : false;
+        return p_equals_1_ instanceof Entity ? ((Entity)p_equals_1_).entityId == this.entityId : false;
     }
 
     public int hashCode()
     {
-        return this.field_145783_c;
+        return this.entityId;
     }
 
     @SideOnly(Side.CLIENT)
-    protected void func_70065_x()
+    protected void preparePlayerToSpawn()
     {
-        if (this.field_70170_p != null)
+        if (this.world != null)
         {
-            while (this.field_70163_u > 0.0D && this.field_70163_u < 256.0D)
+            while (this.posY > 0.0D && this.posY < 256.0D)
             {
-                this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+                this.setPosition(this.posX, this.posY, this.posZ);
 
-                if (this.field_70170_p.func_184144_a(this, this.func_174813_aQ()).isEmpty())
+                if (this.world.getCollisionBoxes(this, this.getEntityBoundingBox()).isEmpty())
                 {
                     break;
                 }
 
-                ++this.field_70163_u;
+                ++this.posY;
             }
 
-            this.field_70159_w = 0.0D;
-            this.field_70181_x = 0.0D;
-            this.field_70179_y = 0.0D;
-            this.field_70125_A = 0.0F;
+            this.motionX = 0.0D;
+            this.motionY = 0.0D;
+            this.motionZ = 0.0D;
+            this.rotationPitch = 0.0F;
         }
     }
 
-    public void func_70106_y()
+    public void setDead()
     {
-        this.field_70128_L = true;
+        this.isDead = true;
     }
 
-    public void func_184174_b(boolean p_184174_1_)
+    public void setDropItemsWhenDead(boolean dropWhenDead)
     {
     }
 
-    public void func_70105_a(float p_70105_1_, float p_70105_2_)
+    public void setSize(float width, float height)
     {
-        if (p_70105_1_ != this.field_70130_N || p_70105_2_ != this.field_70131_O)
+        if (width != this.width || height != this.height)
         {
-            float f = this.field_70130_N;
-            this.field_70130_N = p_70105_1_;
-            this.field_70131_O = p_70105_2_;
+            float f = this.width;
+            this.width = width;
+            this.height = height;
 
-            if (this.field_70130_N < f)
+            if (this.width < f)
             {
-                double d0 = (double)p_70105_1_ / 2.0D;
-                this.func_174826_a(new AxisAlignedBB(this.field_70165_t - d0, this.field_70163_u, this.field_70161_v - d0, this.field_70165_t + d0, this.field_70163_u + (double)this.field_70131_O, this.field_70161_v + d0));
+                double d0 = (double)width / 2.0D;
+                this.setEntityBoundingBox(new AxisAlignedBB(this.posX - d0, this.posY, this.posZ - d0, this.posX + d0, this.posY + (double)this.height, this.posZ + d0));
                 return;
             }
 
-            AxisAlignedBB axisalignedbb = this.func_174813_aQ();
-            this.func_174826_a(new AxisAlignedBB(axisalignedbb.field_72340_a, axisalignedbb.field_72338_b, axisalignedbb.field_72339_c, axisalignedbb.field_72340_a + (double)this.field_70130_N, axisalignedbb.field_72338_b + (double)this.field_70131_O, axisalignedbb.field_72339_c + (double)this.field_70130_N));
+            AxisAlignedBB axisalignedbb = this.getEntityBoundingBox();
+            this.setEntityBoundingBox(new AxisAlignedBB(axisalignedbb.minX, axisalignedbb.minY, axisalignedbb.minZ, axisalignedbb.minX + (double)this.width, axisalignedbb.minY + (double)this.height, axisalignedbb.minZ + (double)this.width));
 
-            if (this.field_70130_N > f && !this.field_70148_d && !this.field_70170_p.field_72995_K)
+            if (this.width > f && !this.firstUpdate && !this.world.isRemote)
             {
-                this.func_70091_d(MoverType.SELF, (double)(f - this.field_70130_N), 0.0D, (double)(f - this.field_70130_N));
+                this.move(MoverType.SELF, (double)(f - this.width), 0.0D, (double)(f - this.width));
             }
         }
     }
 
-    protected void func_70101_b(float p_70101_1_, float p_70101_2_)
+    protected void setRotation(float yaw, float pitch)
     {
-        this.field_70177_z = p_70101_1_ % 360.0F;
-        this.field_70125_A = p_70101_2_ % 360.0F;
+        // CraftBukkit start - yaw was sometimes set to NaN, so we need to set it back to 0
+        if (Float.isNaN(yaw)) {
+            yaw = 0;
+        }
+
+        if (yaw == Float.POSITIVE_INFINITY || yaw == Float.NEGATIVE_INFINITY) {
+            if (this instanceof EntityPlayerMP) {
+                this.world.getServer().getLogger().warning(this.getName() + " was caught trying to crash the server with an invalid yaw");
+                ((CraftPlayer) this.getBukkitEntity()).kickPlayer("Nope");
+            }
+            yaw = 0;
+        }
+
+        // pitch was sometimes set to NaN, so we need to set it back to 0
+        if (Float.isNaN(pitch)) {
+            pitch = 0;
+        }
+
+        if (pitch == Float.POSITIVE_INFINITY || pitch == Float.NEGATIVE_INFINITY) {
+            if (this instanceof EntityPlayerMP) {
+                this.world.getServer().getLogger().warning(this.getName() + " was caught trying to crash the server with an invalid pitch");
+                ((CraftPlayer) this.getBukkitEntity()).kickPlayer("Nope");
+            }
+            pitch = 0;
+        }
+        // CraftBukkit end
+
+        this.rotationYaw = yaw % 360.0F;
+        this.rotationPitch = pitch % 360.0F;
     }
 
-    public void func_70107_b(double p_70107_1_, double p_70107_3_, double p_70107_5_)
+    public void setPosition(double x, double y, double z)
     {
-        this.field_70165_t = p_70107_1_;
-        this.field_70163_u = p_70107_3_;
-        this.field_70161_v = p_70107_5_;
-        float f = this.field_70130_N / 2.0F;
-        float f1 = this.field_70131_O;
-        this.func_174826_a(new AxisAlignedBB(p_70107_1_ - (double)f, p_70107_3_, p_70107_5_ - (double)f, p_70107_1_ + (double)f, p_70107_3_ + (double)f1, p_70107_5_ + (double)f));
+        this.posX = x;
+        this.posY = y;
+        this.posZ = z;
+        float f = this.width / 2.0F;
+        float f1 = this.height;
+        this.setEntityBoundingBox(new AxisAlignedBB(x - (double)f, y, z - (double)f, x + (double)f, y + (double)f1, z + (double)f));
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70082_c(float p_70082_1_, float p_70082_2_)
+    public void turn(float yaw, float pitch)
     {
-        float f = this.field_70125_A;
-        float f1 = this.field_70177_z;
-        this.field_70177_z = (float)((double)this.field_70177_z + (double)p_70082_1_ * 0.15D);
-        this.field_70125_A = (float)((double)this.field_70125_A - (double)p_70082_2_ * 0.15D);
-        this.field_70125_A = MathHelper.func_76131_a(this.field_70125_A, -90.0F, 90.0F);
-        this.field_70127_C += this.field_70125_A - f;
-        this.field_70126_B += this.field_70177_z - f1;
+        float f = this.rotationPitch;
+        float f1 = this.rotationYaw;
+        this.rotationYaw = (float)((double)this.rotationYaw + (double)yaw * 0.15D);
+        this.rotationPitch = (float)((double)this.rotationPitch - (double)pitch * 0.15D);
+        this.rotationPitch = MathHelper.clamp(this.rotationPitch, -90.0F, 90.0F);
+        this.prevRotationPitch += this.rotationPitch - f;
+        this.prevRotationYaw += this.rotationYaw - f1;
 
-        if (this.field_184239_as != null)
+        if (this.ridingEntity != null)
         {
-            this.field_184239_as.func_184190_l(this);
+            this.ridingEntity.applyOrientationToEntity(this);
         }
     }
 
-    public void func_70071_h_()
+    public void onUpdate()
     {
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            this.func_70052_a(6, this.func_184202_aL());
+            this.setFlag(6, this.isGlowing());
         }
 
-        this.func_70030_z();
+        this.onEntityUpdate();
     }
 
-    public void func_70030_z()
+    public void onEntityUpdate()
     {
-        this.field_70170_p.field_72984_F.func_76320_a("entityBaseTick");
+        this.world.theProfiler.startSection("entityBaseTick");
 
-        if (this.func_184218_aH() && this.func_184187_bx().field_70128_L)
+        if (this.isRiding() && this.getRidingEntity().isDead)
         {
-            this.func_184210_p();
+            this.dismountRidingEntity();
         }
 
-        if (this.field_184245_j > 0)
+        if (this.rideCooldown > 0)
         {
-            --this.field_184245_j;
+            --this.rideCooldown;
         }
 
-        this.field_70141_P = this.field_70140_Q;
-        this.field_70169_q = this.field_70165_t;
-        this.field_70167_r = this.field_70163_u;
-        this.field_70166_s = this.field_70161_v;
-        this.field_70127_C = this.field_70125_A;
-        this.field_70126_B = this.field_70177_z;
+        this.prevDistanceWalkedModified = this.distanceWalkedModified;
+        this.prevPosX = this.posX;
+        this.prevPosY = this.posY;
+        this.prevPosZ = this.posZ;
+        this.prevRotationPitch = this.rotationPitch;
+        this.prevRotationYaw = this.rotationYaw;
 
-        if (!this.field_70170_p.field_72995_K && this.field_70170_p instanceof WorldServer)
+        if (!this.world.isRemote && this.world instanceof WorldServer)
         {
-            this.field_70170_p.field_72984_F.func_76320_a("portal");
+            this.world.theProfiler.startSection("portal");
 
-            if (this.field_71087_bX)
+            if (this.inPortal)
             {
-                MinecraftServer minecraftserver = this.field_70170_p.func_73046_m();
+                MinecraftServer minecraftserver = this.world.getMinecraftServer();
 
-                if (minecraftserver.func_71255_r())
+                if (minecraftserver.getAllowNether())
                 {
-                    if (!this.func_184218_aH())
+                    if (!this.isRiding())
                     {
-                        int i = this.func_82145_z();
+                        int i = this.getMaxInPortalTime();
 
-                        if (this.field_82153_h++ >= i)
+                        if (this.portalCounter++ >= i)
                         {
-                            this.field_82153_h = i;
-                            this.field_71088_bW = this.func_82147_ab();
+                            this.portalCounter = i;
+                            this.timeUntilPortal = this.getPortalCooldown();
                             int j;
 
-                            if (this.field_70170_p.field_73011_w.func_186058_p().func_186068_a() == -1)
+                            if (this.world.provider.getDimensionType().getId() == -1)
                             {
                                 j = 0;
                             }
@@ -416,149 +501,167 @@
                                 j = -1;
                             }
 
-                            this.func_184204_a(j);
+                            this.changeDimension(j);
                         }
                     }
 
-                    this.field_71087_bX = false;
+                    this.inPortal = false;
                 }
             }
             else
             {
-                if (this.field_82153_h > 0)
+                if (this.portalCounter > 0)
                 {
-                    this.field_82153_h -= 4;
+                    this.portalCounter -= 4;
                 }
 
-                if (this.field_82153_h < 0)
+                if (this.portalCounter < 0)
                 {
-                    this.field_82153_h = 0;
+                    this.portalCounter = 0;
                 }
             }
 
-            this.func_184173_H();
-            this.field_70170_p.field_72984_F.func_76319_b();
+            this.decrementTimeUntilPortal();
+            this.world.theProfiler.endSection();
         }
 
-        this.func_174830_Y();
-        this.func_70072_I();
+        this.spawnRunningParticles();
+        this.handleWaterMovement();
 
-        if (this.field_70170_p.field_72995_K)
+        if (this.world.isRemote)
         {
-            this.func_70066_B();
+            this.extinguish();
         }
-        else if (this.field_190534_ay > 0)
+        else if (this.fire > 0)
         {
-            if (this.field_70178_ae)
+            if (this.isImmuneToFire)
             {
-                this.field_190534_ay -= 4;
+                this.fire -= 4;
 
-                if (this.field_190534_ay < 0)
+                if (this.fire < 0)
                 {
-                    this.func_70066_B();
+                    this.extinguish();
                 }
             }
             else
             {
-                if (this.field_190534_ay % 20 == 0)
+                if (this.fire % 20 == 0)
                 {
-                    this.func_70097_a(DamageSource.field_76370_b, 1.0F);
+                    this.attackEntityFrom(DamageSource.ON_FIRE, 1.0F);
                 }
 
-                --this.field_190534_ay;
+                --this.fire;
             }
         }
 
-        if (this.func_180799_ab())
+        if (this.isInLava())
         {
-            this.func_70044_A();
-            this.field_70143_R *= 0.5F;
+            this.setOnFireFromLava();
+            this.fallDistance *= 0.5F;
         }
 
-        if (this.field_70163_u < -64.0D)
+        if (this.posY < -64.0D)
         {
-            this.func_70076_C();
+            this.kill();
         }
 
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            this.func_70052_a(0, this.field_190534_ay > 0);
+            this.setFlag(0, this.fire > 0);
         }
 
-        this.field_70148_d = false;
-        this.field_70170_p.field_72984_F.func_76319_b();
+        this.firstUpdate = false;
+        this.world.theProfiler.endSection();
     }
 
-    protected void func_184173_H()
+    protected void decrementTimeUntilPortal()
     {
-        if (this.field_71088_bW > 0)
+        if (this.timeUntilPortal > 0)
         {
-            --this.field_71088_bW;
+            --this.timeUntilPortal;
         }
     }
 
-    public int func_82145_z()
+    public int getMaxInPortalTime()
     {
         return 1;
     }
 
-    protected void func_70044_A()
+    protected void setOnFireFromLava()
     {
-        if (!this.field_70178_ae)
+        if (!this.isImmuneToFire)
         {
-            this.func_70097_a(DamageSource.field_76371_c, 4.0F);
-            this.func_70015_d(15);
+            // CraftBukkit start - Fallen in lava TODO: this event spams!
+            if (this instanceof net.minecraft.entity.EntityLivingBase) {
+                if (fire <= 0) {
+                    // not on fire yet
+                    // TODO: shouldn't be sending null for the block
+                    org.bukkit.block.Block damager = null; // ((WorldServer) this.l).getWorld().getBlockAt(i, j, k);
+                    org.bukkit.entity.Entity damagee = this.getBukkitEntity();
+                    EntityCombustEvent combustEvent = new org.bukkit.event.entity.EntityCombustByBlockEvent(damager, damagee, 15);
+                    this.world.getServer().getPluginManager().callEvent(combustEvent);
+
+                    if (!combustEvent.isCancelled()) {
+                        this.setFire(combustEvent.getDuration());
+                    }
+                } else {
+                    // This will be called every single tick the entity is in lava, so don't throw an event
+                    this.setFire(15);
+                }
+                return;
+            }
+            // CraftBukkit end - we also don't throw an event unless the object in lava is living, to save on some event calls
         }
     }
 
-    public void func_70015_d(int p_70015_1_)
+    public void setFire(int seconds)
     {
-        int i = p_70015_1_ * 20;
+        int i = seconds * 20;
 
         if (this instanceof EntityLivingBase)
         {
-            i = EnchantmentProtection.func_92093_a((EntityLivingBase)this, i);
+            i = EnchantmentProtection.getFireTimeForEntity((EntityLivingBase)this, i);
         }
 
-        if (this.field_190534_ay < i)
+        if (this.fire < i)
         {
-            this.field_190534_ay = i;
+            this.fire = i;
         }
     }
 
-    public void func_70066_B()
+    public void extinguish()
     {
-        this.field_190534_ay = 0;
+        this.fire = 0;
     }
 
-    protected void func_70076_C()
+    protected void kill()
     {
-        this.func_70106_y();
+        this.setDead();
     }
 
-    public boolean func_70038_c(double p_70038_1_, double p_70038_3_, double p_70038_5_)
+    public boolean isOffsetPositionInLiquid(double x, double y, double z)
     {
-        AxisAlignedBB axisalignedbb = this.func_174813_aQ().func_72317_d(p_70038_1_, p_70038_3_, p_70038_5_);
-        return this.func_174809_b(axisalignedbb);
+        AxisAlignedBB axisalignedbb = this.getEntityBoundingBox().offset(x, y, z);
+        return this.isLiquidPresentInAABB(axisalignedbb);
     }
 
-    private boolean func_174809_b(AxisAlignedBB p_174809_1_)
+    private boolean isLiquidPresentInAABB(AxisAlignedBB bb)
     {
-        return this.field_70170_p.func_184144_a(this, p_174809_1_).isEmpty() && !this.field_70170_p.func_72953_d(p_174809_1_);
+        return this.world.getCollisionBoxes(this, bb).isEmpty() && !this.world.containsAnyLiquid(bb);
     }
 
-    public void func_70091_d(MoverType p_70091_1_, double p_70091_2_, double p_70091_4_, double p_70091_6_)
+    public void move(MoverType type, double x, double y, double z)
     {
-        if (this.field_70145_X)
+        if (this.noClip)
         {
-            this.func_174826_a(this.func_174813_aQ().func_72317_d(p_70091_2_, p_70091_4_, p_70091_6_));
-            this.func_174829_m();
+            this.setEntityBoundingBox(this.getEntityBoundingBox().offset(x, y, z));
+            this.resetPositionToBB();
         }
         else
         {
-            if (p_70091_1_ == MoverType.PISTON)
+            if (type == MoverType.PISTON)
             {
-                long i = this.field_70170_p.func_82737_E();
+                long i = this.world.getTotalWorldTime();
 
                 if (i != this.field_191506_aJ)
                 {
@@ -566,302 +669,302 @@
                     this.field_191506_aJ = i;
                 }
 
-                if (p_70091_2_ != 0.0D)
+                if (x != 0.0D)
                 {
                     int j = EnumFacing.Axis.X.ordinal();
-                    double d0 = MathHelper.func_151237_a(p_70091_2_ + this.field_191505_aI[j], -0.51D, 0.51D);
-                    p_70091_2_ = d0 - this.field_191505_aI[j];
+                    double d0 = MathHelper.clamp(x + this.field_191505_aI[j], -0.51D, 0.51D);
+                    x = d0 - this.field_191505_aI[j];
                     this.field_191505_aI[j] = d0;
 
-                    if (Math.abs(p_70091_2_) <= 9.999999747378752E-6D)
+                    if (Math.abs(x) <= 9.999999747378752E-6D)
                     {
                         return;
                     }
                 }
-                else if (p_70091_4_ != 0.0D)
+                else if (y != 0.0D)
                 {
                     int l4 = EnumFacing.Axis.Y.ordinal();
-                    double d12 = MathHelper.func_151237_a(p_70091_4_ + this.field_191505_aI[l4], -0.51D, 0.51D);
-                    p_70091_4_ = d12 - this.field_191505_aI[l4];
+                    double d12 = MathHelper.clamp(y + this.field_191505_aI[l4], -0.51D, 0.51D);
+                    y = d12 - this.field_191505_aI[l4];
                     this.field_191505_aI[l4] = d12;
 
-                    if (Math.abs(p_70091_4_) <= 9.999999747378752E-6D)
+                    if (Math.abs(y) <= 9.999999747378752E-6D)
                     {
                         return;
                     }
                 }
                 else
                 {
-                    if (p_70091_6_ == 0.0D)
+                    if (z == 0.0D)
                     {
                         return;
                     }
 
                     int i5 = EnumFacing.Axis.Z.ordinal();
-                    double d13 = MathHelper.func_151237_a(p_70091_6_ + this.field_191505_aI[i5], -0.51D, 0.51D);
-                    p_70091_6_ = d13 - this.field_191505_aI[i5];
+                    double d13 = MathHelper.clamp(z + this.field_191505_aI[i5], -0.51D, 0.51D);
+                    z = d13 - this.field_191505_aI[i5];
                     this.field_191505_aI[i5] = d13;
 
-                    if (Math.abs(p_70091_6_) <= 9.999999747378752E-6D)
+                    if (Math.abs(z) <= 9.999999747378752E-6D)
                     {
                         return;
                     }
                 }
             }
 
-            this.field_70170_p.field_72984_F.func_76320_a("move");
-            double d10 = this.field_70165_t;
-            double d11 = this.field_70163_u;
-            double d1 = this.field_70161_v;
+            this.world.theProfiler.startSection("move");
+            double d10 = this.posX;
+            double d11 = this.posY;
+            double d1 = this.posZ;
 
-            if (this.field_70134_J)
+            if (this.isInWeb)
             {
-                this.field_70134_J = false;
-                p_70091_2_ *= 0.25D;
-                p_70091_4_ *= 0.05000000074505806D;
-                p_70091_6_ *= 0.25D;
-                this.field_70159_w = 0.0D;
-                this.field_70181_x = 0.0D;
-                this.field_70179_y = 0.0D;
+                this.isInWeb = false;
+                x *= 0.25D;
+                y *= 0.05000000074505806D;
+                z *= 0.25D;
+                this.motionX = 0.0D;
+                this.motionY = 0.0D;
+                this.motionZ = 0.0D;
             }
 
-            double d2 = p_70091_2_;
-            double d3 = p_70091_4_;
-            double d4 = p_70091_6_;
+            double d2 = x;
+            double d3 = y;
+            double d4 = z;
 
-            if ((p_70091_1_ == MoverType.SELF || p_70091_1_ == MoverType.PLAYER) && this.field_70122_E && this.func_70093_af() && this instanceof EntityPlayer)
+            if ((type == MoverType.SELF || type == MoverType.PLAYER) && this.onGround && this.isSneaking() && this instanceof EntityPlayer)
             {
-                for (double d5 = 0.05D; p_70091_2_ != 0.0D && this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72317_d(p_70091_2_, (double)(-this.field_70138_W), 0.0D)).isEmpty(); d2 = p_70091_2_)
+                for (double d5 = 0.05D; x != 0.0D && this.world.getCollisionBoxes(this, this.getEntityBoundingBox().offset(x, (double)(-this.stepHeight), 0.0D)).isEmpty(); d2 = x)
                 {
-                    if (p_70091_2_ < 0.05D && p_70091_2_ >= -0.05D)
+                    if (x < 0.05D && x >= -0.05D)
                     {
-                        p_70091_2_ = 0.0D;
+                        x = 0.0D;
                     }
-                    else if (p_70091_2_ > 0.0D)
+                    else if (x > 0.0D)
                     {
-                        p_70091_2_ -= 0.05D;
+                        x -= 0.05D;
                     }
                     else
                     {
-                        p_70091_2_ += 0.05D;
+                        x += 0.05D;
                     }
                 }
 
-                for (; p_70091_6_ != 0.0D && this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72317_d(0.0D, (double)(-this.field_70138_W), p_70091_6_)).isEmpty(); d4 = p_70091_6_)
+                for (; z != 0.0D && this.world.getCollisionBoxes(this, this.getEntityBoundingBox().offset(0.0D, (double)(-this.stepHeight), z)).isEmpty(); d4 = z)
                 {
-                    if (p_70091_6_ < 0.05D && p_70091_6_ >= -0.05D)
+                    if (z < 0.05D && z >= -0.05D)
                     {
-                        p_70091_6_ = 0.0D;
+                        z = 0.0D;
                     }
-                    else if (p_70091_6_ > 0.0D)
+                    else if (z > 0.0D)
                     {
-                        p_70091_6_ -= 0.05D;
+                        z -= 0.05D;
                     }
                     else
                     {
-                        p_70091_6_ += 0.05D;
+                        z += 0.05D;
                     }
                 }
 
-                for (; p_70091_2_ != 0.0D && p_70091_6_ != 0.0D && this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72317_d(p_70091_2_, (double)(-this.field_70138_W), p_70091_6_)).isEmpty(); d4 = p_70091_6_)
+                for (; x != 0.0D && z != 0.0D && this.world.getCollisionBoxes(this, this.getEntityBoundingBox().offset(x, (double)(-this.stepHeight), z)).isEmpty(); d4 = z)
                 {
-                    if (p_70091_2_ < 0.05D && p_70091_2_ >= -0.05D)
+                    if (x < 0.05D && x >= -0.05D)
                     {
-                        p_70091_2_ = 0.0D;
+                        x = 0.0D;
                     }
-                    else if (p_70091_2_ > 0.0D)
+                    else if (x > 0.0D)
                     {
-                        p_70091_2_ -= 0.05D;
+                        x -= 0.05D;
                     }
                     else
                     {
-                        p_70091_2_ += 0.05D;
+                        x += 0.05D;
                     }
 
-                    d2 = p_70091_2_;
+                    d2 = x;
 
-                    if (p_70091_6_ < 0.05D && p_70091_6_ >= -0.05D)
+                    if (z < 0.05D && z >= -0.05D)
                     {
-                        p_70091_6_ = 0.0D;
+                        z = 0.0D;
                     }
-                    else if (p_70091_6_ > 0.0D)
+                    else if (z > 0.0D)
                     {
-                        p_70091_6_ -= 0.05D;
+                        z -= 0.05D;
                     }
                     else
                     {
-                        p_70091_6_ += 0.05D;
+                        z += 0.05D;
                     }
                 }
             }
 
-            List<AxisAlignedBB> list1 = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(p_70091_2_, p_70091_4_, p_70091_6_));
-            AxisAlignedBB axisalignedbb = this.func_174813_aQ();
+            List<AxisAlignedBB> list1 = this.world.getCollisionBoxes(this, this.getEntityBoundingBox().addCoord(x, y, z));
+            AxisAlignedBB axisalignedbb = this.getEntityBoundingBox();
 
-            if (p_70091_4_ != 0.0D)
+            if (y != 0.0D)
             {
                 int k = 0;
 
                 for (int l = list1.size(); k < l; ++k)
                 {
-                    p_70091_4_ = ((AxisAlignedBB)list1.get(k)).func_72323_b(this.func_174813_aQ(), p_70091_4_);
+                    y = ((AxisAlignedBB)list1.get(k)).calculateYOffset(this.getEntityBoundingBox(), y);
                 }
 
-                this.func_174826_a(this.func_174813_aQ().func_72317_d(0.0D, p_70091_4_, 0.0D));
+                this.setEntityBoundingBox(this.getEntityBoundingBox().offset(0.0D, y, 0.0D));
             }
 
-            if (p_70091_2_ != 0.0D)
+            if (x != 0.0D)
             {
                 int j5 = 0;
 
                 for (int l5 = list1.size(); j5 < l5; ++j5)
                 {
-                    p_70091_2_ = ((AxisAlignedBB)list1.get(j5)).func_72316_a(this.func_174813_aQ(), p_70091_2_);
+                    x = ((AxisAlignedBB)list1.get(j5)).calculateXOffset(this.getEntityBoundingBox(), x);
                 }
 
-                if (p_70091_2_ != 0.0D)
+                if (x != 0.0D)
                 {
-                    this.func_174826_a(this.func_174813_aQ().func_72317_d(p_70091_2_, 0.0D, 0.0D));
+                    this.setEntityBoundingBox(this.getEntityBoundingBox().offset(x, 0.0D, 0.0D));
                 }
             }
 
-            if (p_70091_6_ != 0.0D)
+            if (z != 0.0D)
             {
                 int k5 = 0;
 
                 for (int i6 = list1.size(); k5 < i6; ++k5)
                 {
-                    p_70091_6_ = ((AxisAlignedBB)list1.get(k5)).func_72322_c(this.func_174813_aQ(), p_70091_6_);
+                    z = ((AxisAlignedBB)list1.get(k5)).calculateZOffset(this.getEntityBoundingBox(), z);
                 }
 
-                if (p_70091_6_ != 0.0D)
+                if (z != 0.0D)
                 {
-                    this.func_174826_a(this.func_174813_aQ().func_72317_d(0.0D, 0.0D, p_70091_6_));
+                    this.setEntityBoundingBox(this.getEntityBoundingBox().offset(0.0D, 0.0D, z));
                 }
             }
 
-            boolean flag = this.field_70122_E || d3 != p_70091_4_ && d3 < 0.0D;
+            boolean flag = this.onGround || d3 != y && d3 < 0.0D;
 
-            if (this.field_70138_W > 0.0F && flag && (d2 != p_70091_2_ || d4 != p_70091_6_))
+            if (this.stepHeight > 0.0F && flag && (d2 != x || d4 != z))
             {
-                double d14 = p_70091_2_;
-                double d6 = p_70091_4_;
-                double d7 = p_70091_6_;
-                AxisAlignedBB axisalignedbb1 = this.func_174813_aQ();
-                this.func_174826_a(axisalignedbb);
-                p_70091_4_ = (double)this.field_70138_W;
-                List<AxisAlignedBB> list = this.field_70170_p.func_184144_a(this, this.func_174813_aQ().func_72321_a(d2, p_70091_4_, d4));
-                AxisAlignedBB axisalignedbb2 = this.func_174813_aQ();
-                AxisAlignedBB axisalignedbb3 = axisalignedbb2.func_72321_a(d2, 0.0D, d4);
-                double d8 = p_70091_4_;
+                double d14 = x;
+                double d6 = y;
+                double d7 = z;
+                AxisAlignedBB axisalignedbb1 = this.getEntityBoundingBox();
+                this.setEntityBoundingBox(axisalignedbb);
+                y = (double)this.stepHeight;
+                List<AxisAlignedBB> list = this.world.getCollisionBoxes(this, this.getEntityBoundingBox().addCoord(d2, y, d4));
+                AxisAlignedBB axisalignedbb2 = this.getEntityBoundingBox();
+                AxisAlignedBB axisalignedbb3 = axisalignedbb2.addCoord(d2, 0.0D, d4);
+                double d8 = y;
                 int j1 = 0;
 
                 for (int k1 = list.size(); j1 < k1; ++j1)
                 {
-                    d8 = ((AxisAlignedBB)list.get(j1)).func_72323_b(axisalignedbb3, d8);
+                    d8 = ((AxisAlignedBB)list.get(j1)).calculateYOffset(axisalignedbb3, d8);
                 }
 
-                axisalignedbb2 = axisalignedbb2.func_72317_d(0.0D, d8, 0.0D);
+                axisalignedbb2 = axisalignedbb2.offset(0.0D, d8, 0.0D);
                 double d18 = d2;
                 int l1 = 0;
 
                 for (int i2 = list.size(); l1 < i2; ++l1)
                 {
-                    d18 = ((AxisAlignedBB)list.get(l1)).func_72316_a(axisalignedbb2, d18);
+                    d18 = ((AxisAlignedBB)list.get(l1)).calculateXOffset(axisalignedbb2, d18);
                 }
 
-                axisalignedbb2 = axisalignedbb2.func_72317_d(d18, 0.0D, 0.0D);
+                axisalignedbb2 = axisalignedbb2.offset(d18, 0.0D, 0.0D);
                 double d19 = d4;
                 int j2 = 0;
 
                 for (int k2 = list.size(); j2 < k2; ++j2)
                 {
-                    d19 = ((AxisAlignedBB)list.get(j2)).func_72322_c(axisalignedbb2, d19);
+                    d19 = ((AxisAlignedBB)list.get(j2)).calculateZOffset(axisalignedbb2, d19);
                 }
 
-                axisalignedbb2 = axisalignedbb2.func_72317_d(0.0D, 0.0D, d19);
-                AxisAlignedBB axisalignedbb4 = this.func_174813_aQ();
-                double d20 = p_70091_4_;
+                axisalignedbb2 = axisalignedbb2.offset(0.0D, 0.0D, d19);
+                AxisAlignedBB axisalignedbb4 = this.getEntityBoundingBox();
+                double d20 = y;
                 int l2 = 0;
 
                 for (int i3 = list.size(); l2 < i3; ++l2)
                 {
-                    d20 = ((AxisAlignedBB)list.get(l2)).func_72323_b(axisalignedbb4, d20);
+                    d20 = ((AxisAlignedBB)list.get(l2)).calculateYOffset(axisalignedbb4, d20);
                 }
 
-                axisalignedbb4 = axisalignedbb4.func_72317_d(0.0D, d20, 0.0D);
+                axisalignedbb4 = axisalignedbb4.offset(0.0D, d20, 0.0D);
                 double d21 = d2;
                 int j3 = 0;
 
                 for (int k3 = list.size(); j3 < k3; ++j3)
                 {
-                    d21 = ((AxisAlignedBB)list.get(j3)).func_72316_a(axisalignedbb4, d21);
+                    d21 = ((AxisAlignedBB)list.get(j3)).calculateXOffset(axisalignedbb4, d21);
                 }
 
-                axisalignedbb4 = axisalignedbb4.func_72317_d(d21, 0.0D, 0.0D);
+                axisalignedbb4 = axisalignedbb4.offset(d21, 0.0D, 0.0D);
                 double d22 = d4;
                 int l3 = 0;
 
                 for (int i4 = list.size(); l3 < i4; ++l3)
                 {
-                    d22 = ((AxisAlignedBB)list.get(l3)).func_72322_c(axisalignedbb4, d22);
+                    d22 = ((AxisAlignedBB)list.get(l3)).calculateZOffset(axisalignedbb4, d22);
                 }
 
-                axisalignedbb4 = axisalignedbb4.func_72317_d(0.0D, 0.0D, d22);
+                axisalignedbb4 = axisalignedbb4.offset(0.0D, 0.0D, d22);
                 double d23 = d18 * d18 + d19 * d19;
                 double d9 = d21 * d21 + d22 * d22;
 
                 if (d23 > d9)
                 {
-                    p_70091_2_ = d18;
-                    p_70091_6_ = d19;
-                    p_70091_4_ = -d8;
-                    this.func_174826_a(axisalignedbb2);
+                    x = d18;
+                    z = d19;
+                    y = -d8;
+                    this.setEntityBoundingBox(axisalignedbb2);
                 }
                 else
                 {
-                    p_70091_2_ = d21;
-                    p_70091_6_ = d22;
-                    p_70091_4_ = -d20;
-                    this.func_174826_a(axisalignedbb4);
+                    x = d21;
+                    z = d22;
+                    y = -d20;
+                    this.setEntityBoundingBox(axisalignedbb4);
                 }
 
                 int j4 = 0;
 
                 for (int k4 = list.size(); j4 < k4; ++j4)
                 {
-                    p_70091_4_ = ((AxisAlignedBB)list.get(j4)).func_72323_b(this.func_174813_aQ(), p_70091_4_);
+                    y = ((AxisAlignedBB)list.get(j4)).calculateYOffset(this.getEntityBoundingBox(), y);
                 }
 
-                this.func_174826_a(this.func_174813_aQ().func_72317_d(0.0D, p_70091_4_, 0.0D));
+                this.setEntityBoundingBox(this.getEntityBoundingBox().offset(0.0D, y, 0.0D));
 
-                if (d14 * d14 + d7 * d7 >= p_70091_2_ * p_70091_2_ + p_70091_6_ * p_70091_6_)
+                if (d14 * d14 + d7 * d7 >= x * x + z * z)
                 {
-                    p_70091_2_ = d14;
-                    p_70091_4_ = d6;
-                    p_70091_6_ = d7;
-                    this.func_174826_a(axisalignedbb1);
+                    x = d14;
+                    y = d6;
+                    z = d7;
+                    this.setEntityBoundingBox(axisalignedbb1);
                 }
             }
 
-            this.field_70170_p.field_72984_F.func_76319_b();
-            this.field_70170_p.field_72984_F.func_76320_a("rest");
-            this.func_174829_m();
-            this.field_70123_F = d2 != p_70091_2_ || d4 != p_70091_6_;
-            this.field_70124_G = d3 != p_70091_4_;
-            this.field_70122_E = this.field_70124_G && d3 < 0.0D;
-            this.field_70132_H = this.field_70123_F || this.field_70124_G;
-            int j6 = MathHelper.func_76128_c(this.field_70165_t);
-            int i1 = MathHelper.func_76128_c(this.field_70163_u - 0.20000000298023224D);
-            int k6 = MathHelper.func_76128_c(this.field_70161_v);
+            this.world.theProfiler.endSection();
+            this.world.theProfiler.startSection("rest");
+            this.resetPositionToBB();
+            this.isCollidedHorizontally = d2 != x || d4 != z;
+            this.isCollidedVertically = d3 != y;
+            this.onGround = this.isCollidedVertically && d3 < 0.0D;
+            this.isCollided = this.isCollidedHorizontally || this.isCollidedVertically;
+            int j6 = MathHelper.floor(this.posX);
+            int i1 = MathHelper.floor(this.posY - 0.20000000298023224D);
+            int k6 = MathHelper.floor(this.posZ);
             BlockPos blockpos = new BlockPos(j6, i1, k6);
-            IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos);
+            IBlockState iblockstate = this.world.getBlockState(blockpos);
 
-            if (iblockstate.func_185904_a() == Material.field_151579_a)
+            if (iblockstate.getMaterial() == Material.AIR)
             {
-                BlockPos blockpos1 = blockpos.func_177977_b();
-                IBlockState iblockstate1 = this.field_70170_p.func_180495_p(blockpos1);
-                Block block1 = iblockstate1.func_177230_c();
+                BlockPos blockpos1 = blockpos.down();
+                IBlockState iblockstate1 = this.world.getBlockState(blockpos1);
+                Block block1 = iblockstate1.getBlock();
 
                 if (block1 instanceof BlockFence || block1 instanceof BlockWall || block1 instanceof BlockFenceGate)
                 {
@@ -870,156 +973,185 @@
                 }
             }
 
-            this.func_184231_a(p_70091_4_, this.field_70122_E, iblockstate, blockpos);
+            this.updateFallState(y, this.onGround, iblockstate, blockpos);
 
-            if (d2 != p_70091_2_)
+            if (d2 != x)
             {
-                this.field_70159_w = 0.0D;
+                this.motionX = 0.0D;
             }
 
-            if (d4 != p_70091_6_)
+            if (d4 != z)
             {
-                this.field_70179_y = 0.0D;
+                this.motionZ = 0.0D;
             }
 
-            Block block = iblockstate.func_177230_c();
+            Block block = iblockstate.getBlock();
 
-            if (d3 != p_70091_4_)
+            if (d3 != y)
             {
-                block.func_176216_a(this.field_70170_p, this);
+                block.onLanded(this.world, this);
             }
 
-            if (this.func_70041_e_() && (!this.field_70122_E || !this.func_70093_af() || !(this instanceof EntityPlayer)) && !this.func_184218_aH())
+            // CraftBukkit start
+            if (isCollidedHorizontally && getBukkitEntity() instanceof Vehicle) {
+                Vehicle vehicle = (Vehicle) this.getBukkitEntity();
+                org.bukkit.block.Block bl = this.world.getWorld().getBlockAt(MathHelper.floor(this.posX), MathHelper.floor(this.posY), MathHelper.floor(this.posZ));
+
+                if (d1 > x) {
+                    bl = bl.getRelative(BlockFace.EAST);
+                } else if (d1 < x) {
+                    bl = bl.getRelative(BlockFace.WEST);
+                } else if (d3 > z) {
+                    bl = bl.getRelative(BlockFace.SOUTH);
+                } else if (d3 < z) {
+                    bl = bl.getRelative(BlockFace.NORTH);
+                }
+
+                if (bl.getType() != org.bukkit.Material.AIR) {
+                    VehicleBlockCollisionEvent event = new VehicleBlockCollisionEvent(vehicle, bl);
+                    world.getServer().getPluginManager().callEvent(event);
+                }
+            }
+            // CraftBukkit end
+
+            if (this.canTriggerWalking() && (!this.onGround || !this.isSneaking() || !(this instanceof EntityPlayer)) && !this.isRiding())
             {
-                double d15 = this.field_70165_t - d10;
-                double d16 = this.field_70163_u - d11;
-                double d17 = this.field_70161_v - d1;
+                double d15 = this.posX - d10;
+                double d16 = this.posY - d11;
+                double d17 = this.posZ - d1;
 
-                if (block != Blocks.field_150468_ap)
+                if (block != Blocks.LADDER)
                 {
                     d16 = 0.0D;
                 }
 
-                if (block != null && this.field_70122_E)
+                if (block != null && this.onGround)
                 {
-                    block.func_176199_a(this.field_70170_p, blockpos, this);
+                    block.onEntityWalk(this.world, blockpos, this);
                 }
 
-                this.field_70140_Q = (float)((double)this.field_70140_Q + (double)MathHelper.func_76133_a(d15 * d15 + d17 * d17) * 0.6D);
-                this.field_82151_R = (float)((double)this.field_82151_R + (double)MathHelper.func_76133_a(d15 * d15 + d16 * d16 + d17 * d17) * 0.6D);
+                this.distanceWalkedModified = (float)((double)this.distanceWalkedModified + (double)MathHelper.sqrt(d15 * d15 + d17 * d17) * 0.6D);
+                this.distanceWalkedOnStepModified = (float)((double)this.distanceWalkedOnStepModified + (double)MathHelper.sqrt(d15 * d15 + d16 * d16 + d17 * d17) * 0.6D);
 
-                if (this.field_82151_R > (float)this.field_70150_b && iblockstate.func_185904_a() != Material.field_151579_a)
+                if (this.distanceWalkedOnStepModified > (float)this.nextStepDistance && iblockstate.getMaterial() != Material.AIR)
                 {
-                    this.field_70150_b = (int)this.field_82151_R + 1;
+                    this.nextStepDistance = (int)this.distanceWalkedOnStepModified + 1;
 
-                    if (this.func_70090_H())
+                    if (this.isInWater())
                     {
-                        Entity entity = this.func_184207_aI() && this.func_184179_bs() != null ? this.func_184179_bs() : this;
+                        Entity entity = this.isBeingRidden() && this.getControllingPassenger() != null ? this.getControllingPassenger() : this;
                         float f = entity == this ? 0.35F : 0.4F;
-                        float f1 = MathHelper.func_76133_a(entity.field_70159_w * entity.field_70159_w * 0.20000000298023224D + entity.field_70181_x * entity.field_70181_x + entity.field_70179_y * entity.field_70179_y * 0.20000000298023224D) * f;
+                        float f1 = MathHelper.sqrt(entity.motionX * entity.motionX * 0.20000000298023224D + entity.motionY * entity.motionY + entity.motionZ * entity.motionZ * 0.20000000298023224D) * f;
 
                         if (f1 > 1.0F)
                         {
                             f1 = 1.0F;
                         }
 
-                        this.func_184185_a(this.func_184184_Z(), f1, 1.0F + (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.4F);
+                        this.playSound(this.getSwimSound(), f1, 1.0F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
                     }
                     else
                     {
-                        this.func_180429_a(blockpos, block);
+                        this.playStepSound(blockpos, block);
                     }
                 }
             }
 
             try
             {
-                this.func_145775_I();
+                this.doBlockCollisions();
             }
             catch (Throwable throwable)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Checking entity block collision");
-                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Entity being checked for collision");
-                this.func_85029_a(crashreportcategory);
+                CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Checking entity block collision");
+                CrashReportCategory crashreportcategory = crashreport.makeCategory("Entity being checked for collision");
+                this.addEntityCrashInfo(crashreportcategory);
                 throw new ReportedException(crashreport);
             }
 
-            boolean flag1 = this.func_70026_G();
+            boolean flag1 = this.isWet();
 
-            if (this.field_70170_p.func_147470_e(this.func_174813_aQ().func_186664_h(0.001D)))
+            if (this.world.isFlammableWithin(this.getEntityBoundingBox().contract(0.001D)))
             {
-                this.func_70081_e(1);
+                this.dealFireDamage(1);
 
                 if (!flag1)
                 {
-                    ++this.field_190534_ay;
+                    ++this.fire;
 
-                    if (this.field_190534_ay == 0)
+                    if (this.fire == 0)
                     {
-                        this.func_70015_d(8);
+                        // CraftBukkit start
+                        EntityCombustEvent event = new org.bukkit.event.entity.EntityCombustByBlockEvent(null, getBukkitEntity(), 8);
+                        world.getServer().getPluginManager().callEvent(event);
+
+                        if (!event.isCancelled()) {
+                            this.setFire(event.getDuration());
+                        }
+                        // CraftBukkit end
                     }
                 }
             }
-            else if (this.field_190534_ay <= 0)
+            else if (this.fire <= 0)
             {
-                this.field_190534_ay = -this.func_190531_bD();
+                this.fire = -this.getFireImmuneTicks();
             }
 
-            if (flag1 && this.func_70027_ad())
+            if (flag1 && this.isBurning())
             {
-                this.func_184185_a(SoundEvents.field_187541_bC, 0.7F, 1.6F + (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.4F);
-                this.field_190534_ay = -this.func_190531_bD();
+                this.playSound(SoundEvents.ENTITY_GENERIC_EXTINGUISH_FIRE, 0.7F, 1.6F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
+                this.fire = -this.getFireImmuneTicks();
             }
 
-            this.field_70170_p.field_72984_F.func_76319_b();
+            this.world.theProfiler.endSection();
         }
     }
 
-    public void func_174829_m()
+    public void resetPositionToBB()
     {
-        AxisAlignedBB axisalignedbb = this.func_174813_aQ();
-        this.field_70165_t = (axisalignedbb.field_72340_a + axisalignedbb.field_72336_d) / 2.0D;
-        this.field_70163_u = axisalignedbb.field_72338_b;
-        this.field_70161_v = (axisalignedbb.field_72339_c + axisalignedbb.field_72334_f) / 2.0D;
+        AxisAlignedBB axisalignedbb = this.getEntityBoundingBox();
+        this.posX = (axisalignedbb.minX + axisalignedbb.maxX) / 2.0D;
+        this.posY = axisalignedbb.minY;
+        this.posZ = (axisalignedbb.minZ + axisalignedbb.maxZ) / 2.0D;
     }
 
-    protected SoundEvent func_184184_Z()
+    protected SoundEvent getSwimSound()
     {
-        return SoundEvents.field_187549_bG;
+        return SoundEvents.ENTITY_GENERIC_SWIM;
     }
 
-    protected SoundEvent func_184181_aa()
+    protected SoundEvent getSplashSound()
     {
-        return SoundEvents.field_187547_bF;
+        return SoundEvents.ENTITY_GENERIC_SPLASH;
     }
 
-    protected void func_145775_I()
+    protected void doBlockCollisions()
     {
-        AxisAlignedBB axisalignedbb = this.func_174813_aQ();
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185345_c(axisalignedbb.field_72340_a + 0.001D, axisalignedbb.field_72338_b + 0.001D, axisalignedbb.field_72339_c + 0.001D);
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos1 = BlockPos.PooledMutableBlockPos.func_185345_c(axisalignedbb.field_72336_d - 0.001D, axisalignedbb.field_72337_e - 0.001D, axisalignedbb.field_72334_f - 0.001D);
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos2 = BlockPos.PooledMutableBlockPos.func_185346_s();
+        AxisAlignedBB axisalignedbb = this.getEntityBoundingBox();
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain(axisalignedbb.minX + 0.001D, axisalignedbb.minY + 0.001D, axisalignedbb.minZ + 0.001D);
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos1 = BlockPos.PooledMutableBlockPos.retain(axisalignedbb.maxX - 0.001D, axisalignedbb.maxY - 0.001D, axisalignedbb.maxZ - 0.001D);
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos2 = BlockPos.PooledMutableBlockPos.retain();
 
-        if (this.field_70170_p.func_175707_a(blockpos$pooledmutableblockpos, blockpos$pooledmutableblockpos1))
+        if (this.world.isAreaLoaded(blockpos$pooledmutableblockpos, blockpos$pooledmutableblockpos1))
         {
-            for (int i = blockpos$pooledmutableblockpos.func_177958_n(); i <= blockpos$pooledmutableblockpos1.func_177958_n(); ++i)
+            for (int i = blockpos$pooledmutableblockpos.getX(); i <= blockpos$pooledmutableblockpos1.getX(); ++i)
             {
-                for (int j = blockpos$pooledmutableblockpos.func_177956_o(); j <= blockpos$pooledmutableblockpos1.func_177956_o(); ++j)
+                for (int j = blockpos$pooledmutableblockpos.getY(); j <= blockpos$pooledmutableblockpos1.getY(); ++j)
                 {
-                    for (int k = blockpos$pooledmutableblockpos.func_177952_p(); k <= blockpos$pooledmutableblockpos1.func_177952_p(); ++k)
+                    for (int k = blockpos$pooledmutableblockpos.getZ(); k <= blockpos$pooledmutableblockpos1.getZ(); ++k)
                     {
-                        blockpos$pooledmutableblockpos2.func_181079_c(i, j, k);
-                        IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos2);
+                        blockpos$pooledmutableblockpos2.setPos(i, j, k);
+                        IBlockState iblockstate = this.world.getBlockState(blockpos$pooledmutableblockpos2);
 
                         try
                         {
-                            iblockstate.func_177230_c().func_180634_a(this.field_70170_p, blockpos$pooledmutableblockpos2, iblockstate, this);
+                            iblockstate.getBlock().onEntityCollidedWithBlock(this.world, blockpos$pooledmutableblockpos2, iblockstate, this);
                         }
                         catch (Throwable throwable)
                         {
-                            CrashReport crashreport = CrashReport.func_85055_a(throwable, "Colliding entity with block");
-                            CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being collided with");
-                            CrashReportCategory.func_175750_a(crashreportcategory, blockpos$pooledmutableblockpos2, iblockstate);
+                            CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Colliding entity with block");
+                            CrashReportCategory crashreportcategory = crashreport.makeCategory("Block being collided with");
+                            CrashReportCategory.addBlockInfo(crashreportcategory, blockpos$pooledmutableblockpos2, iblockstate);
                             throw new ReportedException(crashreport);
                         }
                     }
@@ -1027,228 +1159,228 @@
             }
         }
 
-        blockpos$pooledmutableblockpos.func_185344_t();
-        blockpos$pooledmutableblockpos1.func_185344_t();
-        blockpos$pooledmutableblockpos2.func_185344_t();
+        blockpos$pooledmutableblockpos.release();
+        blockpos$pooledmutableblockpos1.release();
+        blockpos$pooledmutableblockpos2.release();
     }
 
-    protected void func_180429_a(BlockPos p_180429_1_, Block p_180429_2_)
+    protected void playStepSound(BlockPos pos, Block blockIn)
     {
-        SoundType soundtype = p_180429_2_.func_185467_w();
+        SoundType soundtype = blockIn.getSoundType(world.getBlockState(pos), world, pos, this);
 
-        if (this.field_70170_p.func_180495_p(p_180429_1_.func_177984_a()).func_177230_c() == Blocks.field_150431_aC)
+        if (this.world.getBlockState(pos.up()).getBlock() == Blocks.SNOW_LAYER)
         {
-            soundtype = Blocks.field_150431_aC.func_185467_w();
-            this.func_184185_a(soundtype.func_185844_d(), soundtype.func_185843_a() * 0.15F, soundtype.func_185847_b());
+            soundtype = Blocks.SNOW_LAYER.getSoundType();
+            this.playSound(soundtype.getStepSound(), soundtype.getVolume() * 0.15F, soundtype.getPitch());
         }
-        else if (!p_180429_2_.func_176223_P().func_185904_a().func_76224_d())
+        else if (!blockIn.getDefaultState().getMaterial().isLiquid())
         {
-            this.func_184185_a(soundtype.func_185844_d(), soundtype.func_185843_a() * 0.15F, soundtype.func_185847_b());
+            this.playSound(soundtype.getStepSound(), soundtype.getVolume() * 0.15F, soundtype.getPitch());
         }
     }
 
-    public void func_184185_a(SoundEvent p_184185_1_, float p_184185_2_, float p_184185_3_)
+    public void playSound(SoundEvent soundIn, float volume, float pitch)
     {
-        if (!this.func_174814_R())
+        if (!this.isSilent())
         {
-            this.field_70170_p.func_184148_a((EntityPlayer)null, this.field_70165_t, this.field_70163_u, this.field_70161_v, p_184185_1_, this.func_184176_by(), p_184185_2_, p_184185_3_);
+            this.world.playSound((EntityPlayer)null, this.posX, this.posY, this.posZ, soundIn, this.getSoundCategory(), volume, pitch);
         }
     }
 
-    public boolean func_174814_R()
+    public boolean isSilent()
     {
-        return ((Boolean)this.field_70180_af.func_187225_a(field_184234_aB)).booleanValue();
+        return ((Boolean)this.dataManager.get(SILENT)).booleanValue();
     }
 
-    public void func_174810_b(boolean p_174810_1_)
+    public void setSilent(boolean isSilent)
     {
-        this.field_70180_af.func_187227_b(field_184234_aB, Boolean.valueOf(p_174810_1_));
+        this.dataManager.set(SILENT, Boolean.valueOf(isSilent));
     }
 
-    public boolean func_189652_ae()
+    public boolean hasNoGravity()
     {
-        return ((Boolean)this.field_70180_af.func_187225_a(field_189655_aD)).booleanValue();
+        return ((Boolean)this.dataManager.get(NO_GRAVITY)).booleanValue();
     }
 
-    public void func_189654_d(boolean p_189654_1_)
+    public void setNoGravity(boolean noGravity)
     {
-        this.field_70180_af.func_187227_b(field_189655_aD, Boolean.valueOf(p_189654_1_));
+        this.dataManager.set(NO_GRAVITY, Boolean.valueOf(noGravity));
     }
 
-    protected boolean func_70041_e_()
+    protected boolean canTriggerWalking()
     {
         return true;
     }
 
-    protected void func_184231_a(double p_184231_1_, boolean p_184231_3_, IBlockState p_184231_4_, BlockPos p_184231_5_)
+    protected void updateFallState(double y, boolean onGroundIn, IBlockState state, BlockPos pos)
     {
-        if (p_184231_3_)
+        if (onGroundIn)
         {
-            if (this.field_70143_R > 0.0F)
+            if (this.fallDistance > 0.0F)
             {
-                p_184231_4_.func_177230_c().func_180658_a(this.field_70170_p, p_184231_5_, this, this.field_70143_R);
+                state.getBlock().onFallenUpon(this.world, pos, this, this.fallDistance);
             }
 
-            this.field_70143_R = 0.0F;
+            this.fallDistance = 0.0F;
         }
-        else if (p_184231_1_ < 0.0D)
+        else if (y < 0.0D)
         {
-            this.field_70143_R = (float)((double)this.field_70143_R - p_184231_1_);
+            this.fallDistance = (float)((double)this.fallDistance - y);
         }
     }
 
     @Nullable
-    public AxisAlignedBB func_70046_E()
+    public AxisAlignedBB getCollisionBoundingBox()
     {
         return null;
     }
 
-    protected void func_70081_e(int p_70081_1_)
+    protected void dealFireDamage(int amount)
     {
-        if (!this.field_70178_ae)
+        if (!this.isImmuneToFire)
         {
-            this.func_70097_a(DamageSource.field_76372_a, (float)p_70081_1_);
+            this.attackEntityFrom(DamageSource.IN_FIRE, (float)amount);
         }
     }
 
-    public final boolean func_70045_F()
+    public final boolean isImmuneToFire()
     {
-        return this.field_70178_ae;
+        return this.isImmuneToFire;
     }
 
-    public void func_180430_e(float p_180430_1_, float p_180430_2_)
+    public void fall(float distance, float damageMultiplier)
     {
-        if (this.func_184207_aI())
+        if (this.isBeingRidden())
         {
-            for (Entity entity : this.func_184188_bt())
+            for (Entity entity : this.getPassengers())
             {
-                entity.func_180430_e(p_180430_1_, p_180430_2_);
+                entity.fall(distance, damageMultiplier);
             }
         }
     }
 
-    public boolean func_70026_G()
+    public boolean isWet()
     {
-        if (this.field_70171_ac)
+        if (this.inWater)
         {
             return true;
         }
         else
         {
-            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185345_c(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain(this.posX, this.posY, this.posZ);
 
-            if (!this.field_70170_p.func_175727_C(blockpos$pooledmutableblockpos) && !this.field_70170_p.func_175727_C(blockpos$pooledmutableblockpos.func_189532_c(this.field_70165_t, this.field_70163_u + (double)this.field_70131_O, this.field_70161_v)))
+            if (!this.world.isRainingAt(blockpos$pooledmutableblockpos) && !this.world.isRainingAt(blockpos$pooledmutableblockpos.setPos(this.posX, this.posY + (double)this.height, this.posZ)))
             {
-                blockpos$pooledmutableblockpos.func_185344_t();
+                blockpos$pooledmutableblockpos.release();
                 return false;
             }
             else
             {
-                blockpos$pooledmutableblockpos.func_185344_t();
+                blockpos$pooledmutableblockpos.release();
                 return true;
             }
         }
     }
 
-    public boolean func_70090_H()
+    public boolean isInWater()
     {
-        return this.field_70171_ac;
+        return this.inWater;
     }
 
-    public boolean func_70072_I()
+    public boolean handleWaterMovement()
     {
-        if (this.func_184187_bx() instanceof EntityBoat)
+        if (this.getRidingEntity() instanceof EntityBoat)
         {
-            this.field_70171_ac = false;
+            this.inWater = false;
         }
-        else if (this.field_70170_p.func_72918_a(this.func_174813_aQ().func_72314_b(0.0D, -0.4000000059604645D, 0.0D).func_186664_h(0.001D), Material.field_151586_h, this))
+        else if (this.world.handleMaterialAcceleration(this.getEntityBoundingBox().expand(0.0D, -0.4000000059604645D, 0.0D).contract(0.001D), Material.WATER, this))
         {
-            if (!this.field_70171_ac && !this.field_70148_d)
+            if (!this.inWater && !this.firstUpdate)
             {
-                this.func_71061_d_();
+                this.resetHeight();
             }
 
-            this.field_70143_R = 0.0F;
-            this.field_70171_ac = true;
-            this.func_70066_B();
+            this.fallDistance = 0.0F;
+            this.inWater = true;
+            this.extinguish();
         }
         else
         {
-            this.field_70171_ac = false;
+            this.inWater = false;
         }
 
-        return this.field_70171_ac;
+        return this.inWater;
     }
 
-    protected void func_71061_d_()
+    protected void resetHeight()
     {
-        Entity entity = this.func_184207_aI() && this.func_184179_bs() != null ? this.func_184179_bs() : this;
+        Entity entity = this.isBeingRidden() && this.getControllingPassenger() != null ? this.getControllingPassenger() : this;
         float f = entity == this ? 0.2F : 0.9F;
-        float f1 = MathHelper.func_76133_a(entity.field_70159_w * entity.field_70159_w * 0.20000000298023224D + entity.field_70181_x * entity.field_70181_x + entity.field_70179_y * entity.field_70179_y * 0.20000000298023224D) * f;
+        float f1 = MathHelper.sqrt(entity.motionX * entity.motionX * 0.20000000298023224D + entity.motionY * entity.motionY + entity.motionZ * entity.motionZ * 0.20000000298023224D) * f;
 
         if (f1 > 1.0F)
         {
             f1 = 1.0F;
         }
 
-        this.func_184185_a(this.func_184181_aa(), f1, 1.0F + (this.field_70146_Z.nextFloat() - this.field_70146_Z.nextFloat()) * 0.4F);
-        float f2 = (float)MathHelper.func_76128_c(this.func_174813_aQ().field_72338_b);
+        this.playSound(this.getSplashSound(), f1, 1.0F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
+        float f2 = (float)MathHelper.floor(this.getEntityBoundingBox().minY);
 
-        for (int i = 0; (float)i < 1.0F + this.field_70130_N * 20.0F; ++i)
+        for (int i = 0; (float)i < 1.0F + this.width * 20.0F; ++i)
         {
-            float f3 = (this.field_70146_Z.nextFloat() * 2.0F - 1.0F) * this.field_70130_N;
-            float f4 = (this.field_70146_Z.nextFloat() * 2.0F - 1.0F) * this.field_70130_N;
-            this.field_70170_p.func_175688_a(EnumParticleTypes.WATER_BUBBLE, this.field_70165_t + (double)f3, (double)(f2 + 1.0F), this.field_70161_v + (double)f4, this.field_70159_w, this.field_70181_x - (double)(this.field_70146_Z.nextFloat() * 0.2F), this.field_70179_y, new int[0]);
+            float f3 = (this.rand.nextFloat() * 2.0F - 1.0F) * this.width;
+            float f4 = (this.rand.nextFloat() * 2.0F - 1.0F) * this.width;
+            this.world.spawnParticle(EnumParticleTypes.WATER_BUBBLE, this.posX + (double)f3, (double)(f2 + 1.0F), this.posZ + (double)f4, this.motionX, this.motionY - (double)(this.rand.nextFloat() * 0.2F), this.motionZ, new int[0]);
         }
 
-        for (int j = 0; (float)j < 1.0F + this.field_70130_N * 20.0F; ++j)
+        for (int j = 0; (float)j < 1.0F + this.width * 20.0F; ++j)
         {
-            float f5 = (this.field_70146_Z.nextFloat() * 2.0F - 1.0F) * this.field_70130_N;
-            float f6 = (this.field_70146_Z.nextFloat() * 2.0F - 1.0F) * this.field_70130_N;
-            this.field_70170_p.func_175688_a(EnumParticleTypes.WATER_SPLASH, this.field_70165_t + (double)f5, (double)(f2 + 1.0F), this.field_70161_v + (double)f6, this.field_70159_w, this.field_70181_x, this.field_70179_y, new int[0]);
+            float f5 = (this.rand.nextFloat() * 2.0F - 1.0F) * this.width;
+            float f6 = (this.rand.nextFloat() * 2.0F - 1.0F) * this.width;
+            this.world.spawnParticle(EnumParticleTypes.WATER_SPLASH, this.posX + (double)f5, (double)(f2 + 1.0F), this.posZ + (double)f6, this.motionX, this.motionY, this.motionZ, new int[0]);
         }
     }
 
-    public void func_174830_Y()
+    public void spawnRunningParticles()
     {
-        if (this.func_70051_ag() && !this.func_70090_H())
+        if (this.isSprinting() && !this.isInWater())
         {
-            this.func_174808_Z();
+            this.createRunningParticles();
         }
     }
 
-    protected void func_174808_Z()
+    protected void createRunningParticles()
     {
-        int i = MathHelper.func_76128_c(this.field_70165_t);
-        int j = MathHelper.func_76128_c(this.field_70163_u - 0.20000000298023224D);
-        int k = MathHelper.func_76128_c(this.field_70161_v);
+        int i = MathHelper.floor(this.posX);
+        int j = MathHelper.floor(this.posY - 0.20000000298023224D);
+        int k = MathHelper.floor(this.posZ);
         BlockPos blockpos = new BlockPos(i, j, k);
-        IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos);
+        IBlockState iblockstate = this.world.getBlockState(blockpos);
 
-        if (iblockstate.func_185901_i() != EnumBlockRenderType.INVISIBLE)
+        if (iblockstate.getRenderType() != EnumBlockRenderType.INVISIBLE)
         {
-            this.field_70170_p.func_175688_a(EnumParticleTypes.BLOCK_CRACK, this.field_70165_t + ((double)this.field_70146_Z.nextFloat() - 0.5D) * (double)this.field_70130_N, this.func_174813_aQ().field_72338_b + 0.1D, this.field_70161_v + ((double)this.field_70146_Z.nextFloat() - 0.5D) * (double)this.field_70130_N, -this.field_70159_w * 4.0D, 1.5D, -this.field_70179_y * 4.0D, new int[] {Block.func_176210_f(iblockstate)});
+            this.world.spawnParticle(EnumParticleTypes.BLOCK_CRACK, this.posX + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, this.getEntityBoundingBox().minY + 0.1D, this.posZ + ((double)this.rand.nextFloat() - 0.5D) * (double)this.width, -this.motionX * 4.0D, 1.5D, -this.motionZ * 4.0D, new int[] {Block.getStateId(iblockstate)});
         }
     }
 
-    public boolean func_70055_a(Material p_70055_1_)
+    public boolean isInsideOfMaterial(Material materialIn)
     {
-        if (this.func_184187_bx() instanceof EntityBoat)
+        if (this.getRidingEntity() instanceof EntityBoat)
         {
             return false;
         }
         else
         {
-            double d0 = this.field_70163_u + (double)this.func_70047_e();
-            BlockPos blockpos = new BlockPos(this.field_70165_t, d0, this.field_70161_v);
-            IBlockState iblockstate = this.field_70170_p.func_180495_p(blockpos);
+            double d0 = this.posY + (double)this.getEyeHeight();
+            BlockPos blockpos = new BlockPos(this.posX, d0, this.posZ);
+            IBlockState iblockstate = this.world.getBlockState(blockpos);
 
-            if (iblockstate.func_185904_a() == p_70055_1_)
+            Boolean result = iblockstate.getBlock().isEntityInsideMaterial(this.world, blockpos, iblockstate, this, d0, materialIn, true);
+            if (result != null) return result;
+
+            if (iblockstate.getMaterial() == materialIn)
             {
-                float f = BlockLiquid.func_149801_b(iblockstate.func_177230_c().func_176201_c(iblockstate)) - 0.11111111F;
-                float f1 = (float)(blockpos.func_177956_o() + 1) - f;
-                boolean flag = d0 < (double)f1;
-                return !flag && this instanceof EntityPlayer ? false : flag;
+                return net.minecraftforge.common.ForgeHooks.isInsideOfMaterial(materialIn, this, blockpos);
             }
             else
             {
@@ -1257,43 +1389,43 @@
         }
     }
 
-    public boolean func_180799_ab()
+    public boolean isInLava()
     {
-        return this.field_70170_p.func_72875_a(this.func_174813_aQ().func_72314_b(-0.10000000149011612D, -0.4000000059604645D, -0.10000000149011612D), Material.field_151587_i);
+        return this.world.isMaterialInBB(this.getEntityBoundingBox().expand(-0.10000000149011612D, -0.4000000059604645D, -0.10000000149011612D), Material.LAVA);
     }
 
-    public void func_70060_a(float p_70060_1_, float p_70060_2_, float p_70060_3_)
+    public void moveRelative(float strafe, float forward, float friction)
     {
-        float f = p_70060_1_ * p_70060_1_ + p_70060_2_ * p_70060_2_;
+        float f = strafe * strafe + forward * forward;
 
         if (f >= 1.0E-4F)
         {
-            f = MathHelper.func_76129_c(f);
+            f = MathHelper.sqrt(f);
 
             if (f < 1.0F)
             {
                 f = 1.0F;
             }
 
-            f = p_70060_3_ / f;
-            p_70060_1_ = p_70060_1_ * f;
-            p_70060_2_ = p_70060_2_ * f;
-            float f1 = MathHelper.func_76126_a(this.field_70177_z * 0.017453292F);
-            float f2 = MathHelper.func_76134_b(this.field_70177_z * 0.017453292F);
-            this.field_70159_w += (double)(p_70060_1_ * f2 - p_70060_2_ * f1);
-            this.field_70179_y += (double)(p_70060_2_ * f2 + p_70060_1_ * f1);
+            f = friction / f;
+            strafe = strafe * f;
+            forward = forward * f;
+            float f1 = MathHelper.sin(this.rotationYaw * 0.017453292F);
+            float f2 = MathHelper.cos(this.rotationYaw * 0.017453292F);
+            this.motionX += (double)(strafe * f2 - forward * f1);
+            this.motionZ += (double)(forward * f2 + strafe * f1);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_70070_b(float p_70070_1_)
+    public int getBrightnessForRender(float partialTicks)
     {
-        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(MathHelper.func_76128_c(this.field_70165_t), 0, MathHelper.func_76128_c(this.field_70161_v));
+        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(MathHelper.floor(this.posX), 0, MathHelper.floor(this.posZ));
 
-        if (this.field_70170_p.func_175667_e(blockpos$mutableblockpos))
+        if (this.world.isBlockLoaded(blockpos$mutableblockpos))
         {
-            blockpos$mutableblockpos.func_185336_p(MathHelper.func_76128_c(this.field_70163_u + (double)this.func_70047_e()));
-            return this.field_70170_p.func_175626_b(blockpos$mutableblockpos, 0);
+            blockpos$mutableblockpos.setY(MathHelper.floor(this.posY + (double)this.getEyeHeight()));
+            return this.world.getCombinedLight(blockpos$mutableblockpos, 0);
         }
         else
         {
@@ -1301,14 +1433,14 @@
         }
     }
 
-    public float func_70013_c(float p_70013_1_)
+    public float getBrightness(float partialTicks)
     {
-        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(MathHelper.func_76128_c(this.field_70165_t), 0, MathHelper.func_76128_c(this.field_70161_v));
+        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(MathHelper.floor(this.posX), 0, MathHelper.floor(this.posZ));
 
-        if (this.field_70170_p.func_175667_e(blockpos$mutableblockpos))
+        if (this.world.isBlockLoaded(blockpos$mutableblockpos))
         {
-            blockpos$mutableblockpos.func_185336_p(MathHelper.func_76128_c(this.field_70163_u + (double)this.func_70047_e()));
-            return this.field_70170_p.func_175724_o(blockpos$mutableblockpos);
+            blockpos$mutableblockpos.setY(MathHelper.floor(this.posY + (double)this.getEyeHeight()));
+            return this.world.getLightBrightness(blockpos$mutableblockpos);
         }
         else
         {
@@ -1316,120 +1448,128 @@
         }
     }
 
-    public void func_70029_a(World p_70029_1_)
+    public void setWorld(World worldIn)
     {
-        this.field_70170_p = p_70029_1_;
+        // CraftBukkit start
+        if (worldIn == null) {
+            setDead();
+            this.world = ((CraftWorld) Bukkit.getServer().getWorlds().get(0)).getHandle();
+            return;
+        }
+        // CraftBukkit end
+        this.world = worldIn;
+        return;
     }
 
-    public void func_70080_a(double p_70080_1_, double p_70080_3_, double p_70080_5_, float p_70080_7_, float p_70080_8_)
+    public void setPositionAndRotation(double x, double y, double z, float yaw, float pitch)
     {
-        this.field_70165_t = MathHelper.func_151237_a(p_70080_1_, -3.0E7D, 3.0E7D);
-        this.field_70163_u = p_70080_3_;
-        this.field_70161_v = MathHelper.func_151237_a(p_70080_5_, -3.0E7D, 3.0E7D);
-        this.field_70169_q = this.field_70165_t;
-        this.field_70167_r = this.field_70163_u;
-        this.field_70166_s = this.field_70161_v;
-        p_70080_8_ = MathHelper.func_76131_a(p_70080_8_, -90.0F, 90.0F);
-        this.field_70177_z = p_70080_7_;
-        this.field_70125_A = p_70080_8_;
-        this.field_70126_B = this.field_70177_z;
-        this.field_70127_C = this.field_70125_A;
-        double d0 = (double)(this.field_70126_B - p_70080_7_);
+        this.posX = MathHelper.clamp(x, -3.0E7D, 3.0E7D);
+        this.posY = y;
+        this.posZ = MathHelper.clamp(z, -3.0E7D, 3.0E7D);
+        this.prevPosX = this.posX;
+        this.prevPosY = this.posY;
+        this.prevPosZ = this.posZ;
+        pitch = MathHelper.clamp(pitch, -90.0F, 90.0F);
+        this.rotationYaw = yaw;
+        this.rotationPitch = pitch;
+        this.prevRotationYaw = this.rotationYaw;
+        this.prevRotationPitch = this.rotationPitch;
+        double d0 = (double)(this.prevRotationYaw - yaw);
 
         if (d0 < -180.0D)
         {
-            this.field_70126_B += 360.0F;
+            this.prevRotationYaw += 360.0F;
         }
 
         if (d0 >= 180.0D)
         {
-            this.field_70126_B -= 360.0F;
+            this.prevRotationYaw -= 360.0F;
         }
 
-        this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
-        this.func_70101_b(p_70080_7_, p_70080_8_);
+        this.setPosition(this.posX, this.posY, this.posZ);
+        this.setRotation(yaw, pitch);
     }
 
-    public void func_174828_a(BlockPos p_174828_1_, float p_174828_2_, float p_174828_3_)
+    public void moveToBlockPosAndAngles(BlockPos pos, float rotationYawIn, float rotationPitchIn)
     {
-        this.func_70012_b((double)p_174828_1_.func_177958_n() + 0.5D, (double)p_174828_1_.func_177956_o(), (double)p_174828_1_.func_177952_p() + 0.5D, p_174828_2_, p_174828_3_);
+        this.setLocationAndAngles((double)pos.getX() + 0.5D, (double)pos.getY(), (double)pos.getZ() + 0.5D, rotationYawIn, rotationPitchIn);
     }
 
-    public void func_70012_b(double p_70012_1_, double p_70012_3_, double p_70012_5_, float p_70012_7_, float p_70012_8_)
+    public void setLocationAndAngles(double x, double y, double z, float yaw, float pitch)
     {
-        this.field_70165_t = p_70012_1_;
-        this.field_70163_u = p_70012_3_;
-        this.field_70161_v = p_70012_5_;
-        this.field_70169_q = this.field_70165_t;
-        this.field_70167_r = this.field_70163_u;
-        this.field_70166_s = this.field_70161_v;
-        this.field_70142_S = this.field_70165_t;
-        this.field_70137_T = this.field_70163_u;
-        this.field_70136_U = this.field_70161_v;
-        this.field_70177_z = p_70012_7_;
-        this.field_70125_A = p_70012_8_;
-        this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+        this.posX = x;
+        this.posY = y;
+        this.posZ = z;
+        this.prevPosX = this.posX;
+        this.prevPosY = this.posY;
+        this.prevPosZ = this.posZ;
+        this.lastTickPosX = this.posX;
+        this.lastTickPosY = this.posY;
+        this.lastTickPosZ = this.posZ;
+        this.rotationYaw = yaw;
+        this.rotationPitch = pitch;
+        this.setPosition(this.posX, this.posY, this.posZ);
     }
 
-    public float func_70032_d(Entity p_70032_1_)
+    public float getDistanceToEntity(Entity entityIn)
     {
-        float f = (float)(this.field_70165_t - p_70032_1_.field_70165_t);
-        float f1 = (float)(this.field_70163_u - p_70032_1_.field_70163_u);
-        float f2 = (float)(this.field_70161_v - p_70032_1_.field_70161_v);
-        return MathHelper.func_76129_c(f * f + f1 * f1 + f2 * f2);
+        float f = (float)(this.posX - entityIn.posX);
+        float f1 = (float)(this.posY - entityIn.posY);
+        float f2 = (float)(this.posZ - entityIn.posZ);
+        return MathHelper.sqrt(f * f + f1 * f1 + f2 * f2);
     }
 
-    public double func_70092_e(double p_70092_1_, double p_70092_3_, double p_70092_5_)
+    public double getDistanceSq(double x, double y, double z)
     {
-        double d0 = this.field_70165_t - p_70092_1_;
-        double d1 = this.field_70163_u - p_70092_3_;
-        double d2 = this.field_70161_v - p_70092_5_;
+        double d0 = this.posX - x;
+        double d1 = this.posY - y;
+        double d2 = this.posZ - z;
         return d0 * d0 + d1 * d1 + d2 * d2;
     }
 
-    public double func_174818_b(BlockPos p_174818_1_)
+    public double getDistanceSq(BlockPos pos)
     {
-        return p_174818_1_.func_177954_c(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+        return pos.distanceSq(this.posX, this.posY, this.posZ);
     }
 
-    public double func_174831_c(BlockPos p_174831_1_)
+    public double getDistanceSqToCenter(BlockPos pos)
     {
-        return p_174831_1_.func_177957_d(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+        return pos.distanceSqToCenter(this.posX, this.posY, this.posZ);
     }
 
-    public double func_70011_f(double p_70011_1_, double p_70011_3_, double p_70011_5_)
+    public double getDistance(double x, double y, double z)
     {
-        double d0 = this.field_70165_t - p_70011_1_;
-        double d1 = this.field_70163_u - p_70011_3_;
-        double d2 = this.field_70161_v - p_70011_5_;
-        return (double)MathHelper.func_76133_a(d0 * d0 + d1 * d1 + d2 * d2);
+        double d0 = this.posX - x;
+        double d1 = this.posY - y;
+        double d2 = this.posZ - z;
+        return (double)MathHelper.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
     }
 
-    public double func_70068_e(Entity p_70068_1_)
+    public double getDistanceSqToEntity(Entity entityIn)
     {
-        double d0 = this.field_70165_t - p_70068_1_.field_70165_t;
-        double d1 = this.field_70163_u - p_70068_1_.field_70163_u;
-        double d2 = this.field_70161_v - p_70068_1_.field_70161_v;
+        double d0 = this.posX - entityIn.posX;
+        double d1 = this.posY - entityIn.posY;
+        double d2 = this.posZ - entityIn.posZ;
         return d0 * d0 + d1 * d1 + d2 * d2;
     }
 
-    public void func_70100_b_(EntityPlayer p_70100_1_)
+    public void onCollideWithPlayer(EntityPlayer entityIn)
     {
     }
 
-    public void func_70108_f(Entity p_70108_1_)
+    public void applyEntityCollision(Entity entityIn)
     {
-        if (!this.func_184223_x(p_70108_1_))
+        if (!this.isRidingSameEntity(entityIn))
         {
-            if (!p_70108_1_.field_70145_X && !this.field_70145_X)
+            if (!entityIn.noClip && !this.noClip)
             {
-                double d0 = p_70108_1_.field_70165_t - this.field_70165_t;
-                double d1 = p_70108_1_.field_70161_v - this.field_70161_v;
-                double d2 = MathHelper.func_76132_a(d0, d1);
+                double d0 = entityIn.posX - this.posX;
+                double d1 = entityIn.posZ - this.posZ;
+                double d2 = MathHelper.absMax(d0, d1);
 
                 if (d2 >= 0.009999999776482582D)
                 {
-                    d2 = (double)MathHelper.func_76133_a(d2);
+                    d2 = (double)MathHelper.sqrt(d2);
                     d0 = d0 / d2;
                     d1 = d1 / d2;
                     double d3 = 1.0D / d2;
@@ -1443,143 +1583,143 @@
                     d1 = d1 * d3;
                     d0 = d0 * 0.05000000074505806D;
                     d1 = d1 * 0.05000000074505806D;
-                    d0 = d0 * (double)(1.0F - this.field_70144_Y);
-                    d1 = d1 * (double)(1.0F - this.field_70144_Y);
+                    d0 = d0 * (double)(1.0F - this.entityCollisionReduction);
+                    d1 = d1 * (double)(1.0F - this.entityCollisionReduction);
 
-                    if (!this.func_184207_aI())
+                    if (!this.isBeingRidden())
                     {
-                        this.func_70024_g(-d0, 0.0D, -d1);
+                        this.addVelocity(-d0, 0.0D, -d1);
                     }
 
-                    if (!p_70108_1_.func_184207_aI())
+                    if (!entityIn.isBeingRidden())
                     {
-                        p_70108_1_.func_70024_g(d0, 0.0D, d1);
+                        entityIn.addVelocity(d0, 0.0D, d1);
                     }
                 }
             }
         }
     }
 
-    public void func_70024_g(double p_70024_1_, double p_70024_3_, double p_70024_5_)
+    public void addVelocity(double x, double y, double z)
     {
-        this.field_70159_w += p_70024_1_;
-        this.field_70181_x += p_70024_3_;
-        this.field_70179_y += p_70024_5_;
-        this.field_70160_al = true;
+        this.motionX += x;
+        this.motionY += y;
+        this.motionZ += z;
+        this.isAirBorne = true;
     }
 
-    protected void func_70018_K()
+    protected void setBeenAttacked()
     {
-        this.field_70133_I = true;
+        this.velocityChanged = true;
     }
 
-    public boolean func_70097_a(DamageSource p_70097_1_, float p_70097_2_)
+    public boolean attackEntityFrom(DamageSource source, float amount)
     {
-        if (this.func_180431_b(p_70097_1_))
+        if (this.isEntityInvulnerable(source))
         {
             return false;
         }
         else
         {
-            this.func_70018_K();
+            this.setBeenAttacked();
             return false;
         }
     }
 
-    public Vec3d func_70676_i(float p_70676_1_)
+    public Vec3d getLook(float partialTicks)
     {
-        if (p_70676_1_ == 1.0F)
+        if (partialTicks == 1.0F)
         {
-            return this.func_174806_f(this.field_70125_A, this.field_70177_z);
+            return this.getVectorForRotation(this.rotationPitch, this.rotationYaw);
         }
         else
         {
-            float f = this.field_70127_C + (this.field_70125_A - this.field_70127_C) * p_70676_1_;
-            float f1 = this.field_70126_B + (this.field_70177_z - this.field_70126_B) * p_70676_1_;
-            return this.func_174806_f(f, f1);
+            float f = this.prevRotationPitch + (this.rotationPitch - this.prevRotationPitch) * partialTicks;
+            float f1 = this.prevRotationYaw + (this.rotationYaw - this.prevRotationYaw) * partialTicks;
+            return this.getVectorForRotation(f, f1);
         }
     }
 
-    protected final Vec3d func_174806_f(float p_174806_1_, float p_174806_2_)
+    protected final Vec3d getVectorForRotation(float pitch, float yaw)
     {
-        float f = MathHelper.func_76134_b(-p_174806_2_ * 0.017453292F - (float)Math.PI);
-        float f1 = MathHelper.func_76126_a(-p_174806_2_ * 0.017453292F - (float)Math.PI);
-        float f2 = -MathHelper.func_76134_b(-p_174806_1_ * 0.017453292F);
-        float f3 = MathHelper.func_76126_a(-p_174806_1_ * 0.017453292F);
+        float f = MathHelper.cos(-yaw * 0.017453292F - (float)Math.PI);
+        float f1 = MathHelper.sin(-yaw * 0.017453292F - (float)Math.PI);
+        float f2 = -MathHelper.cos(-pitch * 0.017453292F);
+        float f3 = MathHelper.sin(-pitch * 0.017453292F);
         return new Vec3d((double)(f1 * f2), (double)f3, (double)(f * f2));
     }
 
-    public Vec3d func_174824_e(float p_174824_1_)
+    public Vec3d getPositionEyes(float partialTicks)
     {
-        if (p_174824_1_ == 1.0F)
+        if (partialTicks == 1.0F)
         {
-            return new Vec3d(this.field_70165_t, this.field_70163_u + (double)this.func_70047_e(), this.field_70161_v);
+            return new Vec3d(this.posX, this.posY + (double)this.getEyeHeight(), this.posZ);
         }
         else
         {
-            double d0 = this.field_70169_q + (this.field_70165_t - this.field_70169_q) * (double)p_174824_1_;
-            double d1 = this.field_70167_r + (this.field_70163_u - this.field_70167_r) * (double)p_174824_1_ + (double)this.func_70047_e();
-            double d2 = this.field_70166_s + (this.field_70161_v - this.field_70166_s) * (double)p_174824_1_;
+            double d0 = this.prevPosX + (this.posX - this.prevPosX) * (double)partialTicks;
+            double d1 = this.prevPosY + (this.posY - this.prevPosY) * (double)partialTicks + (double)this.getEyeHeight();
+            double d2 = this.prevPosZ + (this.posZ - this.prevPosZ) * (double)partialTicks;
             return new Vec3d(d0, d1, d2);
         }
     }
 
     @Nullable
     @SideOnly(Side.CLIENT)
-    public RayTraceResult func_174822_a(double p_174822_1_, float p_174822_3_)
+    public RayTraceResult rayTrace(double blockReachDistance, float partialTicks)
     {
-        Vec3d vec3d = this.func_174824_e(p_174822_3_);
-        Vec3d vec3d1 = this.func_70676_i(p_174822_3_);
-        Vec3d vec3d2 = vec3d.func_72441_c(vec3d1.field_72450_a * p_174822_1_, vec3d1.field_72448_b * p_174822_1_, vec3d1.field_72449_c * p_174822_1_);
-        return this.field_70170_p.func_147447_a(vec3d, vec3d2, false, false, true);
+        Vec3d vec3d = this.getPositionEyes(partialTicks);
+        Vec3d vec3d1 = this.getLook(partialTicks);
+        Vec3d vec3d2 = vec3d.addVector(vec3d1.xCoord * blockReachDistance, vec3d1.yCoord * blockReachDistance, vec3d1.zCoord * blockReachDistance);
+        return this.world.rayTraceBlocks(vec3d, vec3d2, false, false, true);
     }
 
-    public boolean func_70067_L()
+    public boolean canBeCollidedWith()
     {
         return false;
     }
 
-    public boolean func_70104_M()
+    public boolean canBePushed()
     {
         return false;
     }
 
-    public void func_70084_c(Entity p_70084_1_, int p_70084_2_)
+    public void addToPlayerScore(Entity entityIn, int amount)
     {
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean func_145770_h(double p_145770_1_, double p_145770_3_, double p_145770_5_)
+    public boolean isInRangeToRender3d(double x, double y, double z)
     {
-        double d0 = this.field_70165_t - p_145770_1_;
-        double d1 = this.field_70163_u - p_145770_3_;
-        double d2 = this.field_70161_v - p_145770_5_;
+        double d0 = this.posX - x;
+        double d1 = this.posY - y;
+        double d2 = this.posZ - z;
         double d3 = d0 * d0 + d1 * d1 + d2 * d2;
-        return this.func_70112_a(d3);
+        return this.isInRangeToRenderDist(d3);
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean func_70112_a(double p_70112_1_)
+    public boolean isInRangeToRenderDist(double distance)
     {
-        double d0 = this.func_174813_aQ().func_72320_b();
+        double d0 = this.getEntityBoundingBox().getAverageEdgeLength();
 
         if (Double.isNaN(d0))
         {
             d0 = 1.0D;
         }
 
-        d0 = d0 * 64.0D * field_70155_l;
-        return p_70112_1_ < d0 * d0;
+        d0 = d0 * 64.0D * renderDistanceWeight;
+        return distance < d0 * d0;
     }
 
-    public boolean func_184198_c(NBTTagCompound p_184198_1_)
+    public boolean writeToNBTAtomically(NBTTagCompound compound)
     {
-        String s = this.func_70022_Q();
+        String s = this.getEntityString();
 
-        if (!this.field_70128_L && s != null)
+        if (!this.isDead && s != null)
         {
-            p_184198_1_.func_74778_a("id", s);
-            this.func_189511_e(p_184198_1_);
+            compound.setString("id", s);
+            this.writeToNBT(compound);
             return true;
         }
         else
@@ -1588,14 +1728,14 @@
         }
     }
 
-    public boolean func_70039_c(NBTTagCompound p_70039_1_)
+    public boolean writeToNBTOptional(NBTTagCompound compound)
     {
-        String s = this.func_70022_Q();
+        String s = this.getEntityString();
 
-        if (!this.field_70128_L && s != null && !this.func_184218_aH())
+        if (!this.isDead && s != null && !this.isRiding())
         {
-            p_70039_1_.func_74778_a("id", s);
-            this.func_189511_e(p_70039_1_);
+            compound.setString("id", s);
+            this.writeToNBT(compound);
             return true;
         }
         else
@@ -1604,403 +1744,487 @@
         }
     }
 
-    public static void func_190533_a(DataFixer p_190533_0_)
+    public static void registerFixes(DataFixer fixer)
     {
-        p_190533_0_.func_188258_a(FixTypes.ENTITY, new IDataWalker()
+        fixer.registerWalker(FixTypes.ENTITY, new IDataWalker()
         {
-            public NBTTagCompound func_188266_a(IDataFixer p_188266_1_, NBTTagCompound p_188266_2_, int p_188266_3_)
+            public NBTTagCompound process(IDataFixer fixer, NBTTagCompound compound, int versionIn)
             {
-                if (p_188266_2_.func_150297_b("Passengers", 9))
+                if (compound.hasKey("Passengers", 9))
                 {
-                    NBTTagList nbttaglist = p_188266_2_.func_150295_c("Passengers", 10);
+                    NBTTagList nbttaglist = compound.getTagList("Passengers", 10);
 
-                    for (int i = 0; i < nbttaglist.func_74745_c(); ++i)
+                    for (int i = 0; i < nbttaglist.tagCount(); ++i)
                     {
-                        nbttaglist.func_150304_a(i, p_188266_1_.func_188251_a(FixTypes.ENTITY, nbttaglist.func_150305_b(i), p_188266_3_));
+                        nbttaglist.set(i, fixer.process(FixTypes.ENTITY, nbttaglist.getCompoundTagAt(i), versionIn));
                     }
                 }
 
-                return p_188266_2_;
+                return compound;
             }
         });
     }
 
-    public NBTTagCompound func_189511_e(NBTTagCompound p_189511_1_)
+    public NBTTagCompound writeToNBT(NBTTagCompound compound)
     {
         try
         {
-            p_189511_1_.func_74782_a("Pos", this.func_70087_a(new double[] {this.field_70165_t, this.field_70163_u, this.field_70161_v}));
-            p_189511_1_.func_74782_a("Motion", this.func_70087_a(new double[] {this.field_70159_w, this.field_70181_x, this.field_70179_y}));
-            p_189511_1_.func_74782_a("Rotation", this.func_70049_a(new float[] {this.field_70177_z, this.field_70125_A}));
-            p_189511_1_.func_74776_a("FallDistance", this.field_70143_R);
-            p_189511_1_.func_74777_a("Fire", (short)this.field_190534_ay);
-            p_189511_1_.func_74777_a("Air", (short)this.func_70086_ai());
-            p_189511_1_.func_74757_a("OnGround", this.field_70122_E);
-            p_189511_1_.func_74768_a("Dimension", this.field_71093_bK);
-            p_189511_1_.func_74757_a("Invulnerable", this.field_83001_bt);
-            p_189511_1_.func_74768_a("PortalCooldown", this.field_71088_bW);
-            p_189511_1_.func_186854_a("UUID", this.func_110124_au());
+            // CraftBukkit start - Checking for NaN pitch/yaw and resetting to zero
+            // TODO: make sure this is the best way to address this.
+            if (Float.isNaN(this.rotationYaw)) {
+                this.rotationYaw = 0;
+            }
 
-            if (this.func_145818_k_())
+            if (Float.isNaN(this.rotationPitch)) {
+                this.rotationPitch = 0;
+            }
+            // CraftBukkit end
+            compound.setTag("Pos", this.newDoubleNBTList(new double[] {this.posX, this.posY, this.posZ}));
+            compound.setTag("Motion", this.newDoubleNBTList(new double[] {this.motionX, this.motionY, this.motionZ}));
+            compound.setTag("Rotation", this.newFloatNBTList(new float[] {this.rotationYaw, this.rotationPitch}));
+            compound.setFloat("FallDistance", this.fallDistance);
+            compound.setShort("Fire", (short)this.fire);
+            compound.setShort("Air", (short)this.getAir());
+            compound.setBoolean("OnGround", this.onGround);
+            compound.setInteger("Dimension", this.dimension);
+            compound.setBoolean("Invulnerable", this.invulnerable);
+            compound.setInteger("PortalCooldown", this.timeUntilPortal);
+            compound.setUniqueId("UUID", this.getUniqueID());
+            // CraftBukkit start
+            // PAIL: Check above UUID reads 1.8 properly, ie: UUIDMost / UUIDLeast
+            compound.setLong("WorldUUIDLeast", this.world.getSaveHandler().getUUID().getLeastSignificantBits());
+            compound.setLong("WorldUUIDMost", this.world.getSaveHandler().getUUID().getMostSignificantBits());
+            compound.setInteger("Bukkit.updateLevel", CURRENT_LEVEL);
+            // CraftBukkit end
+            if (this.hasCustomName())
             {
-                p_189511_1_.func_74778_a("CustomName", this.func_95999_t());
+                compound.setString("CustomName", this.getCustomNameTag());
             }
 
-            if (this.func_174833_aM())
+            if (this.getAlwaysRenderNameTag())
             {
-                p_189511_1_.func_74757_a("CustomNameVisible", this.func_174833_aM());
+                compound.setBoolean("CustomNameVisible", this.getAlwaysRenderNameTag());
             }
 
-            this.field_174837_as.func_179670_b(p_189511_1_);
+            this.cmdResultStats.writeStatsToNBT(compound);
 
-            if (this.func_174814_R())
+            if (this.isSilent())
             {
-                p_189511_1_.func_74757_a("Silent", this.func_174814_R());
+                compound.setBoolean("Silent", this.isSilent());
             }
 
-            if (this.func_189652_ae())
+            if (this.hasNoGravity())
             {
-                p_189511_1_.func_74757_a("NoGravity", this.func_189652_ae());
+                compound.setBoolean("NoGravity", this.hasNoGravity());
             }
 
-            if (this.field_184238_ar)
+            if (this.glowing)
             {
-                p_189511_1_.func_74757_a("Glowing", this.field_184238_ar);
+                compound.setBoolean("Glowing", this.glowing);
             }
+            compound.setBoolean("UpdateBlocked", updateBlocked);
 
-            if (this.field_184236_aF.size() > 0)
+            if (this.tags.size() > 0)
             {
                 NBTTagList nbttaglist = new NBTTagList();
 
-                for (String s : this.field_184236_aF)
+                for (String s : this.tags)
                 {
-                    nbttaglist.func_74742_a(new NBTTagString(s));
+                    nbttaglist.appendTag(new NBTTagString(s));
                 }
 
-                p_189511_1_.func_74782_a("Tags", nbttaglist);
+                compound.setTag("Tags", nbttaglist);
             }
 
-            this.func_70014_b(p_189511_1_);
+            if (customEntityData != null) compound.setTag("ForgeData", customEntityData);
+            if (this.capabilities != null) compound.setTag("ForgeCaps", this.capabilities.serializeNBT());
 
-            if (this.func_184207_aI())
+            this.writeEntityToNBT(compound);
+
+            if (this.isBeingRidden())
             {
                 NBTTagList nbttaglist1 = new NBTTagList();
 
-                for (Entity entity : this.func_184188_bt())
+                for (Entity entity : this.getPassengers())
                 {
                     NBTTagCompound nbttagcompound = new NBTTagCompound();
 
-                    if (entity.func_184198_c(nbttagcompound))
+                    if (entity.writeToNBTAtomically(nbttagcompound))
                     {
-                        nbttaglist1.func_74742_a(nbttagcompound);
+                        nbttaglist1.appendTag(nbttagcompound);
                     }
                 }
 
-                if (!nbttaglist1.func_82582_d())
+                if (!nbttaglist1.hasNoTags())
                 {
-                    p_189511_1_.func_74782_a("Passengers", nbttaglist1);
+                    compound.setTag("Passengers", nbttaglist1);
                 }
             }
 
-            return p_189511_1_;
+            return compound;
         }
         catch (Throwable throwable)
         {
-            CrashReport crashreport = CrashReport.func_85055_a(throwable, "Saving entity NBT");
-            CrashReportCategory crashreportcategory = crashreport.func_85058_a("Entity being saved");
-            this.func_85029_a(crashreportcategory);
+            CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Saving entity NBT");
+            CrashReportCategory crashreportcategory = crashreport.makeCategory("Entity being saved");
+            this.addEntityCrashInfo(crashreportcategory);
             throw new ReportedException(crashreport);
         }
     }
 
-    public void func_70020_e(NBTTagCompound p_70020_1_)
+    public void readFromNBT(NBTTagCompound compound)
     {
         try
         {
-            NBTTagList nbttaglist = p_70020_1_.func_150295_c("Pos", 6);
-            NBTTagList nbttaglist2 = p_70020_1_.func_150295_c("Motion", 6);
-            NBTTagList nbttaglist3 = p_70020_1_.func_150295_c("Rotation", 5);
-            this.field_70159_w = nbttaglist2.func_150309_d(0);
-            this.field_70181_x = nbttaglist2.func_150309_d(1);
-            this.field_70179_y = nbttaglist2.func_150309_d(2);
+            NBTTagList nbttaglist = compound.getTagList("Pos", 6);
+            NBTTagList nbttaglist2 = compound.getTagList("Motion", 6);
+            NBTTagList nbttaglist3 = compound.getTagList("Rotation", 5);
+            this.motionX = nbttaglist2.getDoubleAt(0);
+            this.motionY = nbttaglist2.getDoubleAt(1);
+            this.motionZ = nbttaglist2.getDoubleAt(2);
 
-            if (Math.abs(this.field_70159_w) > 10.0D)
+            if (Math.abs(this.motionX) > 10.0D)
             {
-                this.field_70159_w = 0.0D;
+                this.motionX = 0.0D;
             }
 
-            if (Math.abs(this.field_70181_x) > 10.0D)
+            if (Math.abs(this.motionY) > 10.0D)
             {
-                this.field_70181_x = 0.0D;
+                this.motionY = 0.0D;
             }
 
-            if (Math.abs(this.field_70179_y) > 10.0D)
+            if (Math.abs(this.motionZ) > 10.0D)
             {
-                this.field_70179_y = 0.0D;
+                this.motionZ = 0.0D;
             }
 
-            this.field_70165_t = nbttaglist.func_150309_d(0);
-            this.field_70163_u = nbttaglist.func_150309_d(1);
-            this.field_70161_v = nbttaglist.func_150309_d(2);
-            this.field_70142_S = this.field_70165_t;
-            this.field_70137_T = this.field_70163_u;
-            this.field_70136_U = this.field_70161_v;
-            this.field_70169_q = this.field_70165_t;
-            this.field_70167_r = this.field_70163_u;
-            this.field_70166_s = this.field_70161_v;
-            this.field_70177_z = nbttaglist3.func_150308_e(0);
-            this.field_70125_A = nbttaglist3.func_150308_e(1);
-            this.field_70126_B = this.field_70177_z;
-            this.field_70127_C = this.field_70125_A;
-            this.func_70034_d(this.field_70177_z);
-            this.func_181013_g(this.field_70177_z);
-            this.field_70143_R = p_70020_1_.func_74760_g("FallDistance");
-            this.field_190534_ay = p_70020_1_.func_74765_d("Fire");
-            this.func_70050_g(p_70020_1_.func_74765_d("Air"));
-            this.field_70122_E = p_70020_1_.func_74767_n("OnGround");
+            this.posX = nbttaglist.getDoubleAt(0);
+            this.posY = nbttaglist.getDoubleAt(1);
+            this.posZ = nbttaglist.getDoubleAt(2);
+            this.lastTickPosX = this.posX;
+            this.lastTickPosY = this.posY;
+            this.lastTickPosZ = this.posZ;
+            this.prevPosX = this.posX;
+            this.prevPosY = this.posY;
+            this.prevPosZ = this.posZ;
+            this.rotationYaw = nbttaglist3.getFloatAt(0);
+            this.rotationPitch = nbttaglist3.getFloatAt(1);
+            this.prevRotationYaw = this.rotationYaw;
+            this.prevRotationPitch = this.rotationPitch;
+            this.setRotationYawHead(this.rotationYaw);
+            this.setRenderYawOffset(this.rotationYaw);
+            this.fallDistance = compound.getFloat("FallDistance");
+            this.fire = compound.getShort("Fire");
+            this.setAir(compound.getShort("Air"));
+            this.onGround = compound.getBoolean("OnGround");
 
-            if (p_70020_1_.func_74764_b("Dimension"))
+            if (compound.hasKey("Dimension"))
             {
-                this.field_71093_bK = p_70020_1_.func_74762_e("Dimension");
+                this.dimension = compound.getInteger("Dimension");
             }
 
-            this.field_83001_bt = p_70020_1_.func_74767_n("Invulnerable");
-            this.field_71088_bW = p_70020_1_.func_74762_e("PortalCooldown");
+            this.invulnerable = compound.getBoolean("Invulnerable");
+            this.timeUntilPortal = compound.getInteger("PortalCooldown");
 
-            if (p_70020_1_.func_186855_b("UUID"))
+            if (compound.hasUniqueId("UUID"))
             {
-                this.field_96093_i = p_70020_1_.func_186857_a("UUID");
-                this.field_189513_ar = this.field_96093_i.toString();
+                this.entityUniqueID = compound.getUniqueId("UUID");
+                this.cachedUniqueIdString = this.entityUniqueID.toString();
             }
 
-            this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
-            this.func_70101_b(this.field_70177_z, this.field_70125_A);
+            this.setPosition(this.posX, this.posY, this.posZ);
+            this.setRotation(this.rotationYaw, this.rotationPitch);
 
-            if (p_70020_1_.func_150297_b("CustomName", 8))
+            if (compound.hasKey("CustomName", 8))
             {
-                this.func_96094_a(p_70020_1_.func_74779_i("CustomName"));
+                this.setCustomNameTag(compound.getString("CustomName"));
             }
 
-            this.func_174805_g(p_70020_1_.func_74767_n("CustomNameVisible"));
-            this.field_174837_as.func_179668_a(p_70020_1_);
-            this.func_174810_b(p_70020_1_.func_74767_n("Silent"));
-            this.func_189654_d(p_70020_1_.func_74767_n("NoGravity"));
-            this.func_184195_f(p_70020_1_.func_74767_n("Glowing"));
+            this.setAlwaysRenderNameTag(compound.getBoolean("CustomNameVisible"));
+            this.cmdResultStats.readStatsFromNBT(compound);
+            this.setSilent(compound.getBoolean("Silent"));
+            this.setNoGravity(compound.getBoolean("NoGravity"));
+            this.setGlowing(compound.getBoolean("Glowing"));
+            updateBlocked = compound.getBoolean("UpdateBlocked");
 
-            if (p_70020_1_.func_150297_b("Tags", 9))
+            if (compound.hasKey("ForgeData")) customEntityData = compound.getCompoundTag("ForgeData");
+            if (this.capabilities != null && compound.hasKey("ForgeCaps")) this.capabilities.deserializeNBT(compound.getCompoundTag("ForgeCaps"));
+
+            if (compound.hasKey("Tags", 9))
             {
-                this.field_184236_aF.clear();
-                NBTTagList nbttaglist1 = p_70020_1_.func_150295_c("Tags", 8);
-                int i = Math.min(nbttaglist1.func_74745_c(), 1024);
+                this.tags.clear();
+                NBTTagList nbttaglist1 = compound.getTagList("Tags", 8);
+                int i = Math.min(nbttaglist1.tagCount(), 1024);
 
                 for (int j = 0; j < i; ++j)
                 {
-                    this.field_184236_aF.add(nbttaglist1.func_150307_f(j));
+                    this.tags.add(nbttaglist1.getStringTagAt(j));
                 }
             }
+            this.readEntityFromNBT(compound);
 
-            this.func_70037_a(p_70020_1_);
-
-            if (this.func_142008_O())
+            if (this.shouldSetPosAfterLoading())
             {
-                this.func_70107_b(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+                this.setPosition(this.posX, this.posY, this.posZ);
             }
+            // CraftBukkit start
+            if (this instanceof EntityLivingBase) {
+                EntityLivingBase entity = (EntityLivingBase) this;
+
+                // Reset the persistence for tamed animals
+                if (entity instanceof EntityTameable && !isLevelAtLeast(compound, 2) && !compound.getBoolean("PersistenceRequired")) {
+                    EntityLiving entityinsentient = (EntityLiving) entity;
+                    entityinsentient.persistenceRequired = !entityinsentient.canDespawn();
+                }
+            }
+            // CraftBukkit end
+
+            // CraftBukkit start - Exempt Vehicles from notch's sanity check
+            if (!(getBukkitEntity() instanceof Vehicle)) {
+                if (Math.abs(this.motionX) > 10.0D) {
+                    this.motionX = 0.0D;
+                }
+
+                if (Math.abs(this.motionY) > 10.0D) {
+                    this.motionY = 0.0D;
+                }
+
+                if (Math.abs(this.motionZ) > 10.0D) {
+                    this.motionZ = 0.0D;
+                }
+            }
+            // CraftBukkit end
+            // CraftBukkit start - Reset world
+            if (this instanceof EntityPlayerMP) {
+                Server server = Bukkit.getServer();
+                org.bukkit.World bworld = null;
+
+                // TODO: Remove World related checks, replaced with WorldUID
+                String worldName = compound.getString("world");
+
+                if (compound.hasKey("WorldUUIDMost") && compound.hasKey("WorldUUIDLeast")) {
+                    UUID uid = new UUID(compound.getLong("WorldUUIDMost"), compound.getLong("WorldUUIDLeast"));
+                    bworld = server.getWorld(uid);
+                } else {
+                    bworld = server.getWorld(worldName);
+                }
+
+                if (bworld == null) {
+                    EntityPlayerMP entityPlayer = (EntityPlayerMP) this;
+                    bworld = ((CraftServer) server).getServer().worldServerForDimension(entityPlayer.dimension).getWorld();
+                }
+
+                setWorld(bworld == null? null : ((CraftWorld) bworld).getHandle());
+            }
+            // CraftBukkit end
+
         }
         catch (Throwable throwable)
         {
-            CrashReport crashreport = CrashReport.func_85055_a(throwable, "Loading entity NBT");
-            CrashReportCategory crashreportcategory = crashreport.func_85058_a("Entity being loaded");
-            this.func_85029_a(crashreportcategory);
+            CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Loading entity NBT");
+            CrashReportCategory crashreportcategory = crashreport.makeCategory("Entity being loaded");
+            this.addEntityCrashInfo(crashreportcategory);
             throw new ReportedException(crashreport);
         }
     }
 
-    protected boolean func_142008_O()
+    protected boolean shouldSetPosAfterLoading()
     {
         return true;
     }
 
     @Nullable
-    protected final String func_70022_Q()
+    protected final String getEntityString()
     {
-        ResourceLocation resourcelocation = EntityList.func_191301_a(this);
+        ResourceLocation resourcelocation = EntityList.getKey(this);
         return resourcelocation == null ? null : resourcelocation.toString();
     }
 
-    protected abstract void func_70037_a(NBTTagCompound p_70037_1_);
+    protected abstract void readEntityFromNBT(NBTTagCompound compound);
 
-    protected abstract void func_70014_b(NBTTagCompound p_70014_1_);
+    protected abstract void writeEntityToNBT(NBTTagCompound compound);
 
-    protected NBTTagList func_70087_a(double... p_70087_1_)
+    protected NBTTagList newDoubleNBTList(double... numbers)
     {
         NBTTagList nbttaglist = new NBTTagList();
 
-        for (double d0 : p_70087_1_)
+        for (double d0 : numbers)
         {
-            nbttaglist.func_74742_a(new NBTTagDouble(d0));
+            nbttaglist.appendTag(new NBTTagDouble(d0));
         }
 
         return nbttaglist;
     }
 
-    protected NBTTagList func_70049_a(float... p_70049_1_)
+    protected NBTTagList newFloatNBTList(float... numbers)
     {
         NBTTagList nbttaglist = new NBTTagList();
 
-        for (float f : p_70049_1_)
+        for (float f : numbers)
         {
-            nbttaglist.func_74742_a(new NBTTagFloat(f));
+            nbttaglist.appendTag(new NBTTagFloat(f));
         }
 
         return nbttaglist;
     }
 
     @Nullable
-    public EntityItem func_145779_a(Item p_145779_1_, int p_145779_2_)
+    public EntityItem dropItem(Item itemIn, int size)
     {
-        return this.func_145778_a(p_145779_1_, p_145779_2_, 0.0F);
+        return this.dropItemWithOffset(itemIn, size, 0.0F);
     }
 
     @Nullable
-    public EntityItem func_145778_a(Item p_145778_1_, int p_145778_2_, float p_145778_3_)
+    public EntityItem dropItemWithOffset(Item itemIn, int size, float offsetY)
     {
-        return this.func_70099_a(new ItemStack(p_145778_1_, p_145778_2_, 0), p_145778_3_);
+        return this.entityDropItem(new ItemStack(itemIn, size, 0), offsetY);
     }
 
     @Nullable
-    public EntityItem func_70099_a(ItemStack p_70099_1_, float p_70099_2_)
+    public EntityItem entityDropItem(ItemStack stack, float offsetY)
     {
-        if (p_70099_1_.func_190926_b())
+        if (stack.isEmpty())
         {
             return null;
         }
         else
         {
-            EntityItem entityitem = new EntityItem(this.field_70170_p, this.field_70165_t, this.field_70163_u + (double)p_70099_2_, this.field_70161_v, p_70099_1_);
-            entityitem.func_174869_p();
-            this.field_70170_p.func_72838_d(entityitem);
+            // CraftBukkit start - Capture drops for death event
+            if (this instanceof net.minecraft.entity.EntityLivingBase && !((net.minecraft.entity.EntityLivingBase) this).forceDrops) {
+                ((net.minecraft.entity.EntityLivingBase) this).drops.add(org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(stack));
+                return null;
+            }
+            // CraftBukkit end
+            EntityItem entityitem = new EntityItem(this.world, this.posX, this.posY + (double)offsetY, this.posZ, stack);
+            entityitem.setDefaultPickupDelay();
+            if (captureDrops)
+                this.capturedDrops.add(entityitem);
+            else
+                this.world.spawnEntity(entityitem);
             return entityitem;
         }
     }
 
-    public boolean func_70089_S()
+    public boolean isEntityAlive()
     {
-        return !this.field_70128_L;
+        return !this.isDead;
     }
 
-    public boolean func_70094_T()
+    public boolean isEntityInsideOpaqueBlock()
     {
-        if (this.field_70145_X)
+        if (this.noClip)
         {
             return false;
         }
         else
         {
-            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
             for (int i = 0; i < 8; ++i)
             {
-                int j = MathHelper.func_76128_c(this.field_70163_u + (double)(((float)((i >> 0) % 2) - 0.5F) * 0.1F) + (double)this.func_70047_e());
-                int k = MathHelper.func_76128_c(this.field_70165_t + (double)(((float)((i >> 1) % 2) - 0.5F) * this.field_70130_N * 0.8F));
-                int l = MathHelper.func_76128_c(this.field_70161_v + (double)(((float)((i >> 2) % 2) - 0.5F) * this.field_70130_N * 0.8F));
+                int j = MathHelper.floor(this.posY + (double)(((float)((i >> 0) % 2) - 0.5F) * 0.1F) + (double)this.getEyeHeight());
+                int k = MathHelper.floor(this.posX + (double)(((float)((i >> 1) % 2) - 0.5F) * this.width * 0.8F));
+                int l = MathHelper.floor(this.posZ + (double)(((float)((i >> 2) % 2) - 0.5F) * this.width * 0.8F));
 
-                if (blockpos$pooledmutableblockpos.func_177958_n() != k || blockpos$pooledmutableblockpos.func_177956_o() != j || blockpos$pooledmutableblockpos.func_177952_p() != l)
+                if (blockpos$pooledmutableblockpos.getX() != k || blockpos$pooledmutableblockpos.getY() != j || blockpos$pooledmutableblockpos.getZ() != l)
                 {
-                    blockpos$pooledmutableblockpos.func_181079_c(k, j, l);
+                    blockpos$pooledmutableblockpos.setPos(k, j, l);
 
-                    if (this.field_70170_p.func_180495_p(blockpos$pooledmutableblockpos).func_191058_s())
+                    if (this.world.getBlockState(blockpos$pooledmutableblockpos).causesSuffocation())
                     {
-                        blockpos$pooledmutableblockpos.func_185344_t();
+                        blockpos$pooledmutableblockpos.release();
                         return true;
                     }
                 }
             }
 
-            blockpos$pooledmutableblockpos.func_185344_t();
+            blockpos$pooledmutableblockpos.release();
             return false;
         }
     }
 
-    public boolean func_184230_a(EntityPlayer p_184230_1_, EnumHand p_184230_2_)
+    public boolean processInitialInteract(EntityPlayer player, EnumHand hand)
     {
         return false;
     }
 
     @Nullable
-    public AxisAlignedBB func_70114_g(Entity p_70114_1_)
+    public AxisAlignedBB getCollisionBox(Entity entityIn)
     {
         return null;
     }
 
-    public void func_70098_U()
+    public void updateRidden()
     {
-        Entity entity = this.func_184187_bx();
+        Entity entity = this.getRidingEntity();
 
-        if (this.func_184218_aH() && entity.field_70128_L)
+        if (this.isRiding() && entity.isDead)
         {
-            this.func_184210_p();
+            this.dismountRidingEntity();
         }
         else
         {
-            this.field_70159_w = 0.0D;
-            this.field_70181_x = 0.0D;
-            this.field_70179_y = 0.0D;
-            this.func_70071_h_();
+            this.motionX = 0.0D;
+            this.motionY = 0.0D;
+            this.motionZ = 0.0D;
+            if(!updateBlocked)
+            this.onUpdate();
 
-            if (this.func_184218_aH())
+            if (this.isRiding())
             {
-                entity.func_184232_k(this);
+                entity.updatePassenger(this);
             }
         }
     }
 
-    public void func_184232_k(Entity p_184232_1_)
+    public void updatePassenger(Entity passenger)
     {
-        if (this.func_184196_w(p_184232_1_))
+        if (this.isPassenger(passenger))
         {
-            p_184232_1_.func_70107_b(this.field_70165_t, this.field_70163_u + this.func_70042_X() + p_184232_1_.func_70033_W(), this.field_70161_v);
+            passenger.setPosition(this.posX, this.posY + this.getMountedYOffset() + passenger.getYOffset(), this.posZ);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_184190_l(Entity p_184190_1_)
+    public void applyOrientationToEntity(Entity entityToUpdate)
     {
     }
 
-    public double func_70033_W()
+    public double getYOffset()
     {
         return 0.0D;
     }
 
-    public double func_70042_X()
+    public double getMountedYOffset()
     {
-        return (double)this.field_70131_O * 0.75D;
+        return (double)this.height * 0.75D;
     }
 
-    public boolean func_184220_m(Entity p_184220_1_)
+    public boolean startRiding(Entity entityIn)
     {
-        return this.func_184205_a(p_184220_1_, false);
+        return this.startRiding(entityIn, false);
     }
 
-    public boolean func_184205_a(Entity p_184205_1_, boolean p_184205_2_)
+    public boolean startRiding(Entity entityIn, boolean force)
     {
-        for (Entity entity = p_184205_1_; entity.field_184239_as != null; entity = entity.field_184239_as)
+        for (Entity entity = entityIn; entity.ridingEntity != null; entity = entity.ridingEntity)
         {
-            if (entity.field_184239_as == this)
+            if (entity.ridingEntity == this)
             {
                 return false;
             }
         }
 
-        if (p_184205_2_ || this.func_184228_n(p_184205_1_) && p_184205_1_.func_184219_q(this))
+        if (!net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, entityIn, true)) return false;
+        if (force || this.canBeRidden(entityIn) && entityIn.canFitPassenger(this))
         {
-            if (this.func_184218_aH())
+            if (this.isRiding())
             {
-                this.func_184210_p();
+                this.dismountRidingEntity();
             }
 
-            this.field_184239_as = p_184205_1_;
-            this.field_184239_as.func_184200_o(this);
+            this.ridingEntity = entityIn;
+            this.ridingEntity.addPassenger(this);
             return true;
         }
         else
@@ -2009,305 +2233,373 @@
         }
     }
 
-    protected boolean func_184228_n(Entity p_184228_1_)
+    protected boolean canBeRidden(Entity entityIn)
     {
-        return this.field_184245_j <= 0;
+        return this.rideCooldown <= 0;
     }
 
-    public void func_184226_ay()
+    public void removePassengers()
     {
-        for (int i = this.field_184244_h.size() - 1; i >= 0; --i)
+        for (int i = this.riddenByEntities.size() - 1; i >= 0; --i)
         {
-            ((Entity)this.field_184244_h.get(i)).func_184210_p();
+            ((Entity)this.riddenByEntities.get(i)).dismountRidingEntity();
         }
     }
 
-    public void func_184210_p()
+    public void dismountRidingEntity()
     {
-        if (this.field_184239_as != null)
+        if (this.ridingEntity != null)
         {
-            Entity entity = this.field_184239_as;
-            this.field_184239_as = null;
-            entity.func_184225_p(this);
+            Entity entity = this.ridingEntity;
+            if (!net.minecraftforge.event.ForgeEventFactory.canMountEntity(this, entity, false)) return;
+            this.ridingEntity = null;
+            entity.removePassenger(this);
         }
     }
 
-    protected void func_184200_o(Entity p_184200_1_)
+    protected void addPassenger(Entity passenger)
     {
-        if (p_184200_1_.func_184187_bx() != this)
+        if (passenger.getRidingEntity() != this)
         {
             throw new IllegalStateException("Use x.startRiding(y), not y.addPassenger(x)");
         }
         else
         {
-            if (!this.field_70170_p.field_72995_K && p_184200_1_ instanceof EntityPlayer && !(this.func_184179_bs() instanceof EntityPlayer))
+            // CraftBukkit start
+            Preconditions.checkState(!passenger.riddenByEntities.contains(this), "Circular entity riding! %s %s", this, passenger);
+
+            CraftEntity craft = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+            net.minecraft.entity.Entity orig = craft == null ? null : craft.getHandle();
+            if (getBukkitEntity() instanceof Vehicle && passenger.getBukkitEntity() instanceof LivingEntity && passenger.world.isChunkLoaded((int) passenger.posX >> 4, (int) passenger.posZ >> 4, false)) { // Boolean not used
+                VehicleEnterEvent event = new VehicleEnterEvent(
+                        (Vehicle) getBukkitEntity(),
+                        passenger.getBukkitEntity()
+                );
+                Bukkit.getPluginManager().callEvent(event);
+                CraftEntity craftn = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+                net.minecraft.entity.Entity n = craftn == null ? null : craftn.getHandle();
+                if (event.isCancelled() || n != orig) {
+                    return;
+                }
+            }
+            // CraftBukkit end
+            if (!this.world.isRemote && passenger instanceof EntityPlayer && !(this.getControllingPassenger() instanceof EntityPlayer))
             {
-                this.field_184244_h.add(0, p_184200_1_);
+                this.riddenByEntities.add(0, passenger);
             }
             else
             {
-                this.field_184244_h.add(p_184200_1_);
+                this.riddenByEntities.add(passenger);
             }
         }
     }
 
-    protected void func_184225_p(Entity p_184225_1_)
+    protected void removePassenger(Entity passenger)
     {
-        if (p_184225_1_.func_184187_bx() == this)
+        if (passenger.getRidingEntity() == this)
         {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
         }
         else
         {
-            this.field_184244_h.remove(p_184225_1_);
-            p_184225_1_.field_184245_j = 60;
+            // CraftBukkit start
+            CraftEntity craft = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+            Entity orig = craft == null ? null : craft.getHandle();
+            if (getBukkitEntity() instanceof Vehicle && passenger.getBukkitEntity() instanceof LivingEntity) {
+                VehicleExitEvent event = new VehicleExitEvent(
+                        (Vehicle) getBukkitEntity(),
+                        (LivingEntity) passenger.getBukkitEntity()
+                );
+                Bukkit.getPluginManager().callEvent(event);
+                CraftEntity craftn = (CraftEntity) passenger.getBukkitEntity().getVehicle();
+                Entity n = craftn == null ? null : craftn.getHandle();
+                if (event.isCancelled() || n != orig) {
+                    return;
+                }
+            }
+            // CraftBukkit end
+            this.riddenByEntities.remove(passenger);
+            passenger.rideCooldown = 60;
         }
     }
 
-    protected boolean func_184219_q(Entity p_184219_1_)
+    protected boolean canFitPassenger(Entity passenger)
     {
-        return this.func_184188_bt().size() < 1;
+        return this.getPassengers().size() < 1;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_180426_a(double p_180426_1_, double p_180426_3_, double p_180426_5_, float p_180426_7_, float p_180426_8_, int p_180426_9_, boolean p_180426_10_)
+    public void setPositionAndRotationDirect(double x, double y, double z, float yaw, float pitch, int posRotationIncrements, boolean teleport)
     {
-        this.func_70107_b(p_180426_1_, p_180426_3_, p_180426_5_);
-        this.func_70101_b(p_180426_7_, p_180426_8_);
+        this.setPosition(x, y, z);
+        this.setRotation(yaw, pitch);
     }
 
-    public float func_70111_Y()
+    public float getCollisionBorderSize()
     {
         return 0.0F;
     }
 
-    public Vec3d func_70040_Z()
+    public Vec3d getLookVec()
     {
         return null;
     }
 
     @SideOnly(Side.CLIENT)
-    public Vec2f func_189653_aC()
+    public Vec2f getPitchYaw()
     {
-        Vec2f vec2f = new Vec2f(this.field_70125_A, this.field_70177_z);
+        Vec2f vec2f = new Vec2f(this.rotationPitch, this.rotationYaw);
         return vec2f;
     }
 
     @SideOnly(Side.CLIENT)
-    public Vec3d func_189651_aD()
+    public Vec3d getForward()
     {
-        return Vec3d.func_189984_a(this.func_189653_aC());
+        return Vec3d.fromPitchYawVector(this.getPitchYaw());
     }
 
-    public void func_181015_d(BlockPos p_181015_1_)
+    public void setPortal(BlockPos pos)
     {
-        if (this.field_71088_bW > 0)
+        if (this.timeUntilPortal > 0)
         {
-            this.field_71088_bW = this.func_82147_ab();
+            this.timeUntilPortal = this.getPortalCooldown();
         }
         else
         {
-            if (!this.field_70170_p.field_72995_K && !p_181015_1_.equals(this.field_181016_an))
+            if (!this.world.isRemote && !pos.equals(this.lastPortalPos))
             {
-                this.field_181016_an = new BlockPos(p_181015_1_);
-                BlockPattern.PatternHelper blockpattern$patternhelper = Blocks.field_150427_aO.func_181089_f(this.field_70170_p, this.field_181016_an);
-                double d0 = blockpattern$patternhelper.func_177669_b().func_176740_k() == EnumFacing.Axis.X ? (double)blockpattern$patternhelper.func_181117_a().func_177952_p() : (double)blockpattern$patternhelper.func_181117_a().func_177958_n();
-                double d1 = blockpattern$patternhelper.func_177669_b().func_176740_k() == EnumFacing.Axis.X ? this.field_70161_v : this.field_70165_t;
-                d1 = Math.abs(MathHelper.func_181160_c(d1 - (double)(blockpattern$patternhelper.func_177669_b().func_176746_e().func_176743_c() == EnumFacing.AxisDirection.NEGATIVE ? 1 : 0), d0, d0 - (double)blockpattern$patternhelper.func_181118_d()));
-                double d2 = MathHelper.func_181160_c(this.field_70163_u - 1.0D, (double)blockpattern$patternhelper.func_181117_a().func_177956_o(), (double)(blockpattern$patternhelper.func_181117_a().func_177956_o() - blockpattern$patternhelper.func_181119_e()));
-                this.field_181017_ao = new Vec3d(d1, d2, 0.0D);
-                this.field_181018_ap = blockpattern$patternhelper.func_177669_b();
+                this.lastPortalPos = new BlockPos(pos);
+                BlockPattern.PatternHelper blockpattern$patternhelper = Blocks.PORTAL.createPatternHelper(this.world, this.lastPortalPos);
+                double d0 = blockpattern$patternhelper.getForwards().getAxis() == EnumFacing.Axis.X ? (double)blockpattern$patternhelper.getFrontTopLeft().getZ() : (double)blockpattern$patternhelper.getFrontTopLeft().getX();
+                double d1 = blockpattern$patternhelper.getForwards().getAxis() == EnumFacing.Axis.X ? this.posZ : this.posX;
+                d1 = Math.abs(MathHelper.pct(d1 - (double)(blockpattern$patternhelper.getForwards().rotateY().getAxisDirection() == EnumFacing.AxisDirection.NEGATIVE ? 1 : 0), d0, d0 - (double)blockpattern$patternhelper.getWidth()));
+                double d2 = MathHelper.pct(this.posY - 1.0D, (double)blockpattern$patternhelper.getFrontTopLeft().getY(), (double)(blockpattern$patternhelper.getFrontTopLeft().getY() - blockpattern$patternhelper.getHeight()));
+                this.lastPortalVec = new Vec3d(d1, d2, 0.0D);
+                this.teleportDirection = blockpattern$patternhelper.getForwards();
             }
 
-            this.field_71087_bX = true;
+            this.inPortal = true;
         }
     }
 
-    public int func_82147_ab()
+    public int getPortalCooldown()
     {
         return 300;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70016_h(double p_70016_1_, double p_70016_3_, double p_70016_5_)
+    public void setVelocity(double x, double y, double z)
     {
-        this.field_70159_w = p_70016_1_;
-        this.field_70181_x = p_70016_3_;
-        this.field_70179_y = p_70016_5_;
+        this.motionX = x;
+        this.motionY = y;
+        this.motionZ = z;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70103_a(byte p_70103_1_)
+    public void handleStatusUpdate(byte id)
     {
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_70057_ab()
+    public void performHurtAnimation()
     {
     }
 
-    public Iterable<ItemStack> func_184214_aD()
+    public Iterable<ItemStack> getHeldEquipment()
     {
-        return field_190535_b;
+        return EMPTY_EQUIPMENT;
     }
 
-    public Iterable<ItemStack> func_184193_aE()
+    public Iterable<ItemStack> getArmorInventoryList()
     {
-        return field_190535_b;
+        return EMPTY_EQUIPMENT;
     }
 
-    public Iterable<ItemStack> func_184209_aF()
+    public Iterable<ItemStack> getEquipmentAndArmor()
     {
-        return Iterables.<ItemStack>concat(this.func_184214_aD(), this.func_184193_aE());
+        return Iterables.<ItemStack>concat(this.getHeldEquipment(), this.getArmorInventoryList());
     }
 
-    public void func_184201_a(EntityEquipmentSlot p_184201_1_, ItemStack p_184201_2_)
+    public void setItemStackToSlot(EntityEquipmentSlot slotIn, ItemStack stack)
     {
     }
 
-    public boolean func_70027_ad()
+    public boolean isBurning()
     {
-        boolean flag = this.field_70170_p != null && this.field_70170_p.field_72995_K;
-        return !this.field_70178_ae && (this.field_190534_ay > 0 || flag && this.func_70083_f(0));
+        boolean flag = this.world != null && this.world.isRemote;
+        return !this.isImmuneToFire && (this.fire > 0 || flag && this.getFlag(0));
     }
 
-    public boolean func_184218_aH()
+    public boolean isRiding()
     {
-        return this.func_184187_bx() != null;
+        return this.getRidingEntity() != null;
     }
 
-    public boolean func_184207_aI()
+    public boolean isBeingRidden()
     {
-        return !this.func_184188_bt().isEmpty();
+        return !this.getPassengers().isEmpty();
     }
 
-    public boolean func_70093_af()
+    public boolean isSneaking()
     {
-        return this.func_70083_f(1);
+        return this.getFlag(1);
     }
 
-    public void func_70095_a(boolean p_70095_1_)
+    public void setSneaking(boolean sneaking)
     {
-        this.func_70052_a(1, p_70095_1_);
+        this.setFlag(1, sneaking);
     }
 
-    public boolean func_70051_ag()
+    public boolean isSprinting()
     {
-        return this.func_70083_f(3);
+        return this.getFlag(3);
     }
 
-    public void func_70031_b(boolean p_70031_1_)
+    public void setSprinting(boolean sprinting)
     {
-        this.func_70052_a(3, p_70031_1_);
+        this.setFlag(3, sprinting);
     }
 
-    public boolean func_184202_aL()
+    public boolean isGlowing()
     {
-        return this.field_184238_ar || this.field_70170_p.field_72995_K && this.func_70083_f(6);
+        return this.glowing || this.world.isRemote && this.getFlag(6);
     }
 
-    public void func_184195_f(boolean p_184195_1_)
+    public void setGlowing(boolean glowingIn)
     {
-        this.field_184238_ar = p_184195_1_;
+        this.glowing = glowingIn;
 
-        if (!this.field_70170_p.field_72995_K)
+        if (!this.world.isRemote)
         {
-            this.func_70052_a(6, this.field_184238_ar);
+            this.setFlag(6, this.glowing);
         }
     }
 
-    public boolean func_82150_aj()
+    public boolean isInvisible()
     {
-        return this.func_70083_f(5);
+        return this.getFlag(5);
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean func_98034_c(EntityPlayer p_98034_1_)
+    public boolean isInvisibleToPlayer(EntityPlayer player)
     {
-        if (p_98034_1_.func_175149_v())
+        if (player.isSpectator())
         {
             return false;
         }
         else
         {
-            Team team = this.func_96124_cp();
-            return team != null && p_98034_1_ != null && p_98034_1_.func_96124_cp() == team && team.func_98297_h() ? false : this.func_82150_aj();
+            Team team = this.getTeam();
+            return team != null && player != null && player.getTeam() == team && team.getSeeFriendlyInvisiblesEnabled() ? false : this.isInvisible();
         }
     }
 
     @Nullable
-    public Team func_96124_cp()
+    public Team getTeam()
     {
-        return this.field_70170_p.func_96441_U().func_96509_i(this.func_189512_bd());
+        return this.world.getScoreboard().getPlayersTeam(this.getCachedUniqueIdString());
     }
 
-    public boolean func_184191_r(Entity p_184191_1_)
+    public boolean isOnSameTeam(Entity entityIn)
     {
-        return this.func_184194_a(p_184191_1_.func_96124_cp());
+        return this.isOnScoreboardTeam(entityIn.getTeam());
     }
 
-    public boolean func_184194_a(Team p_184194_1_)
+    public boolean isOnScoreboardTeam(Team teamIn)
     {
-        return this.func_96124_cp() != null ? this.func_96124_cp().func_142054_a(p_184194_1_) : false;
+        return this.getTeam() != null ? this.getTeam().isSameTeam(teamIn) : false;
     }
 
-    public void func_82142_c(boolean p_82142_1_)
+    public void setInvisible(boolean invisible)
     {
-        this.func_70052_a(5, p_82142_1_);
+        this.setFlag(5, invisible);
     }
 
-    public boolean func_70083_f(int p_70083_1_)
+    public boolean getFlag(int flag)
     {
-        return (((Byte)this.field_70180_af.func_187225_a(field_184240_ax)).byteValue() & 1 << p_70083_1_) != 0;
+        return (((Byte)this.dataManager.get(FLAGS)).byteValue() & 1 << flag) != 0;
     }
 
-    public void func_70052_a(int p_70052_1_, boolean p_70052_2_)
+    public void setFlag(int flag, boolean set)
     {
-        byte b0 = ((Byte)this.field_70180_af.func_187225_a(field_184240_ax)).byteValue();
+        byte b0 = ((Byte)this.dataManager.get(FLAGS)).byteValue();
 
-        if (p_70052_2_)
+        if (set)
         {
-            this.field_70180_af.func_187227_b(field_184240_ax, Byte.valueOf((byte)(b0 | 1 << p_70052_1_)));
+            this.dataManager.set(FLAGS, Byte.valueOf((byte)(b0 | 1 << flag)));
         }
         else
         {
-            this.field_70180_af.func_187227_b(field_184240_ax, Byte.valueOf((byte)(b0 & ~(1 << p_70052_1_))));
+            this.dataManager.set(FLAGS, Byte.valueOf((byte)(b0 & ~(1 << flag))));
         }
     }
 
-    public int func_70086_ai()
+    public int getAir()
     {
-        return ((Integer)this.field_70180_af.func_187225_a(field_184241_ay)).intValue();
+        return ((Integer)this.dataManager.get(AIR)).intValue();
     }
 
-    public void func_70050_g(int p_70050_1_)
+    public void setAir(int air)
     {
-        this.field_70180_af.func_187227_b(field_184241_ay, Integer.valueOf(p_70050_1_));
+        // CraftBukkit start
+        EntityAirChangeEvent event = new EntityAirChangeEvent(this.getBukkitEntity(), air);
+        event.getEntity().getServer().getPluginManager().callEvent(event);
+        if (event.isCancelled()) {
+            return;
+        }
+        this.dataManager.set(net.minecraft.entity.Entity.AIR, Integer.valueOf(event.getAmount()));
+        // CraftBukkit end
     }
 
-    public void func_70077_a(EntityLightningBolt p_70077_1_)
+    public void onStruckByLightning(EntityLightningBolt lightningBolt)
     {
-        this.func_70097_a(DamageSource.field_180137_b, 5.0F);
-        ++this.field_190534_ay;
+        // CraftBukkit start
+        final org.bukkit.entity.Entity thisBukkitEntity = this.getBukkitEntity();
+        final org.bukkit.entity.Entity stormBukkitEntity = lightningBolt.getBukkitEntity();
+        final PluginManager pluginManager = Bukkit.getPluginManager();
 
-        if (this.field_190534_ay == 0)
-        {
-            this.func_70015_d(8);
+        if (thisBukkitEntity instanceof Hanging) {
+            HangingBreakByEntityEvent hangingEvent = new HangingBreakByEntityEvent((Hanging) thisBukkitEntity, stormBukkitEntity);
+            pluginManager.callEvent(hangingEvent);
+
+            if (hangingEvent.isCancelled()) {
+                return;
+            }
         }
+
+        if (this.isImmuneToFire) {
+            return;
+        }
+        CraftEventFactory.entityDamage = lightningBolt;
+        if (!this.attackEntityFrom(DamageSource.LIGHTNING_BOLT, 5.0F)) {
+            CraftEventFactory.entityDamage = null;
+            return;
+        }
+        // CraftBukkit end
+        ++this.fire;
+        if (this.fire == 0) {
+            // CraftBukkit start - Call a combust event when lightning strikes
+            EntityCombustByEntityEvent entityCombustEvent = new EntityCombustByEntityEvent(stormBukkitEntity, thisBukkitEntity, 8);
+            pluginManager.callEvent(entityCombustEvent);
+            if (!entityCombustEvent.isCancelled()) {
+                this.setFire(entityCombustEvent.getDuration());
+            }
+            // CraftBukkit end
+        }
     }
 
-    public void func_70074_a(EntityLivingBase p_70074_1_)
+    public void onKillEntity(EntityLivingBase entityLivingIn)
     {
     }
 
-    protected boolean func_145771_j(double p_145771_1_, double p_145771_3_, double p_145771_5_)
+    protected boolean pushOutOfBlocks(double x, double y, double z)
     {
-        BlockPos blockpos = new BlockPos(p_145771_1_, p_145771_3_, p_145771_5_);
-        double d0 = p_145771_1_ - (double)blockpos.func_177958_n();
-        double d1 = p_145771_3_ - (double)blockpos.func_177956_o();
-        double d2 = p_145771_5_ - (double)blockpos.func_177952_p();
+        BlockPos blockpos = new BlockPos(x, y, z);
+        double d0 = x - (double)blockpos.getX();
+        double d1 = y - (double)blockpos.getY();
+        double d2 = z - (double)blockpos.getZ();
 
-        if (!this.field_70170_p.func_184143_b(this.func_174813_aQ()))
+        if (!this.world.collidesWithAnyBlock(this.getEntityBoundingBox()))
         {
             return false;
         }
@@ -2316,240 +2608,252 @@
             EnumFacing enumfacing = EnumFacing.UP;
             double d3 = Double.MAX_VALUE;
 
-            if (!this.field_70170_p.func_175665_u(blockpos.func_177976_e()) && d0 < d3)
+            if (!this.world.isBlockFullCube(blockpos.west()) && d0 < d3)
             {
                 d3 = d0;
                 enumfacing = EnumFacing.WEST;
             }
 
-            if (!this.field_70170_p.func_175665_u(blockpos.func_177974_f()) && 1.0D - d0 < d3)
+            if (!this.world.isBlockFullCube(blockpos.east()) && 1.0D - d0 < d3)
             {
                 d3 = 1.0D - d0;
                 enumfacing = EnumFacing.EAST;
             }
 
-            if (!this.field_70170_p.func_175665_u(blockpos.func_177978_c()) && d2 < d3)
+            if (!this.world.isBlockFullCube(blockpos.north()) && d2 < d3)
             {
                 d3 = d2;
                 enumfacing = EnumFacing.NORTH;
             }
 
-            if (!this.field_70170_p.func_175665_u(blockpos.func_177968_d()) && 1.0D - d2 < d3)
+            if (!this.world.isBlockFullCube(blockpos.south()) && 1.0D - d2 < d3)
             {
                 d3 = 1.0D - d2;
                 enumfacing = EnumFacing.SOUTH;
             }
 
-            if (!this.field_70170_p.func_175665_u(blockpos.func_177984_a()) && 1.0D - d1 < d3)
+            if (!this.world.isBlockFullCube(blockpos.up()) && 1.0D - d1 < d3)
             {
                 d3 = 1.0D - d1;
                 enumfacing = EnumFacing.UP;
             }
 
-            float f = this.field_70146_Z.nextFloat() * 0.2F + 0.1F;
-            float f1 = (float)enumfacing.func_176743_c().func_179524_a();
+            float f = this.rand.nextFloat() * 0.2F + 0.1F;
+            float f1 = (float)enumfacing.getAxisDirection().getOffset();
 
-            if (enumfacing.func_176740_k() == EnumFacing.Axis.X)
+            if (enumfacing.getAxis() == EnumFacing.Axis.X)
             {
-                this.field_70159_w = (double)(f1 * f);
-                this.field_70181_x *= 0.75D;
-                this.field_70179_y *= 0.75D;
+                this.motionX = (double)(f1 * f);
+                this.motionY *= 0.75D;
+                this.motionZ *= 0.75D;
             }
-            else if (enumfacing.func_176740_k() == EnumFacing.Axis.Y)
+            else if (enumfacing.getAxis() == EnumFacing.Axis.Y)
             {
-                this.field_70159_w *= 0.75D;
-                this.field_70181_x = (double)(f1 * f);
-                this.field_70179_y *= 0.75D;
+                this.motionX *= 0.75D;
+                this.motionY = (double)(f1 * f);
+                this.motionZ *= 0.75D;
             }
-            else if (enumfacing.func_176740_k() == EnumFacing.Axis.Z)
+            else if (enumfacing.getAxis() == EnumFacing.Axis.Z)
             {
-                this.field_70159_w *= 0.75D;
-                this.field_70181_x *= 0.75D;
-                this.field_70179_y = (double)(f1 * f);
+                this.motionX *= 0.75D;
+                this.motionY *= 0.75D;
+                this.motionZ = (double)(f1 * f);
             }
 
             return true;
         }
     }
 
-    public void func_70110_aj()
+    public void setInWeb()
     {
-        this.field_70134_J = true;
-        this.field_70143_R = 0.0F;
+        this.isInWeb = true;
+        this.fallDistance = 0.0F;
     }
 
-    public String func_70005_c_()
+    public String getName()
     {
-        if (this.func_145818_k_())
+        if (this.hasCustomName())
         {
-            return this.func_95999_t();
+            return this.getCustomNameTag();
         }
         else
         {
-            String s = EntityList.func_75621_b(this);
+            String s = EntityList.getEntityString(this);
 
             if (s == null)
             {
                 s = "generic";
             }
 
-            return I18n.func_74838_a("entity." + s + ".name");
+            return I18n.translateToLocal("entity." + s + ".name");
         }
     }
 
     @Nullable
-    public Entity[] func_70021_al()
+    public Entity[] getParts()
     {
         return null;
     }
 
-    public boolean func_70028_i(Entity p_70028_1_)
+    public boolean isEntityEqual(Entity entityIn)
     {
-        return this == p_70028_1_;
+        return this == entityIn;
     }
 
-    public float func_70079_am()
+    public float getRotationYawHead()
     {
         return 0.0F;
     }
 
-    public void func_70034_d(float p_70034_1_)
+    public void setRotationYawHead(float rotation)
     {
     }
 
-    public void func_181013_g(float p_181013_1_)
+    public void setRenderYawOffset(float offset)
     {
     }
 
-    public boolean func_70075_an()
+    public boolean canBeAttackedWithItem()
     {
         return true;
     }
 
-    public boolean func_85031_j(Entity p_85031_1_)
+    public boolean hitByEntity(Entity entityIn)
     {
         return false;
     }
 
     public String toString()
     {
-        return String.format("%s[\'%s\'/%d, l=\'%s\', x=%.2f, y=%.2f, z=%.2f]", new Object[] {this.getClass().getSimpleName(), this.func_70005_c_(), Integer.valueOf(this.field_145783_c), this.field_70170_p == null ? "~NULL~" : this.field_70170_p.func_72912_H().func_76065_j(), Double.valueOf(this.field_70165_t), Double.valueOf(this.field_70163_u), Double.valueOf(this.field_70161_v)});
+        return String.format("%s[\'%s\'/%d, l=\'%s\', x=%.2f, y=%.2f, z=%.2f]", new Object[] {this.getClass().getSimpleName(), this.getName(), Integer.valueOf(this.entityId), this.world == null ? "~NULL~" : this.world.getWorldInfo().getWorldName(), Double.valueOf(this.posX), Double.valueOf(this.posY), Double.valueOf(this.posZ)});
     }
 
-    public boolean func_180431_b(DamageSource p_180431_1_)
+    public boolean isEntityInvulnerable(DamageSource source)
     {
-        return this.field_83001_bt && p_180431_1_ != DamageSource.field_76380_i && !p_180431_1_.func_180136_u();
+        return this.invulnerable && source != DamageSource.OUT_OF_WORLD && !source.isCreativePlayer();
     }
 
-    public boolean func_190530_aW()
+    public boolean getIsInvulnerable()
     {
-        return this.field_83001_bt;
+        return this.invulnerable;
     }
 
-    public void func_184224_h(boolean p_184224_1_)
+    public void setEntityInvulnerable(boolean isInvulnerable)
     {
-        this.field_83001_bt = p_184224_1_;
+        this.invulnerable = isInvulnerable;
     }
 
-    public void func_82149_j(Entity p_82149_1_)
+    public void copyLocationAndAnglesFrom(Entity entityIn)
     {
-        this.func_70012_b(p_82149_1_.field_70165_t, p_82149_1_.field_70163_u, p_82149_1_.field_70161_v, p_82149_1_.field_70177_z, p_82149_1_.field_70125_A);
+        this.setLocationAndAngles(entityIn.posX, entityIn.posY, entityIn.posZ, entityIn.rotationYaw, entityIn.rotationPitch);
     }
 
-    private void func_180432_n(Entity p_180432_1_)
+    private void copyDataFromOld(Entity entityIn)
     {
-        NBTTagCompound nbttagcompound = p_180432_1_.func_189511_e(new NBTTagCompound());
-        nbttagcompound.func_82580_o("Dimension");
-        this.func_70020_e(nbttagcompound);
-        this.field_71088_bW = p_180432_1_.field_71088_bW;
-        this.field_181016_an = p_180432_1_.field_181016_an;
-        this.field_181017_ao = p_180432_1_.field_181017_ao;
-        this.field_181018_ap = p_180432_1_.field_181018_ap;
+        NBTTagCompound nbttagcompound = entityIn.writeToNBT(new NBTTagCompound());
+        nbttagcompound.removeTag("Dimension");
+        this.readFromNBT(nbttagcompound);
+        this.timeUntilPortal = entityIn.timeUntilPortal;
+        this.lastPortalPos = entityIn.lastPortalPos;
+        this.lastPortalVec = entityIn.lastPortalVec;
+        this.teleportDirection = entityIn.teleportDirection;
     }
 
     @Nullable
-    public Entity func_184204_a(int p_184204_1_)
+    public Entity changeDimension(int dimensionIn)
     {
-        if (!this.field_70170_p.field_72995_K && !this.field_70128_L)
+        if (!this.world.isRemote && !this.isDead)
         {
-            this.field_70170_p.field_72984_F.func_76320_a("changeDimension");
-            MinecraftServer minecraftserver = this.func_184102_h();
-            int i = this.field_71093_bK;
-            WorldServer worldserver = minecraftserver.func_71218_a(i);
-            WorldServer worldserver1 = minecraftserver.func_71218_a(p_184204_1_);
-            this.field_71093_bK = p_184204_1_;
+            if (!net.minecraftforge.common.ForgeHooks.onTravelToDimension(this, dimensionIn)) return null;
+            this.world.theProfiler.startSection("changeDimension");
+            MinecraftServer minecraftserver = this.getServer();
+            int i = this.dimension;
+            WorldServer worldserver = minecraftserver.worldServerForDimension(i);
+            WorldServer worldserver1 = minecraftserver.worldServerForDimension(dimensionIn);
+            this.dimension = dimensionIn;
 
-            if (i == 1 && p_184204_1_ == 1)
+            if (i == 1 && dimensionIn == 1)
             {
-                worldserver1 = minecraftserver.func_71218_a(0);
-                this.field_71093_bK = 0;
+                worldserver1 = minecraftserver.worldServerForDimension(0);
+                this.dimension = 0;
             }
 
-            this.field_70170_p.func_72900_e(this);
-            this.field_70128_L = false;
-            this.field_70170_p.field_72984_F.func_76320_a("reposition");
+            this.world.removeEntity(this);
+            this.isDead = false;
+            this.world.theProfiler.startSection("reposition");
             BlockPos blockpos;
-
-            if (p_184204_1_ == 1)
+            //MCPCRevive start
+            Location enter = this.getBukkitEntity().getLocation();
+            Location exit;
+            //MCPCRevive end
+            if (dimensionIn == 1)
             {
-                blockpos = worldserver1.func_180504_m();
+                blockpos = worldserver1.getSpawnCoordinate();
             }
             else
             {
-                double d0 = this.field_70165_t;
-                double d1 = this.field_70161_v;
+                double d0 = this.posX;
+                double d1 = this.posZ;
                 double d2 = 8.0D;
 
-                if (p_184204_1_ == -1)
+                if (dimensionIn == -1)
                 {
-                    d0 = MathHelper.func_151237_a(d0 / 8.0D, worldserver1.func_175723_af().func_177726_b() + 16.0D, worldserver1.func_175723_af().func_177728_d() - 16.0D);
-                    d1 = MathHelper.func_151237_a(d1 / 8.0D, worldserver1.func_175723_af().func_177736_c() + 16.0D, worldserver1.func_175723_af().func_177733_e() - 16.0D);
+                    d0 = MathHelper.clamp(d0 / 8.0D, worldserver1.getWorldBorder().minX() + 16.0D, worldserver1.getWorldBorder().maxX() - 16.0D);
+                    d1 = MathHelper.clamp(d1 / 8.0D, worldserver1.getWorldBorder().minZ() + 16.0D, worldserver1.getWorldBorder().maxZ() - 16.0D);
                 }
-                else if (p_184204_1_ == 0)
+                else if (dimensionIn == 0)
                 {
-                    d0 = MathHelper.func_151237_a(d0 * 8.0D, worldserver1.func_175723_af().func_177726_b() + 16.0D, worldserver1.func_175723_af().func_177728_d() - 16.0D);
-                    d1 = MathHelper.func_151237_a(d1 * 8.0D, worldserver1.func_175723_af().func_177736_c() + 16.0D, worldserver1.func_175723_af().func_177733_e() - 16.0D);
+                    d0 = MathHelper.clamp(d0 * 8.0D, worldserver1.getWorldBorder().minX() + 16.0D, worldserver1.getWorldBorder().maxX() - 16.0D);
+                    d1 = MathHelper.clamp(d1 * 8.0D, worldserver1.getWorldBorder().minZ() + 16.0D, worldserver1.getWorldBorder().maxZ() - 16.0D);
                 }
 
-                d0 = (double)MathHelper.func_76125_a((int)d0, -29999872, 29999872);
-                d1 = (double)MathHelper.func_76125_a((int)d1, -29999872, 29999872);
-                float f = this.field_70177_z;
-                this.func_70012_b(d0, this.field_70163_u, d1, 90.0F, 0.0F);
-                Teleporter teleporter = worldserver1.func_85176_s();
-                teleporter.func_180620_b(this, f);
+                d0 = (double)MathHelper.clamp((int)d0, -29999872, 29999872);
+                d1 = (double)MathHelper.clamp((int)d1, -29999872, 29999872);
+                float f = this.rotationYaw;
+                this.setLocationAndAngles(d0, this.posY, d1, 90.0F, 0.0F);
+                Teleporter teleporter = worldserver1.getDefaultTeleporter();
+                teleporter.placeInExistingPortal(this, f);
                 blockpos = new BlockPos(this);
             }
+            //MCPCRevive start Craft bukkit start
+            exit = new Location(worldserver1.getWorld(),blockpos.getX(),blockpos.getY(),blockpos.getZ());
+            EntityPortalEvent event = new EntityPortalEvent(this.getBukkitEntity(), enter, exit, null);
+            event.useTravelAgent(false);
+            event.getEntity().getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled() || event.getTo() == null || event.getTo().getWorld() == null || !this.isEntityAlive()) {
+                return null;
+            }
+            //MCPCRevive CraftBukkit end
+            worldserver.updateEntityWithOptionalForce(this, false);
+            this.world.theProfiler.endStartSection("reloading");
+            Entity entity = EntityList.newEntity(this.getClass(), worldserver1);
 
-            worldserver.func_72866_a(this, false);
-            this.field_70170_p.field_72984_F.func_76318_c("reloading");
-            Entity entity = EntityList.func_191304_a(this.getClass(), worldserver1);
-
             if (entity != null)
             {
-                entity.func_180432_n(this);
+                entity.copyDataFromOld(this);
 
-                if (i == 1 && p_184204_1_ == 1)
+                if (i == 1 && dimensionIn == 1)
                 {
-                    BlockPos blockpos1 = worldserver1.func_175672_r(worldserver1.func_175694_M());
-                    entity.func_174828_a(blockpos1, entity.field_70177_z, entity.field_70125_A);
+                    BlockPos blockpos1 = worldserver1.getTopSolidOrLiquidBlock(worldserver1.getSpawnPoint());
+                    entity.moveToBlockPosAndAngles(blockpos1, entity.rotationYaw, entity.rotationPitch);
                 }
                 else
                 {
-                    entity.func_174828_a(blockpos, entity.field_70177_z, entity.field_70125_A);
+                    entity.moveToBlockPosAndAngles(blockpos, entity.rotationYaw, entity.rotationPitch);
                 }
 
-                boolean flag = entity.field_98038_p;
-                entity.field_98038_p = true;
-                worldserver1.func_72838_d(entity);
-                entity.field_98038_p = flag;
-                worldserver1.func_72866_a(entity, false);
+                boolean flag = entity.forceSpawn;
+                entity.forceSpawn = true;
+                worldserver1.spawnEntity(entity);
+                entity.forceSpawn = flag;
+                worldserver1.updateEntityWithOptionalForce(entity, false);
             }
 
-            this.field_70128_L = true;
-            this.field_70170_p.field_72984_F.func_76319_b();
-            worldserver.func_82742_i();
-            worldserver1.func_82742_i();
-            this.field_70170_p.field_72984_F.func_76319_b();
+            this.isDead = true;
+            this.world.theProfiler.endSection();
+            worldserver.resetUpdateEntityTick();
+            worldserver1.resetUpdateEntityTick();
+            this.world.theProfiler.endSection();
             return entity;
         }
         else
@@ -2558,323 +2862,528 @@
         }
     }
 
-    public boolean func_184222_aU()
+    public boolean isNonBoss()
     {
         return true;
     }
 
-    public float func_180428_a(Explosion p_180428_1_, World p_180428_2_, BlockPos p_180428_3_, IBlockState p_180428_4_)
+    public float getExplosionResistance(Explosion explosionIn, World worldIn, BlockPos pos, IBlockState blockStateIn)
     {
-        return p_180428_4_.func_177230_c().func_149638_a(this);
+        return blockStateIn.getBlock().getExplosionResistance(worldIn, pos, this, explosionIn);
     }
 
-    public boolean func_174816_a(Explosion p_174816_1_, World p_174816_2_, BlockPos p_174816_3_, IBlockState p_174816_4_, float p_174816_5_)
+    public boolean verifyExplosion(Explosion explosionIn, World worldIn, BlockPos pos, IBlockState blockStateIn, float p_174816_5_)
     {
         return true;
     }
 
-    public int func_82143_as()
+    public int getMaxFallHeight()
     {
         return 3;
     }
 
-    public Vec3d func_181014_aG()
+    public Vec3d getLastPortalVec()
     {
-        return this.field_181017_ao;
+        return this.lastPortalVec;
     }
 
-    public EnumFacing func_181012_aH()
+    public EnumFacing getTeleportDirection()
     {
-        return this.field_181018_ap;
+        return this.teleportDirection;
     }
 
-    public boolean func_145773_az()
+    public boolean doesEntityNotTriggerPressurePlate()
     {
         return false;
     }
 
-    public void func_85029_a(CrashReportCategory p_85029_1_)
+    public void addEntityCrashInfo(CrashReportCategory category)
     {
-        p_85029_1_.func_189529_a("Entity Type", new ICrashReportDetail<String>()
+        category.setDetail("Entity Type", new ICrashReportDetail<String>()
         {
             public String call() throws Exception
             {
-                return EntityList.func_191301_a(Entity.this) + " (" + Entity.this.getClass().getCanonicalName() + ")";
+                return EntityList.getKey(Entity.this) + " (" + Entity.this.getClass().getCanonicalName() + ")";
             }
         });
-        p_85029_1_.func_71507_a("Entity ID", Integer.valueOf(this.field_145783_c));
-        p_85029_1_.func_189529_a("Entity Name", new ICrashReportDetail<String>()
+        category.addCrashSection("Entity ID", Integer.valueOf(this.entityId));
+        category.setDetail("Entity Name", new ICrashReportDetail<String>()
         {
             public String call() throws Exception
             {
-                return Entity.this.func_70005_c_();
+                return Entity.this.getName();
             }
         });
-        p_85029_1_.func_71507_a("Entity\'s Exact location", String.format("%.2f, %.2f, %.2f", new Object[] {Double.valueOf(this.field_70165_t), Double.valueOf(this.field_70163_u), Double.valueOf(this.field_70161_v)}));
-        p_85029_1_.func_71507_a("Entity\'s Block location", CrashReportCategory.func_184876_a(MathHelper.func_76128_c(this.field_70165_t), MathHelper.func_76128_c(this.field_70163_u), MathHelper.func_76128_c(this.field_70161_v)));
-        p_85029_1_.func_71507_a("Entity\'s Momentum", String.format("%.2f, %.2f, %.2f", new Object[] {Double.valueOf(this.field_70159_w), Double.valueOf(this.field_70181_x), Double.valueOf(this.field_70179_y)}));
-        p_85029_1_.func_189529_a("Entity\'s Passengers", new ICrashReportDetail<String>()
+        category.addCrashSection("Entity\'s Exact location", String.format("%.2f, %.2f, %.2f", new Object[] {Double.valueOf(this.posX), Double.valueOf(this.posY), Double.valueOf(this.posZ)}));
+        category.addCrashSection("Entity\'s Block location", CrashReportCategory.getCoordinateInfo(MathHelper.floor(this.posX), MathHelper.floor(this.posY), MathHelper.floor(this.posZ)));
+        category.addCrashSection("Entity\'s Momentum", String.format("%.2f, %.2f, %.2f", new Object[] {Double.valueOf(this.motionX), Double.valueOf(this.motionY), Double.valueOf(this.motionZ)}));
+        category.setDetail("Entity\'s Passengers", new ICrashReportDetail<String>()
         {
             public String call() throws Exception
             {
-                return Entity.this.func_184188_bt().toString();
+                return Entity.this.getPassengers().toString();
             }
         });
-        p_85029_1_.func_189529_a("Entity\'s Vehicle", new ICrashReportDetail<String>()
+        category.setDetail("Entity\'s Vehicle", new ICrashReportDetail<String>()
         {
             public String call() throws Exception
             {
-                return Entity.this.func_184187_bx().toString();
+                return Entity.this.getRidingEntity().toString();
             }
         });
     }
 
-    public void func_184221_a(UUID p_184221_1_)
+    public void setUniqueId(UUID uniqueIdIn)
     {
-        this.field_96093_i = p_184221_1_;
-        this.field_189513_ar = this.field_96093_i.toString();
+        this.entityUniqueID = uniqueIdIn;
+        this.cachedUniqueIdString = this.entityUniqueID.toString();
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean func_90999_ad()
+    public boolean canRenderOnFire()
     {
-        return this.func_70027_ad();
+        return this.isBurning();
     }
 
-    public UUID func_110124_au()
+    public UUID getUniqueID()
     {
-        return this.field_96093_i;
+        return this.entityUniqueID;
     }
 
-    public String func_189512_bd()
+    public String getCachedUniqueIdString()
     {
-        return this.field_189513_ar;
+        return this.cachedUniqueIdString;
     }
 
-    public boolean func_96092_aw()
+    public boolean isPushedByWater()
     {
         return true;
     }
 
     @SideOnly(Side.CLIENT)
-    public static double func_184183_bd()
+    public static double getRenderDistanceWeight()
     {
-        return field_70155_l;
+        return renderDistanceWeight;
     }
 
     @SideOnly(Side.CLIENT)
-    public static void func_184227_b(double p_184227_0_)
+    public static void setRenderDistanceWeight(double renderDistWeight)
     {
-        field_70155_l = p_184227_0_;
+        renderDistanceWeight = renderDistWeight;
     }
 
-    public ITextComponent func_145748_c_()
+    public ITextComponent getDisplayName()
     {
-        TextComponentString textcomponentstring = new TextComponentString(ScorePlayerTeam.func_96667_a(this.func_96124_cp(), this.func_70005_c_()));
-        textcomponentstring.func_150256_b().func_150209_a(this.func_174823_aP());
-        textcomponentstring.func_150256_b().func_179989_a(this.func_189512_bd());
+        TextComponentString textcomponentstring = new TextComponentString(ScorePlayerTeam.formatPlayerName(this.getTeam(), this.getName()));
+        textcomponentstring.getStyle().setHoverEvent(this.getHoverEvent());
+        textcomponentstring.getStyle().setInsertion(this.getCachedUniqueIdString());
         return textcomponentstring;
     }
 
-    public void func_96094_a(String p_96094_1_)
+    public void setCustomNameTag(String name)
     {
-        this.field_70180_af.func_187227_b(field_184242_az, p_96094_1_);
+
+        // CraftBukkit start - Add a sane limit for name length
+        if (name.length() > 256) {
+            name = name.substring(0, 256);
+        }
+        this.dataManager.set(CUSTOM_NAME, name);
+        // CraftBukkit end
     }
 
-    public String func_95999_t()
+    public String getCustomNameTag()
     {
-        return (String)this.field_70180_af.func_187225_a(field_184242_az);
+        return (String)this.dataManager.get(CUSTOM_NAME);
     }
 
-    public boolean func_145818_k_()
+    public boolean hasCustomName()
     {
-        return !((String)this.field_70180_af.func_187225_a(field_184242_az)).isEmpty();
+        return !((String)this.dataManager.get(CUSTOM_NAME)).isEmpty();
     }
 
-    public void func_174805_g(boolean p_174805_1_)
+    public void setAlwaysRenderNameTag(boolean alwaysRenderNameTag)
     {
-        this.field_70180_af.func_187227_b(field_184233_aA, Boolean.valueOf(p_174805_1_));
+        this.dataManager.set(CUSTOM_NAME_VISIBLE, Boolean.valueOf(alwaysRenderNameTag));
     }
 
-    public boolean func_174833_aM()
+    public boolean getAlwaysRenderNameTag()
     {
-        return ((Boolean)this.field_70180_af.func_187225_a(field_184233_aA)).booleanValue();
+        return ((Boolean)this.dataManager.get(CUSTOM_NAME_VISIBLE)).booleanValue();
     }
 
-    public void func_70634_a(double p_70634_1_, double p_70634_3_, double p_70634_5_)
+    public void setPositionAndUpdate(double x, double y, double z)
     {
-        this.field_184237_aG = true;
-        this.func_70012_b(p_70634_1_, p_70634_3_, p_70634_5_, this.field_70177_z, this.field_70125_A);
-        this.field_70170_p.func_72866_a(this, false);
+        this.isPositionDirty = true;
+        this.setLocationAndAngles(x, y, z, this.rotationYaw, this.rotationPitch);
+        this.world.updateEntityWithOptionalForce(this, false);
     }
 
-    public void func_184206_a(DataParameter<?> p_184206_1_)
+    public void notifyDataManagerChange(DataParameter<?> key)
     {
     }
 
     @SideOnly(Side.CLIENT)
-    public boolean func_94059_bO()
+    public boolean getAlwaysRenderNameTagForRender()
     {
-        return this.func_174833_aM();
+        return this.getAlwaysRenderNameTag();
     }
 
-    public EnumFacing func_174811_aO()
+    public EnumFacing getHorizontalFacing()
     {
-        return EnumFacing.func_176731_b(MathHelper.func_76128_c((double)(this.field_70177_z * 4.0F / 360.0F) + 0.5D) & 3);
+        return EnumFacing.getHorizontal(MathHelper.floor((double)(this.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3);
     }
 
-    public EnumFacing func_184172_bi()
+    public EnumFacing getAdjustedHorizontalFacing()
     {
-        return this.func_174811_aO();
+        return this.getHorizontalFacing();
     }
 
-    protected HoverEvent func_174823_aP()
+    protected HoverEvent getHoverEvent()
     {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
-        ResourceLocation resourcelocation = EntityList.func_191301_a(this);
-        nbttagcompound.func_74778_a("id", this.func_189512_bd());
+        ResourceLocation resourcelocation = EntityList.getKey(this);
+        nbttagcompound.setString("id", this.getCachedUniqueIdString());
 
         if (resourcelocation != null)
         {
-            nbttagcompound.func_74778_a("type", resourcelocation.toString());
+            nbttagcompound.setString("type", resourcelocation.toString());
         }
 
-        nbttagcompound.func_74778_a("name", this.func_70005_c_());
+        nbttagcompound.setString("name", this.getName());
         return new HoverEvent(HoverEvent.Action.SHOW_ENTITY, new TextComponentString(nbttagcompound.toString()));
     }
 
-    public boolean func_174827_a(EntityPlayerMP p_174827_1_)
+    public boolean isSpectatedByPlayer(EntityPlayerMP player)
     {
         return true;
     }
 
-    public AxisAlignedBB func_174813_aQ()
+    public AxisAlignedBB getEntityBoundingBox()
     {
-        return this.field_70121_D;
+        return this.boundingBox;
     }
 
     @SideOnly(Side.CLIENT)
-    public AxisAlignedBB func_184177_bl()
+    public AxisAlignedBB getRenderBoundingBox()
     {
-        return this.func_174813_aQ();
+        return this.getEntityBoundingBox();
     }
 
-    public void func_174826_a(AxisAlignedBB p_174826_1_)
+    public void setEntityBoundingBox(AxisAlignedBB bb)
     {
-        this.field_70121_D = p_174826_1_;
+
+        // CraftBukkit start - block invalid bounding boxes
+        double a = bb.minX,
+                b = bb.minY,
+                c = bb.minZ,
+                d = bb.maxX,
+                e = bb.maxY,
+                f = bb.maxZ;
+        double len = bb.maxX - bb.minX;
+        if (len < 0) d = a;
+        if (len > 64) d = a + 64.0;
+
+        len = bb.maxY - bb.minY;
+        if (len < 0) e = b;
+        if (len > 64) e = b + 64.0;
+
+        len = bb.maxZ - bb.minZ;
+        if (len < 0) f = c;
+        if (len > 64) f = c + 64.0;
+        this.boundingBox = new AxisAlignedBB(a, b, c, d, e, f);
+        // CraftBukkit end
+        this.boundingBox = bb;
     }
 
-    public float func_70047_e()
+    public float getEyeHeight()
     {
-        return this.field_70131_O * 0.85F;
+        return this.height * 0.85F;
     }
 
-    public boolean func_174832_aS()
+    public boolean isOutsideBorder()
     {
-        return this.field_174835_g;
+        return this.isOutsideBorder;
     }
 
-    public void func_174821_h(boolean p_174821_1_)
+    public void setOutsideBorder(boolean outsideBorder)
     {
-        this.field_174835_g = p_174821_1_;
+        this.isOutsideBorder = outsideBorder;
     }
 
-    public boolean func_174820_d(int p_174820_1_, ItemStack p_174820_2_)
+    public boolean replaceItemInInventory(int inventorySlot, ItemStack itemStackIn)
     {
         return false;
     }
 
-    public void func_145747_a(ITextComponent p_145747_1_)
+    public void sendMessage(ITextComponent component)
     {
     }
 
-    public boolean func_70003_b(int p_70003_1_, String p_70003_2_)
+    public boolean canUseCommand(int permLevel, String commandName)
     {
         return true;
     }
 
-    public BlockPos func_180425_c()
+    public BlockPos getPosition()
     {
-        return new BlockPos(this.field_70165_t, this.field_70163_u + 0.5D, this.field_70161_v);
+        return new BlockPos(this.posX, this.posY + 0.5D, this.posZ);
     }
 
-    public Vec3d func_174791_d()
+    public Vec3d getPositionVector()
     {
-        return new Vec3d(this.field_70165_t, this.field_70163_u, this.field_70161_v);
+        return new Vec3d(this.posX, this.posY, this.posZ);
     }
 
-    public World func_130014_f_()
+    public World getEntityWorld()
     {
-        return this.field_70170_p;
+        return this.world;
     }
 
-    public Entity func_174793_f()
+    public Entity getCommandSenderEntity()
     {
         return this;
     }
 
-    public boolean func_174792_t_()
+    public boolean sendCommandFeedback()
     {
         return false;
     }
 
-    public void func_174794_a(CommandResultStats.Type p_174794_1_, int p_174794_2_)
+    public void setCommandStat(CommandResultStats.Type type, int amount)
     {
-        if (this.field_70170_p != null && !this.field_70170_p.field_72995_K)
+        if (this.world != null && !this.world.isRemote)
         {
-            this.field_174837_as.func_184932_a(this.field_70170_p.func_73046_m(), this, p_174794_1_, p_174794_2_);
+            this.cmdResultStats.setCommandStatForSender(this.world.getMinecraftServer(), this, type, amount);
         }
     }
 
     @Nullable
-    public MinecraftServer func_184102_h()
+    public MinecraftServer getServer()
     {
-        return this.field_70170_p.func_73046_m();
+        return this.world.getMinecraftServer();
     }
 
-    public CommandResultStats func_174807_aT()
+    public CommandResultStats getCommandStats()
     {
-        return this.field_174837_as;
+        return this.cmdResultStats;
     }
 
-    public void func_174817_o(Entity p_174817_1_)
+    public void setCommandStats(Entity entityIn)
     {
-        this.field_174837_as.func_179671_a(p_174817_1_.func_174807_aT());
+        this.cmdResultStats.addAllStats(entityIn.getCommandStats());
     }
 
-    public EnumActionResult func_184199_a(EntityPlayer p_184199_1_, Vec3d p_184199_2_, EnumHand p_184199_3_)
+    public EnumActionResult applyPlayerInteraction(EntityPlayer player, Vec3d vec, EnumHand stack)
     {
         return EnumActionResult.PASS;
     }
 
-    public boolean func_180427_aV()
+    public boolean isImmuneToExplosions()
     {
         return false;
     }
 
-    protected void func_174815_a(EntityLivingBase p_174815_1_, Entity p_174815_2_)
+    protected void applyEnchantments(EntityLivingBase entityLivingBaseIn, Entity entityIn)
     {
-        if (p_174815_2_ instanceof EntityLivingBase)
+        if (entityIn instanceof EntityLivingBase)
         {
-            EnchantmentHelper.func_151384_a((EntityLivingBase)p_174815_2_, p_174815_1_);
+            EnchantmentHelper.applyThornEnchantments((EntityLivingBase)entityIn, entityLivingBaseIn);
         }
 
-        EnchantmentHelper.func_151385_b(p_174815_1_, p_174815_2_);
+        EnchantmentHelper.applyArthropodEnchantments(entityLivingBaseIn, entityIn);
     }
 
-    public void func_184178_b(EntityPlayerMP p_184178_1_)
+    /* ================================== Forge Start =====================================*/
+    /**
+     * Returns a NBTTagCompound that can be used to store custom data for this entity.
+     * It will be written, and read from disc, so it persists over world saves.
+     * @return A NBTTagCompound
+     */
+    public NBTTagCompound getEntityData()
     {
+        if (customEntityData == null)
+        {
+            customEntityData = new NBTTagCompound();
+        }
+        return customEntityData;
     }
 
-    public void func_184203_c(EntityPlayerMP p_184203_1_)
+    /**
+     * Used in model rendering to determine if the entity riding this entity should be in the 'sitting' position.
+     * @return false to prevent an entity that is mounted to this entity from displaying the 'sitting' animation.
+     */
+    public boolean shouldRiderSit()
     {
+        return true;
     }
 
-    public float func_184229_a(Rotation p_184229_1_)
+    /**
+     * Called when a user uses the creative pick block button on this entity.
+     *
+     * @param target The full target the player is looking at
+     * @return A ItemStack to add to the player's inventory, empty ItemStack if nothing should be added.
+     */
+    public ItemStack getPickedResult(RayTraceResult target)
     {
-        float f = MathHelper.func_76142_g(this.field_70177_z);
+        if (this instanceof net.minecraft.entity.item.EntityPainting)
+        {
+            return new ItemStack(net.minecraft.init.Items.PAINTING);
+        }
+        else if (this instanceof EntityLeashKnot)
+        {
+            return new ItemStack(net.minecraft.init.Items.LEAD);
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityItemFrame)
+        {
+            ItemStack held = ((net.minecraft.entity.item.EntityItemFrame)this).getDisplayedItem();
+            if (held.isEmpty())
+            {
+                return new ItemStack(net.minecraft.init.Items.ITEM_FRAME);
+            }
+            else
+            {
+                return held.copy();
+            }
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityMinecart)
+        {
+            return ((net.minecraft.entity.item.EntityMinecart)this).getCartItem();
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityBoat)
+        {
+            return new ItemStack(((EntityBoat)this).getItemBoat());
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityArmorStand)
+        {
+            return new ItemStack(net.minecraft.init.Items.ARMOR_STAND);
+        }
+        else if (this instanceof net.minecraft.entity.item.EntityEnderCrystal)
+        {
+            return new ItemStack(net.minecraft.init.Items.END_CRYSTAL);
+        }
+        else
+        {
+            ResourceLocation name = EntityList.getKey(this);
+            if (name != null && EntityList.ENTITY_EGGS.containsKey(name))
+            {
+                ItemStack stack = new ItemStack(net.minecraft.init.Items.SPAWN_EGG);
+                net.minecraft.item.ItemMonsterPlacer.applyEntityIdToItemStack(stack, name);
+                return stack;
+            }
+        }
+        return ItemStack.EMPTY;
+    }
 
-        switch (p_184229_1_)
+    public UUID getPersistentID()
+    {
+        return entityUniqueID;
+    }
+
+    /**
+     * Reset the entity ID to a new value. Not to be used from Mod code
+     */
+    public final void resetEntityId()
+    {
+        this.entityId = nextEntityID++;
+    }
+
+    public boolean shouldRenderInPass(int pass)
+    {
+        return pass == 0;
+    }
+
+    /**
+     * Returns true if the entity is of the @link{EnumCreatureType} provided
+     * @param type The EnumCreatureType type this entity is evaluating
+     * @param forSpawnCount If this is being invoked to check spawn count caps.
+     * @return If the creature is of the type provided
+     */
+    public boolean isCreatureType(EnumCreatureType type, boolean forSpawnCount)
+    {
+        if (forSpawnCount && (this instanceof EntityLiving) && ((EntityLiving)this).isNoDespawnRequired()) return false;
+        return type.getCreatureClass().isAssignableFrom(this.getClass());
+    }
+
+    /**
+     * If a rider of this entity can interact with this entity. Should return true on the
+     * ridden entity if so.
+     *
+     * @return if the entity can be interacted with from a rider
+     */
+    public boolean canRiderInteract()
+    {
+        return false;
+    }
+
+    /**
+     * If the rider should be dismounted from the entity when the entity goes under water
+     *
+     * @param rider The entity that is riding
+     * @return if the entity should be dismounted when under water
+     */
+    public boolean shouldDismountInWater(Entity rider)
+    {
+        return this instanceof EntityLivingBase;
+    }
+
+    @Override
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        if (getCapability(capability, facing) != null)
+            return true;
+        return capabilities == null ? false : capabilities.hasCapability(capability, facing);
+    }
+
+    @Override
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        return capabilities == null ? null : capabilities.getCapability(capability, facing);
+    }
+
+    public void deserializeNBT(NBTTagCompound nbt)
+    {
+        this.readFromNBT(nbt);
+    }
+
+    public NBTTagCompound serializeNBT()
+    {
+        NBTTagCompound ret = new NBTTagCompound();
+        ret.setString("id", this.getEntityString());
+        return this.writeToNBT(ret);
+    }
+
+    /**
+     * Checks if this {@link Entity} can trample a {@link Block}.
+     *
+     * @param world The world in which the block will be trampled
+     * @param block The block being tested
+     * @param pos The block pos
+     * @param fallDistance The fall distance
+     * @return {@code true} if this entity can trample, {@code false} otherwise
+     */
+    public boolean canTrample(World world, Block block, BlockPos pos, float fallDistance)
+    {
+        return world.rand.nextFloat() < fallDistance - 0.5F
+            && this instanceof EntityLivingBase
+            && (this instanceof EntityPlayer || world.getGameRules().getBoolean("mobGriefing"))
+            && this.width * this.width * this.height > 0.512F;
+    }
+    /* ================================== Forge End =====================================*/
+
+    public void addTrackingPlayer(EntityPlayerMP player)
+    {
+    }
+
+    public void removeTrackingPlayer(EntityPlayerMP player)
+    {
+    }
+
+    public float getRotatedYaw(Rotation transformRotation)
+    {
+        float f = MathHelper.wrapDegrees(this.rotationYaw);
+
+        switch (transformRotation)
         {
             case CLOCKWISE_180:
                 return f + 180.0F;
@@ -2887,11 +3396,11 @@
         }
     }
 
-    public float func_184217_a(Mirror p_184217_1_)
+    public float getMirroredYaw(Mirror transformMirror)
     {
-        float f = MathHelper.func_76142_g(this.field_70177_z);
+        float f = MathHelper.wrapDegrees(this.rotationYaw);
 
-        switch (p_184217_1_)
+        switch (transformMirror)
         {
             case LEFT_RIGHT:
                 return -f;
@@ -2902,34 +3411,34 @@
         }
     }
 
-    public boolean func_184213_bq()
+    public boolean ignoreItemEntityData()
     {
         return false;
     }
 
-    public boolean func_184189_br()
+    public boolean setPositionNonDirty()
     {
-        boolean flag = this.field_184237_aG;
-        this.field_184237_aG = false;
+        boolean flag = this.isPositionDirty;
+        this.isPositionDirty = false;
         return flag;
     }
 
     @Nullable
-    public Entity func_184179_bs()
+    public Entity getControllingPassenger()
     {
         return null;
     }
 
-    public List<Entity> func_184188_bt()
+    public List<Entity> getPassengers()
     {
-        return (List<Entity>)(this.field_184244_h.isEmpty() ? Collections.emptyList() : Lists.newArrayList(this.field_184244_h));
+        return (List<Entity>)(this.riddenByEntities.isEmpty() ? Collections.emptyList() : Lists.newArrayList(this.riddenByEntities));
     }
 
-    public boolean func_184196_w(Entity p_184196_1_)
+    public boolean isPassenger(Entity entityIn)
     {
-        for (Entity entity : this.func_184188_bt())
+        for (Entity entity : this.getPassengers())
         {
-            if (entity.equals(p_184196_1_))
+            if (entity.equals(entityIn))
             {
                 return true;
             }
@@ -2938,38 +3447,38 @@
         return false;
     }
 
-    public Collection<Entity> func_184182_bu()
+    public Collection<Entity> getRecursivePassengers()
     {
         Set<Entity> set = Sets.<Entity>newHashSet();
-        this.func_184175_a(Entity.class, set);
+        this.getRecursivePassengersByType(Entity.class, set);
         return set;
     }
 
-    public <T extends Entity> Collection<T> func_184180_b(Class<T> p_184180_1_)
+    public <T extends Entity> Collection<T> getRecursivePassengersByType(Class<T> entityClass)
     {
         Set<T> set = Sets.<T>newHashSet();
-        this.func_184175_a(p_184180_1_, set);
+        this.getRecursivePassengersByType(entityClass, set);
         return set;
     }
 
-    private <T extends Entity> void func_184175_a(Class<T> p_184175_1_, Set<T> p_184175_2_)
+    private <T extends Entity> void getRecursivePassengersByType(Class<T> entityClass, Set<T> theSet)
     {
-        for (Entity entity : this.func_184188_bt())
+        for (Entity entity : this.getPassengers())
         {
-            if (p_184175_1_.isAssignableFrom(entity.getClass()))
+            if (entityClass.isAssignableFrom(entity.getClass()))
             {
-                p_184175_2_.add((T)entity);
+                theSet.add((T)entity);
             }
 
-            entity.func_184175_a(p_184175_1_, p_184175_2_);
+            entity.getRecursivePassengersByType(entityClass, theSet);
         }
     }
 
-    public Entity func_184208_bv()
+    public Entity getLowestRidingEntity()
     {
         Entity entity;
 
-        for (entity = this; entity.func_184218_aH(); entity = entity.func_184187_bx())
+        for (entity = this; entity.isRiding(); entity = entity.getRidingEntity())
         {
             ;
         }
@@ -2977,21 +3486,21 @@
         return entity;
     }
 
-    public boolean func_184223_x(Entity p_184223_1_)
+    public boolean isRidingSameEntity(Entity entityIn)
     {
-        return this.func_184208_bv() == p_184223_1_.func_184208_bv();
+        return this.getLowestRidingEntity() == entityIn.getLowestRidingEntity();
     }
 
-    public boolean func_184215_y(Entity p_184215_1_)
+    public boolean isRidingOrBeingRiddenBy(Entity entityIn)
     {
-        for (Entity entity : this.func_184188_bt())
+        for (Entity entity : this.getPassengers())
         {
-            if (entity.equals(p_184215_1_))
+            if (entity.equals(entityIn))
             {
                 return true;
             }
 
-            if (entity.func_184215_y(p_184215_1_))
+            if (entity.isRidingOrBeingRiddenBy(entityIn))
             {
                 return true;
             }
@@ -3000,29 +3509,29 @@
         return false;
     }
 
-    public boolean func_184186_bw()
+    public boolean canPassengerSteer()
     {
-        Entity entity = this.func_184179_bs();
-        return entity instanceof EntityPlayer ? ((EntityPlayer)entity).func_175144_cb() : !this.field_70170_p.field_72995_K;
+        Entity entity = this.getControllingPassenger();
+        return entity instanceof EntityPlayer ? ((EntityPlayer)entity).isUser() : !this.world.isRemote;
     }
 
     @Nullable
-    public Entity func_184187_bx()
+    public Entity getRidingEntity()
     {
-        return this.field_184239_as;
+        return this.ridingEntity;
     }
 
-    public EnumPushReaction func_184192_z()
+    public EnumPushReaction getPushReaction()
     {
         return EnumPushReaction.NORMAL;
     }
 
-    public SoundCategory func_184176_by()
+    public SoundCategory getSoundCategory()
     {
         return SoundCategory.NEUTRAL;
     }
 
-    public int func_190531_bD()
+    public int getFireImmuneTicks()
     {
         return 1;
     }
