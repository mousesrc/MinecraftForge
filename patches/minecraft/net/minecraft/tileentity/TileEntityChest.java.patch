--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityChest.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityChest.java
@@ -5,6 +5,7 @@
 import net.minecraft.block.BlockChest;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.InventoryPlayer;
+import net.minecraft.init.Blocks;
 import net.minecraft.init.SoundEvents;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.ContainerChest;
@@ -22,40 +23,67 @@
 import net.minecraft.util.datafix.walkers.ItemStackDataLists;
 import net.minecraft.util.math.AxisAlignedBB;
 import net.minecraft.util.math.BlockPos;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
+import java.util.List;
+
 public class TileEntityChest extends TileEntityLockableLoot implements ITickable
 {
-    private NonNullList<ItemStack> field_145985_p = NonNullList.<ItemStack>func_191197_a(27, ItemStack.field_190927_a);
-    public boolean field_145984_a;
-    public TileEntityChest field_145992_i;
-    public TileEntityChest field_145990_j;
-    public TileEntityChest field_145991_k;
-    public TileEntityChest field_145988_l;
-    public float field_145989_m;
-    public float field_145986_n;
-    public int field_145987_o;
-    private int field_145983_q;
-    private BlockChest.Type field_145982_r;
+    private NonNullList<ItemStack> chestContents = NonNullList.<ItemStack>withSize(27, ItemStack.EMPTY);
+    public boolean adjacentChestChecked;
+    public TileEntityChest adjacentChestZNeg;
+    public TileEntityChest adjacentChestXPos;
+    public TileEntityChest adjacentChestXNeg;
+    public TileEntityChest adjacentChestZPos;
+    public float lidAngle;
+    public float prevLidAngle;
+    public int numPlayersUsing;
+    private int ticksSinceSync;
+    private BlockChest.Type cachedChestType;
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = 64;
 
+    public List<ItemStack> getContents() {
+        return this.chestContents;
+    }
+
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
     public TileEntityChest()
     {
     }
 
-    public TileEntityChest(BlockChest.Type p_i46677_1_)
+    public TileEntityChest(BlockChest.Type typeIn)
     {
-        this.field_145982_r = p_i46677_1_;
+        this.cachedChestType = typeIn;
     }
 
-    public int func_70302_i_()
+    public int getSizeInventory()
     {
         return 27;
     }
 
-    public boolean func_191420_l()
+    public boolean isEmpty()
     {
-        for (ItemStack itemstack : this.field_145985_p)
+        for (ItemStack itemstack : this.chestContents)
         {
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
                 return false;
             }
@@ -64,130 +92,131 @@
         return true;
     }
 
-    public String func_70005_c_()
+    public String getName()
     {
-        return this.func_145818_k_() ? this.field_190577_o : "container.chest";
+        return this.hasCustomName() ? this.customName : "container.chest";
     }
 
-    public static void func_189677_a(DataFixer p_189677_0_)
+    public static void registerFixesChest(DataFixer fixer)
     {
-        p_189677_0_.func_188258_a(FixTypes.BLOCK_ENTITY, new ItemStackDataLists(TileEntityChest.class, new String[] {"Items"}));
+        fixer.registerWalker(FixTypes.BLOCK_ENTITY, new ItemStackDataLists(TileEntityChest.class, new String[] {"Items"}));
     }
 
-    public void func_145839_a(NBTTagCompound p_145839_1_)
+    public void readFromNBT(NBTTagCompound compound)
     {
-        super.func_145839_a(p_145839_1_);
-        this.field_145985_p = NonNullList.<ItemStack>func_191197_a(this.func_70302_i_(), ItemStack.field_190927_a);
+        super.readFromNBT(compound);
+        this.chestContents = NonNullList.<ItemStack>withSize(this.getSizeInventory(), ItemStack.EMPTY);
 
-        if (!this.func_184283_b(p_145839_1_))
+        if (!this.checkLootAndRead(compound))
         {
-            ItemStackHelper.func_191283_b(p_145839_1_, this.field_145985_p);
+            ItemStackHelper.loadAllItems(compound, this.chestContents);
         }
 
-        if (p_145839_1_.func_150297_b("CustomName", 8))
+        if (compound.hasKey("CustomName", 8))
         {
-            this.field_190577_o = p_145839_1_.func_74779_i("CustomName");
+            this.customName = compound.getString("CustomName");
         }
     }
 
-    public NBTTagCompound func_189515_b(NBTTagCompound p_189515_1_)
+    public NBTTagCompound writeToNBT(NBTTagCompound compound)
     {
-        super.func_189515_b(p_189515_1_);
+        super.writeToNBT(compound);
 
-        if (!this.func_184282_c(p_189515_1_))
+        if (!this.checkLootAndWrite(compound))
         {
-            ItemStackHelper.func_191282_a(p_189515_1_, this.field_145985_p);
+            ItemStackHelper.saveAllItems(compound, this.chestContents);
         }
 
-        if (this.func_145818_k_())
+        if (this.hasCustomName())
         {
-            p_189515_1_.func_74778_a("CustomName", this.field_190577_o);
+            compound.setString("CustomName", this.customName);
         }
 
-        return p_189515_1_;
+        return compound;
     }
 
-    public int func_70297_j_()
+    public int getInventoryStackLimit()
     {
         return 64;
     }
 
-    public void func_145836_u()
+    public void updateContainingBlockInfo()
     {
-        super.func_145836_u();
-        this.field_145984_a = false;
+        super.updateContainingBlockInfo();
+        this.adjacentChestChecked = false;
+        doubleChestHandler = null;
     }
 
     @SuppressWarnings("incomplete-switch")
-    private void func_174910_a(TileEntityChest p_174910_1_, EnumFacing p_174910_2_)
+    private void setNeighbor(TileEntityChest chestTe, EnumFacing side)
     {
-        if (p_174910_1_.func_145837_r())
+        if (chestTe.isInvalid())
         {
-            this.field_145984_a = false;
+            this.adjacentChestChecked = false;
         }
-        else if (this.field_145984_a)
+        else if (this.adjacentChestChecked)
         {
-            switch (p_174910_2_)
+            switch (side)
             {
                 case NORTH:
 
-                    if (this.field_145992_i != p_174910_1_)
+                    if (this.adjacentChestZNeg != chestTe)
                     {
-                        this.field_145984_a = false;
+                        this.adjacentChestChecked = false;
                     }
 
                     break;
                 case SOUTH:
 
-                    if (this.field_145988_l != p_174910_1_)
+                    if (this.adjacentChestZPos != chestTe)
                     {
-                        this.field_145984_a = false;
+                        this.adjacentChestChecked = false;
                     }
 
                     break;
                 case EAST:
 
-                    if (this.field_145990_j != p_174910_1_)
+                    if (this.adjacentChestXPos != chestTe)
                     {
-                        this.field_145984_a = false;
+                        this.adjacentChestChecked = false;
                     }
 
                     break;
                 case WEST:
 
-                    if (this.field_145991_k != p_174910_1_)
+                    if (this.adjacentChestXNeg != chestTe)
                     {
-                        this.field_145984_a = false;
+                        this.adjacentChestChecked = false;
                     }
             }
         }
     }
 
-    public void func_145979_i()
+    public void checkForAdjacentChests()
     {
-        if (!this.field_145984_a)
+        if (!this.adjacentChestChecked)
         {
-            this.field_145984_a = true;
-            this.field_145991_k = this.func_174911_a(EnumFacing.WEST);
-            this.field_145990_j = this.func_174911_a(EnumFacing.EAST);
-            this.field_145992_i = this.func_174911_a(EnumFacing.NORTH);
-            this.field_145988_l = this.func_174911_a(EnumFacing.SOUTH);
+            this.adjacentChestChecked = true;
+            this.adjacentChestXNeg = this.getAdjacentChest(EnumFacing.WEST);
+            this.adjacentChestXPos = this.getAdjacentChest(EnumFacing.EAST);
+            this.adjacentChestZNeg = this.getAdjacentChest(EnumFacing.NORTH);
+            this.adjacentChestZPos = this.getAdjacentChest(EnumFacing.SOUTH);
         }
     }
 
     @Nullable
-    protected TileEntityChest func_174911_a(EnumFacing p_174911_1_)
+    protected TileEntityChest getAdjacentChest(EnumFacing side)
     {
-        BlockPos blockpos = this.field_174879_c.func_177972_a(p_174911_1_);
+        BlockPos blockpos = this.pos.offset(side);
 
-        if (this.func_174912_b(blockpos))
+        if (this.isChestAt(blockpos))
         {
-            TileEntity tileentity = this.field_145850_b.func_175625_s(blockpos);
+            TileEntity tileentity = this.world.getTileEntity(blockpos);
 
             if (tileentity instanceof TileEntityChest)
             {
                 TileEntityChest tileentitychest = (TileEntityChest)tileentity;
-                tileentitychest.func_174910_a(this, p_174911_1_.func_176734_d());
+                tileentitychest.setNeighbor(this, side.getOpposite());
                 return tileentitychest;
             }
         }
@@ -195,195 +224,241 @@
         return null;
     }
 
-    private boolean func_174912_b(BlockPos p_174912_1_)
+    private boolean isChestAt(BlockPos posIn)
     {
-        if (this.field_145850_b == null)
+        if (this.world == null)
         {
             return false;
         }
         else
         {
-            Block block = this.field_145850_b.func_180495_p(p_174912_1_).func_177230_c();
-            return block instanceof BlockChest && ((BlockChest)block).field_149956_a == this.func_145980_j();
+            Block block = this.world.getBlockState(posIn).getBlock();
+            return block instanceof BlockChest && ((BlockChest)block).chestType == this.getChestType();
         }
     }
 
-    public void func_73660_a()
+    public void update()
     {
-        this.func_145979_i();
-        int i = this.field_174879_c.func_177958_n();
-        int j = this.field_174879_c.func_177956_o();
-        int k = this.field_174879_c.func_177952_p();
-        ++this.field_145983_q;
+        this.checkForAdjacentChests();
+        int i = this.pos.getX();
+        int j = this.pos.getY();
+        int k = this.pos.getZ();
+        ++this.ticksSinceSync;
 
-        if (!this.field_145850_b.field_72995_K && this.field_145987_o != 0 && (this.field_145983_q + i + j + k) % 200 == 0)
+        if (!this.world.isRemote && this.numPlayersUsing != 0 && (this.ticksSinceSync + i + j + k) % 200 == 0)
         {
-            this.field_145987_o = 0;
+            this.numPlayersUsing = 0;
             float f = 5.0F;
 
-            for (EntityPlayer entityplayer : this.field_145850_b.func_72872_a(EntityPlayer.class, new AxisAlignedBB((double)((float)i - 5.0F), (double)((float)j - 5.0F), (double)((float)k - 5.0F), (double)((float)(i + 1) + 5.0F), (double)((float)(j + 1) + 5.0F), (double)((float)(k + 1) + 5.0F))))
+            for (EntityPlayer entityplayer : this.world.getEntitiesWithinAABB(EntityPlayer.class, new AxisAlignedBB((double)((float)i - 5.0F), (double)((float)j - 5.0F), (double)((float)k - 5.0F), (double)((float)(i + 1) + 5.0F), (double)((float)(j + 1) + 5.0F), (double)((float)(k + 1) + 5.0F))))
             {
-                if (entityplayer.field_71070_bA instanceof ContainerChest)
+                if (entityplayer.openContainer instanceof ContainerChest)
                 {
-                    IInventory iinventory = ((ContainerChest)entityplayer.field_71070_bA).func_85151_d();
+                    IInventory iinventory = ((ContainerChest)entityplayer.openContainer).getLowerChestInventory();
 
-                    if (iinventory == this || iinventory instanceof InventoryLargeChest && ((InventoryLargeChest)iinventory).func_90010_a(this))
+                    if (iinventory == this || iinventory instanceof InventoryLargeChest && ((InventoryLargeChest)iinventory).isPartOfLargeChest(this))
                     {
-                        ++this.field_145987_o;
+                        ++this.numPlayersUsing;
                     }
                 }
             }
         }
 
-        this.field_145986_n = this.field_145989_m;
+        this.prevLidAngle = this.lidAngle;
         float f1 = 0.1F;
 
-        if (this.field_145987_o > 0 && this.field_145989_m == 0.0F && this.field_145992_i == null && this.field_145991_k == null)
+        if (this.numPlayersUsing > 0 && this.lidAngle == 0.0F && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null)
         {
             double d1 = (double)i + 0.5D;
             double d2 = (double)k + 0.5D;
 
-            if (this.field_145988_l != null)
+            if (this.adjacentChestZPos != null)
             {
                 d2 += 0.5D;
             }
 
-            if (this.field_145990_j != null)
+            if (this.adjacentChestXPos != null)
             {
                 d1 += 0.5D;
             }
 
-            this.field_145850_b.func_184148_a((EntityPlayer)null, d1, (double)j + 0.5D, d2, SoundEvents.field_187657_V, SoundCategory.BLOCKS, 0.5F, this.field_145850_b.field_73012_v.nextFloat() * 0.1F + 0.9F);
+            this.world.playSound((EntityPlayer)null, d1, (double)j + 0.5D, d2, SoundEvents.BLOCK_CHEST_OPEN, SoundCategory.BLOCKS, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
         }
 
-        if (this.field_145987_o == 0 && this.field_145989_m > 0.0F || this.field_145987_o > 0 && this.field_145989_m < 1.0F)
+        if (this.numPlayersUsing == 0 && this.lidAngle > 0.0F || this.numPlayersUsing > 0 && this.lidAngle < 1.0F)
         {
-            float f2 = this.field_145989_m;
+            float f2 = this.lidAngle;
 
-            if (this.field_145987_o > 0)
+            if (this.numPlayersUsing > 0)
             {
-                this.field_145989_m += 0.1F;
+                this.lidAngle += 0.1F;
             }
             else
             {
-                this.field_145989_m -= 0.1F;
+                this.lidAngle -= 0.1F;
             }
 
-            if (this.field_145989_m > 1.0F)
+            if (this.lidAngle > 1.0F)
             {
-                this.field_145989_m = 1.0F;
+                this.lidAngle = 1.0F;
             }
 
             float f3 = 0.5F;
 
-            if (this.field_145989_m < 0.5F && f2 >= 0.5F && this.field_145992_i == null && this.field_145991_k == null)
+            if (this.lidAngle < 0.5F && f2 >= 0.5F && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null)
             {
                 double d3 = (double)i + 0.5D;
                 double d0 = (double)k + 0.5D;
 
-                if (this.field_145988_l != null)
+                if (this.adjacentChestZPos != null)
                 {
                     d0 += 0.5D;
                 }
 
-                if (this.field_145990_j != null)
+                if (this.adjacentChestXPos != null)
                 {
                     d3 += 0.5D;
                 }
 
-                this.field_145850_b.func_184148_a((EntityPlayer)null, d3, (double)j + 0.5D, d0, SoundEvents.field_187651_T, SoundCategory.BLOCKS, 0.5F, this.field_145850_b.field_73012_v.nextFloat() * 0.1F + 0.9F);
+                this.world.playSound((EntityPlayer)null, d3, (double)j + 0.5D, d0, SoundEvents.BLOCK_CHEST_CLOSE, SoundCategory.BLOCKS, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
             }
 
-            if (this.field_145989_m < 0.0F)
+            if (this.lidAngle < 0.0F)
             {
-                this.field_145989_m = 0.0F;
+                this.lidAngle = 0.0F;
             }
         }
     }
 
-    public boolean func_145842_c(int p_145842_1_, int p_145842_2_)
+    public boolean receiveClientEvent(int id, int type)
     {
-        if (p_145842_1_ == 1)
+        if (id == 1)
         {
-            this.field_145987_o = p_145842_2_;
+            this.numPlayersUsing = type;
             return true;
         }
         else
         {
-            return super.func_145842_c(p_145842_1_, p_145842_2_);
+            return super.receiveClientEvent(id, type);
         }
     }
 
-    public void func_174889_b(EntityPlayer p_174889_1_)
+    public void openInventory(EntityPlayer player)
     {
-        if (!p_174889_1_.func_175149_v())
+        if (!player.isSpectator())
         {
-            if (this.field_145987_o < 0)
+            if (this.numPlayersUsing < 0)
             {
-                this.field_145987_o = 0;
+                this.numPlayersUsing = 0;
             }
+            int oldPower = Math.max(0, Math.min(15, this.numPlayersUsing)); // CraftBukkit - Get power before new viewer is added
 
-            ++this.field_145987_o;
-            this.field_145850_b.func_175641_c(this.field_174879_c, this.func_145838_q(), 1, this.field_145987_o);
-            this.field_145850_b.func_175685_c(this.field_174879_c, this.func_145838_q(), false);
 
-            if (this.func_145980_j() == BlockChest.Type.TRAP)
+            ++this.numPlayersUsing;
+            this.world.addBlockEvent(this.pos, this.getBlockType(), 1, this.numPlayersUsing);
+            this.world.notifyNeighborsOfStateChange(this.pos, this.getBlockType(), false);
+            // CraftBukkit start - Call redstone event
+            if (this.getBlockType() == Blocks.TRAPPED_CHEST) {
+                int newPower = Math.max(0, Math.min(15, this.numPlayersUsing));
+
+                if (oldPower != newPower) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRedstoneChange(world, pos.getX(), pos.getY(), pos.getZ(), oldPower, newPower);
+                }
+            }
+            // CraftBukkit end
+            if (this.getChestType() == BlockChest.Type.TRAP)
             {
-                this.field_145850_b.func_175685_c(this.field_174879_c.func_177977_b(), this.func_145838_q(), false);
+                this.world.notifyNeighborsOfStateChange(this.pos.down(), this.getBlockType(), false);
             }
         }
     }
 
-    public void func_174886_c(EntityPlayer p_174886_1_)
+    public void closeInventory(EntityPlayer player)
     {
-        if (!p_174886_1_.func_175149_v() && this.func_145838_q() instanceof BlockChest)
+        if (!player.isSpectator() && this.getBlockType() instanceof BlockChest)
         {
-            --this.field_145987_o;
-            this.field_145850_b.func_175641_c(this.field_174879_c, this.func_145838_q(), 1, this.field_145987_o);
-            this.field_145850_b.func_175685_c(this.field_174879_c, this.func_145838_q(), false);
+            int oldPower = Math.max(0, Math.min(15, this.numPlayersUsing)); // CraftBukkit - Get power before new viewer is added
 
-            if (this.func_145980_j() == BlockChest.Type.TRAP)
-            {
-                this.field_145850_b.func_175685_c(this.field_174879_c.func_177977_b(), this.func_145838_q(), false);
+            --this.numPlayersUsing;
+            this.world.addBlockEvent(this.pos, this.getBlockType(), 1, this.numPlayersUsing);
+            this.world.notifyNeighborsOfStateChange(this.pos, this.getBlockType(), false);
+
+            // CraftBukkit start - Call redstone event
+            if (this.getChestType() == BlockChest.Type.TRAP) {
+                int newPower = Math.max(0, Math.min(15, this.numPlayersUsing));
+
+                if (oldPower != newPower) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRedstoneChange(world, pos.getX(), pos.getY(), pos.getZ(), oldPower, newPower);
+                }
+                this.world.notifyNeighborsOfStateChange(this.pos.down(), this.getBlockType(), false);
             }
+            // CraftBukkit end
         }
     }
 
-    public void func_145843_s()
+    public net.minecraftforge.items.VanillaDoubleChestItemHandler doubleChestHandler;
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.EnumFacing facing)
     {
-        super.func_145843_s();
-        this.func_145836_u();
-        this.func_145979_i();
+        if (capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)
+        {
+            if(doubleChestHandler == null || doubleChestHandler.needsRefresh())
+                doubleChestHandler = net.minecraftforge.items.VanillaDoubleChestItemHandler.get(this);
+            if (doubleChestHandler != null && doubleChestHandler != net.minecraftforge.items.VanillaDoubleChestItemHandler.NO_ADJACENT_CHESTS_INSTANCE)
+                return (T) doubleChestHandler;
+        }
+        return super.getCapability(capability, facing);
     }
 
-    public BlockChest.Type func_145980_j()
+    public net.minecraftforge.items.IItemHandler getSingleChestHandler()
     {
-        if (this.field_145982_r == null)
+        return super.getCapability(net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY, null);
+    }
+
+
+    public void invalidate()
+    {
+        super.invalidate();
+        this.updateContainingBlockInfo();
+        this.checkForAdjacentChests();
+    }
+
+    public BlockChest.Type getChestType()
+    {
+        if (this.cachedChestType == null)
         {
-            if (this.field_145850_b == null || !(this.func_145838_q() instanceof BlockChest))
+            if (this.world == null || !(this.getBlockType() instanceof BlockChest))
             {
                 return BlockChest.Type.BASIC;
             }
 
-            this.field_145982_r = ((BlockChest)this.func_145838_q()).field_149956_a;
+            this.cachedChestType = ((BlockChest)this.getBlockType()).chestType;
         }
 
-        return this.field_145982_r;
+        return this.cachedChestType;
     }
 
-    public String func_174875_k()
+    public String getGuiID()
     {
         return "minecraft:chest";
     }
 
-    public Container func_174876_a(InventoryPlayer p_174876_1_, EntityPlayer p_174876_2_)
+    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
     {
-        this.func_184281_d(p_174876_2_);
-        return new ContainerChest(p_174876_1_, this, p_174876_2_);
+        this.fillWithLoot(playerIn);
+        return new ContainerChest(playerInventory, this, playerIn);
     }
 
-    protected NonNullList<ItemStack> func_190576_q()
+    protected NonNullList<ItemStack> getItems()
     {
-        return this.field_145985_p;
+        return this.chestContents;
     }
+    // CraftBukkit start
+    @Override
+    public boolean onlyOpsCanSetNbt() {
+        return true;
+    }
+    // CraftBukkit end
 }
