--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityHopper.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityHopper.java
@@ -7,13 +7,10 @@
 import net.minecraft.block.BlockHopper;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.item.EntityMinecartHopper;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.InventoryPlayer;
-import net.minecraft.inventory.Container;
-import net.minecraft.inventory.ContainerHopper;
-import net.minecraft.inventory.IInventory;
-import net.minecraft.inventory.ISidedInventory;
-import net.minecraft.inventory.ItemStackHelper;
+import net.minecraft.inventory.*;
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.util.EntitySelectors;
@@ -27,125 +24,156 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.world.World;
+import net.minecraftforge.items.VanillaInventoryCodeHooks;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.inventory.CraftInventoryDoubleChest;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
+import org.bukkit.event.inventory.InventoryPickupItemEvent;
+import org.bukkit.inventory.Inventory;
 
 public class TileEntityHopper extends TileEntityLockableLoot implements IHopper, ITickable
 {
-    private NonNullList<ItemStack> field_145900_a = NonNullList.<ItemStack>func_191197_a(5, ItemStack.field_190927_a);
-    private int field_145901_j = -1;
-    private long field_190578_g;
+    private NonNullList<ItemStack> inventory = NonNullList.<ItemStack>withSize(5, ItemStack.EMPTY);
+    private int transferCooldown = -1;
+    private long tickedGameTime;
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = 64;
 
-    public static void func_189683_a(DataFixer p_189683_0_)
+    public List<ItemStack> getContents() {
+        return this.inventory;
+    }
+
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
+    public static void registerFixesHopper(DataFixer fixer)
     {
-        p_189683_0_.func_188258_a(FixTypes.BLOCK_ENTITY, new ItemStackDataLists(TileEntityHopper.class, new String[] {"Items"}));
+        fixer.registerWalker(FixTypes.BLOCK_ENTITY, new ItemStackDataLists(TileEntityHopper.class, new String[] {"Items"}));
     }
 
-    public void func_145839_a(NBTTagCompound p_145839_1_)
+    public void readFromNBT(NBTTagCompound compound)
     {
-        super.func_145839_a(p_145839_1_);
-        this.field_145900_a = NonNullList.<ItemStack>func_191197_a(this.func_70302_i_(), ItemStack.field_190927_a);
+        super.readFromNBT(compound);
+        this.inventory = NonNullList.<ItemStack>withSize(this.getSizeInventory(), ItemStack.EMPTY);
 
-        if (!this.func_184283_b(p_145839_1_))
+        if (!this.checkLootAndRead(compound))
         {
-            ItemStackHelper.func_191283_b(p_145839_1_, this.field_145900_a);
+            ItemStackHelper.loadAllItems(compound, this.inventory);
         }
 
-        if (p_145839_1_.func_150297_b("CustomName", 8))
+        if (compound.hasKey("CustomName", 8))
         {
-            this.field_190577_o = p_145839_1_.func_74779_i("CustomName");
+            this.customName = compound.getString("CustomName");
         }
 
-        this.field_145901_j = p_145839_1_.func_74762_e("TransferCooldown");
+        this.transferCooldown = compound.getInteger("TransferCooldown");
     }
 
-    public NBTTagCompound func_189515_b(NBTTagCompound p_189515_1_)
+    public NBTTagCompound writeToNBT(NBTTagCompound compound)
     {
-        super.func_189515_b(p_189515_1_);
+        super.writeToNBT(compound);
 
-        if (!this.func_184282_c(p_189515_1_))
+        if (!this.checkLootAndWrite(compound))
         {
-            ItemStackHelper.func_191282_a(p_189515_1_, this.field_145900_a);
+            ItemStackHelper.saveAllItems(compound, this.inventory);
         }
 
-        p_189515_1_.func_74768_a("TransferCooldown", this.field_145901_j);
+        compound.setInteger("TransferCooldown", this.transferCooldown);
 
-        if (this.func_145818_k_())
+        if (this.hasCustomName())
         {
-            p_189515_1_.func_74778_a("CustomName", this.field_190577_o);
+            compound.setString("CustomName", this.customName);
         }
 
-        return p_189515_1_;
+        return compound;
     }
 
-    public int func_70302_i_()
+    public int getSizeInventory()
     {
-        return this.field_145900_a.size();
+        return this.inventory.size();
     }
 
-    public ItemStack func_70298_a(int p_70298_1_, int p_70298_2_)
+    public ItemStack decrStackSize(int index, int count)
     {
-        this.func_184281_d((EntityPlayer)null);
-        ItemStack itemstack = ItemStackHelper.func_188382_a(this.func_190576_q(), p_70298_1_, p_70298_2_);
+        this.fillWithLoot((EntityPlayer)null);
+        ItemStack itemstack = ItemStackHelper.getAndSplit(this.getItems(), index, count);
         return itemstack;
     }
 
-    public void func_70299_a(int p_70299_1_, ItemStack p_70299_2_)
+    public void setInventorySlotContents(int index, ItemStack stack)
     {
-        this.func_184281_d((EntityPlayer)null);
-        this.func_190576_q().set(p_70299_1_, p_70299_2_);
+        this.fillWithLoot((EntityPlayer)null);
+        this.getItems().set(index, stack);
 
-        if (p_70299_2_.func_190916_E() > this.func_70297_j_())
+        if (stack.getCount() > this.getInventoryStackLimit())
         {
-            p_70299_2_.func_190920_e(this.func_70297_j_());
+            stack.setCount(this.getInventoryStackLimit());
         }
     }
 
-    public String func_70005_c_()
+    public String getName()
     {
-        return this.func_145818_k_() ? this.field_190577_o : "container.hopper";
+        return this.hasCustomName() ? this.customName : "container.hopper";
     }
 
-    public int func_70297_j_()
+    public int getInventoryStackLimit()
     {
         return 64;
     }
 
-    public void func_73660_a()
+    public void update()
     {
-        if (this.field_145850_b != null && !this.field_145850_b.field_72995_K)
+        if (this.world != null && !this.world.isRemote)
         {
-            --this.field_145901_j;
-            this.field_190578_g = this.field_145850_b.func_82737_E();
+            --this.transferCooldown;
+            this.tickedGameTime = this.world.getTotalWorldTime();
 
-            if (!this.func_145888_j())
+            if (!this.isOnTransferCooldown())
             {
-                this.func_145896_c(0);
-                this.func_145887_i();
+                this.setTransferCooldown(0);
+                this.updateHopper();
             }
         }
     }
 
-    protected boolean func_145887_i()
+    protected boolean updateHopper()
     {
-        if (this.field_145850_b != null && !this.field_145850_b.field_72995_K)
+        if (this.world != null && !this.world.isRemote)
         {
-            if (!this.func_145888_j() && BlockHopper.func_149917_c(this.func_145832_p()))
+            if (!this.isOnTransferCooldown() && BlockHopper.isEnabled(this.getBlockMetadata()))
             {
                 boolean flag = false;
 
-                if (!this.func_152104_k())
+                if (!this.isInventoryEmpty())
                 {
-                    flag = this.func_145883_k();
+                    flag = this.transferItemsOut();
                 }
 
-                if (!this.func_152105_l())
+                if (!this.isFull())
                 {
-                    flag = func_145891_a(this) || flag;
+                    flag = captureDroppedItems(this) || flag;
                 }
 
                 if (flag)
                 {
-                    this.func_145896_c(8);
-                    this.func_70296_d();
+                    this.setTransferCooldown(8);
+                    this.markDirty();
                     return true;
                 }
             }
@@ -158,11 +186,11 @@
         }
     }
 
-    private boolean func_152104_k()
+    private boolean isInventoryEmpty()
     {
-        for (ItemStack itemstack : this.field_145900_a)
+        for (ItemStack itemstack : this.inventory)
         {
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
                 return false;
             }
@@ -171,16 +199,16 @@
         return true;
     }
 
-    public boolean func_191420_l()
+    public boolean isEmpty()
     {
-        return this.func_152104_k();
+        return this.isInventoryEmpty();
     }
 
-    private boolean func_152105_l()
+    private boolean isFull()
     {
-        for (ItemStack itemstack : this.field_145900_a)
+        for (ItemStack itemstack : this.inventory)
         {
-            if (itemstack.func_190926_b() || itemstack.func_190916_E() != itemstack.func_77976_d())
+            if (itemstack.isEmpty() || itemstack.getCount() != itemstack.getMaxStackSize())
             {
                 return false;
             }
@@ -189,9 +217,10 @@
         return true;
     }
 
-    private boolean func_145883_k()
+    private boolean transferItemsOut()
     {
-        IInventory iinventory = this.func_145895_l();
+        if (VanillaInventoryCodeHooks.insertHook(this)) { return true; }
+        IInventory iinventory = this.getInventoryForHopperTransfer();
 
         if (iinventory == null)
         {
@@ -199,28 +228,50 @@
         }
         else
         {
-            EnumFacing enumfacing = BlockHopper.func_176428_b(this.func_145832_p()).func_176734_d();
+            EnumFacing enumfacing = BlockHopper.getFacing(this.getBlockMetadata()).getOpposite();
 
-            if (this.func_174919_a(iinventory, enumfacing))
+            if (this.isInventoryFull(iinventory, enumfacing))
             {
                 return false;
             }
             else
             {
-                for (int i = 0; i < this.func_70302_i_(); ++i)
+                for (int i = 0; i < this.getSizeInventory(); ++i)
                 {
-                    if (!this.func_70301_a(i).func_190926_b())
+                    if (!this.getStackInSlot(i).isEmpty())
                     {
-                        ItemStack itemstack = this.func_70301_a(i).func_77946_l();
-                        ItemStack itemstack1 = func_174918_a(this, iinventory, this.func_70298_a(i, 1), enumfacing);
+                        ItemStack itemstack = this.getStackInSlot(i).copy();
+                        // CraftBukkit start - Call event when pushing items into other inventories
+                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.decrStackSize(i, 1));
 
-                        if (itemstack1.func_190926_b())
-                        {
-                            iinventory.func_70296_d();
+                        Inventory destinationInventory;
+                        // Have to special case large chests as they work oddly
+                        if (iinventory instanceof InventoryLargeChest) {
+                            destinationInventory = new CraftInventoryDoubleChest((InventoryLargeChest) iinventory);
+                        } else {
+                            destinationInventory = iinventory.getOwner().getInventory();
+                        }
+
+                        InventoryMoveItemEvent event = new InventoryMoveItemEvent(this.getOwner().getInventory(), oitemstack.clone(), destinationInventory, true);
+                        this.getWorld().getServer().getPluginManager().callEvent(event);
+                        if (event.isCancelled()) {
+                            this.setInventorySlotContents(i, itemstack);
+                            this.setTransferCooldown(8); // Delay hopper checks
+                            return false;
+                        }
+                        ItemStack itemstack1 = putStackInInventoryAllSlots(this, iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumfacing);
+
+                        if (itemstack1.isEmpty()) {
+                            if (event.getItem().equals(oitemstack)) {
+                                iinventory.markDirty();
+                            } else {
+                                this.setInventorySlotContents(i, itemstack);
+                            }
+                            // CraftBukkit end
                             return true;
                         }
 
-                        this.func_70299_a(i, itemstack);
+                        this.setInventorySlotContents(i, itemstack);
                     }
                 }
 
@@ -229,18 +280,18 @@
         }
     }
 
-    private boolean func_174919_a(IInventory p_174919_1_, EnumFacing p_174919_2_)
+    private boolean isInventoryFull(IInventory inventoryIn, EnumFacing side)
     {
-        if (p_174919_1_ instanceof ISidedInventory)
+        if (inventoryIn instanceof ISidedInventory)
         {
-            ISidedInventory isidedinventory = (ISidedInventory)p_174919_1_;
-            int[] aint = isidedinventory.func_180463_a(p_174919_2_);
+            ISidedInventory isidedinventory = (ISidedInventory)inventoryIn;
+            int[] aint = isidedinventory.getSlotsForFace(side);
 
             for (int k : aint)
             {
-                ItemStack itemstack1 = isidedinventory.func_70301_a(k);
+                ItemStack itemstack1 = isidedinventory.getStackInSlot(k);
 
-                if (itemstack1.func_190926_b() || itemstack1.func_190916_E() != itemstack1.func_77976_d())
+                if (itemstack1.isEmpty() || itemstack1.getCount() != itemstack1.getMaxStackSize())
                 {
                     return false;
                 }
@@ -248,13 +299,13 @@
         }
         else
         {
-            int i = p_174919_1_.func_70302_i_();
+            int i = inventoryIn.getSizeInventory();
 
             for (int j = 0; j < i; ++j)
             {
-                ItemStack itemstack = p_174919_1_.func_70301_a(j);
+                ItemStack itemstack = inventoryIn.getStackInSlot(j);
 
-                if (itemstack.func_190926_b() || itemstack.func_190916_E() != itemstack.func_77976_d())
+                if (itemstack.isEmpty() || itemstack.getCount() != itemstack.getMaxStackSize())
                 {
                     return false;
                 }
@@ -264,16 +315,16 @@
         return true;
     }
 
-    private static boolean func_174917_b(IInventory p_174917_0_, EnumFacing p_174917_1_)
+    private static boolean isInventoryEmpty(IInventory inventoryIn, EnumFacing side)
     {
-        if (p_174917_0_ instanceof ISidedInventory)
+        if (inventoryIn instanceof ISidedInventory)
         {
-            ISidedInventory isidedinventory = (ISidedInventory)p_174917_0_;
-            int[] aint = isidedinventory.func_180463_a(p_174917_1_);
+            ISidedInventory isidedinventory = (ISidedInventory)inventoryIn;
+            int[] aint = isidedinventory.getSlotsForFace(side);
 
             for (int i : aint)
             {
-                if (!isidedinventory.func_70301_a(i).func_190926_b())
+                if (!isidedinventory.getStackInSlot(i).isEmpty())
                 {
                     return false;
                 }
@@ -281,11 +332,11 @@
         }
         else
         {
-            int j = p_174917_0_.func_70302_i_();
+            int j = inventoryIn.getSizeInventory();
 
             for (int k = 0; k < j; ++k)
             {
-                if (!p_174917_0_.func_70301_a(k).func_190926_b())
+                if (!inventoryIn.getStackInSlot(k).isEmpty())
                 {
                     return false;
                 }
@@ -295,15 +346,17 @@
         return true;
     }
 
-    public static boolean func_145891_a(IHopper p_145891_0_)
+    public static boolean captureDroppedItems(IHopper hopper)
     {
-        IInventory iinventory = func_145884_b(p_145891_0_);
+        Boolean ret = net.minecraftforge.items.VanillaInventoryCodeHooks.extractHook(hopper);
+        if (ret != null) return ret;
+        IInventory iinventory = getHopperInventory(hopper);
 
         if (iinventory != null)
         {
             EnumFacing enumfacing = EnumFacing.DOWN;
 
-            if (func_174917_b(iinventory, enumfacing))
+            if (isInventoryEmpty(iinventory, enumfacing))
             {
                 return false;
             }
@@ -311,11 +364,11 @@
             if (iinventory instanceof ISidedInventory)
             {
                 ISidedInventory isidedinventory = (ISidedInventory)iinventory;
-                int[] aint = isidedinventory.func_180463_a(enumfacing);
+                int[] aint = isidedinventory.getSlotsForFace(enumfacing);
 
                 for (int i : aint)
                 {
-                    if (func_174915_a(p_145891_0_, iinventory, i, enumfacing))
+                    if (pullItemFromSlot(hopper, iinventory, i, enumfacing))
                     {
                         return true;
                     }
@@ -323,11 +376,11 @@
             }
             else
             {
-                int j = iinventory.func_70302_i_();
+                int j = iinventory.getSizeInventory();
 
                 for (int k = 0; k < j; ++k)
                 {
-                    if (func_174915_a(p_145891_0_, iinventory, k, enumfacing))
+                    if (pullItemFromSlot(hopper, iinventory, k, enumfacing))
                     {
                         return true;
                     }
@@ -336,9 +389,9 @@
         }
         else
         {
-            for (EntityItem entityitem : func_184292_a(p_145891_0_.func_145831_w(), p_145891_0_.func_96107_aA(), p_145891_0_.func_96109_aB(), p_145891_0_.func_96108_aC()))
+            for (EntityItem entityitem : getCaptureItems(hopper.getWorld(), hopper.getXPos(), hopper.getYPos(), hopper.getZPos()))
             {
-                if (func_145898_a((IInventory)null, p_145891_0_, entityitem))
+                if (putDropInInventoryAllSlots((IInventory)null, hopper, entityitem))
                 {
                     return true;
                 }
@@ -348,28 +401,57 @@
         return false;
     }
 
-    private static boolean func_174915_a(IHopper p_174915_0_, IInventory p_174915_1_, int p_174915_2_, EnumFacing p_174915_3_)
+    private static boolean pullItemFromSlot(IHopper hopper, IInventory inventoryIn, int index, EnumFacing direction)
     {
-        ItemStack itemstack = p_174915_1_.func_70301_a(p_174915_2_);
+        ItemStack itemstack = inventoryIn.getStackInSlot(index);
 
-        if (!itemstack.func_190926_b() && func_174921_b(p_174915_1_, itemstack, p_174915_2_, p_174915_3_))
+        if (!itemstack.isEmpty() && canExtractItemFromSlot(inventoryIn, itemstack, index, direction))
         {
-            ItemStack itemstack1 = itemstack.func_77946_l();
-            ItemStack itemstack2 = func_174918_a(p_174915_1_, p_174915_0_, p_174915_1_.func_70298_a(p_174915_2_, 1), (EnumFacing)null);
+            ItemStack itemstack1 = itemstack.copy();
+            // ItemStack itemstack2 = addItem(iinventory, ihopper, iinventory.splitStack(i, 1), (EnumDirection) null);
+            // CraftBukkit start - Call event on collection of items from inventories into the hopper
+            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(inventoryIn.decrStackSize(index, 1));
 
-            if (itemstack2.func_190926_b())
-            {
-                p_174915_1_.func_70296_d();
-                return true;
+            Inventory sourceInventory;
+            // Have to special case large chests as they work oddly
+            if (inventoryIn instanceof InventoryLargeChest) {
+                sourceInventory = new CraftInventoryDoubleChest((InventoryLargeChest) inventoryIn);
+            } else {
+                sourceInventory = inventoryIn.getOwner().getInventory();
             }
 
-            p_174915_1_.func_70299_a(p_174915_2_, itemstack1);
+            InventoryMoveItemEvent event = new InventoryMoveItemEvent(sourceInventory, oitemstack.clone(), hopper.getOwner().getInventory(), false);
+
+            hopper.getWorld().getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                inventoryIn.setInventorySlotContents(index, itemstack1);
+
+                if (hopper instanceof net.minecraft.tileentity.TileEntityHopper) {
+                    ((net.minecraft.tileentity.TileEntityHopper) hopper).setTransferCooldown(8); // Delay hopper checks
+                } else if (hopper instanceof EntityMinecartHopper) {
+                    ((EntityMinecartHopper) hopper).setTransferTicker(4); // Delay hopper minecart checks
+                }
+
+                return false;
+            }
+            ItemStack itemstack2 = putStackInInventoryAllSlots(inventoryIn, hopper, CraftItemStack.asNMSCopy(event.getItem()), null);
+
+            if (itemstack2.isEmpty()) {
+                if (event.getItem().equals(oitemstack)) {
+                    inventoryIn.markDirty();
+                } else {
+                    inventoryIn.setInventorySlotContents(index, itemstack1);
+                }
+                // CraftBukkit end
+            }
+
+            inventoryIn.setInventorySlotContents(index, itemstack1);
         }
 
         return false;
     }
 
-    public static boolean func_145898_a(IInventory p_145898_0_, IInventory p_145898_1_, EntityItem p_145898_2_)
+    public static boolean putDropInInventoryAllSlots(IInventory p_145898_0_, IInventory itemIn, EntityItem p_145898_2_)
     {
         boolean flag = false;
 
@@ -379,141 +461,155 @@
         }
         else
         {
-            ItemStack itemstack = p_145898_2_.func_92059_d().func_77946_l();
-            ItemStack itemstack1 = func_174918_a(p_145898_0_, p_145898_1_, itemstack, (EnumFacing)null);
+            // CraftBukkit start
+            InventoryPickupItemEvent event = new InventoryPickupItemEvent(itemIn.getOwner().getInventory(), (org.bukkit.entity.Item) p_145898_2_.getBukkitEntity());
+            p_145898_2_.world.getServer().getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return false;
+            }
+            // CraftBukkit end
+            ItemStack itemstack = p_145898_2_.getEntityItem().copy();
+            ItemStack itemstack1 = putStackInInventoryAllSlots(p_145898_0_, itemIn, itemstack, (EnumFacing)null);
 
-            if (itemstack1.func_190926_b())
+            if (itemstack1.isEmpty())
             {
                 flag = true;
-                p_145898_2_.func_70106_y();
+                p_145898_2_.setDead();
             }
             else
             {
-                p_145898_2_.func_92058_a(itemstack1);
+                p_145898_2_.setEntityItemStack(itemstack1);
             }
 
             return flag;
         }
     }
 
-    public static ItemStack func_174918_a(IInventory p_174918_0_, IInventory p_174918_1_, ItemStack p_174918_2_, @Nullable EnumFacing p_174918_3_)
+
+    protected net.minecraftforge.items.IItemHandler createUnSidedHandler()
     {
-        if (p_174918_1_ instanceof ISidedInventory && p_174918_3_ != null)
+        return new net.minecraftforge.items.VanillaHopperItemHandler(this);
+    }
+
+    public static ItemStack putStackInInventoryAllSlots(IInventory inventoryIn, IInventory stack, ItemStack side, @Nullable EnumFacing p_174918_3_)
+    {
+        if (stack instanceof ISidedInventory && p_174918_3_ != null)
         {
-            ISidedInventory isidedinventory = (ISidedInventory)p_174918_1_;
-            int[] aint = isidedinventory.func_180463_a(p_174918_3_);
+            ISidedInventory isidedinventory = (ISidedInventory)stack;
+            int[] aint = isidedinventory.getSlotsForFace(p_174918_3_);
 
-            for (int k = 0; k < aint.length && !p_174918_2_.func_190926_b(); ++k)
+            for (int k = 0; k < aint.length && !side.isEmpty(); ++k)
             {
-                p_174918_2_ = func_174916_c(p_174918_0_, p_174918_1_, p_174918_2_, aint[k], p_174918_3_);
+                side = insertStack(inventoryIn, stack, side, aint[k], p_174918_3_);
             }
         }
         else
         {
-            int i = p_174918_1_.func_70302_i_();
+            int i = stack.getSizeInventory();
 
-            for (int j = 0; j < i && !p_174918_2_.func_190926_b(); ++j)
+            for (int j = 0; j < i && !side.isEmpty(); ++j)
             {
-                p_174918_2_ = func_174916_c(p_174918_0_, p_174918_1_, p_174918_2_, j, p_174918_3_);
+                side = insertStack(inventoryIn, stack, side, j, p_174918_3_);
             }
         }
 
-        return p_174918_2_;
+        return side;
     }
 
-    private static boolean func_174920_a(IInventory p_174920_0_, ItemStack p_174920_1_, int p_174920_2_, EnumFacing p_174920_3_)
+    private static boolean canInsertItemInSlot(IInventory inventoryIn, ItemStack stack, int index, EnumFacing side)
     {
-        return !p_174920_0_.func_94041_b(p_174920_2_, p_174920_1_) ? false : !(p_174920_0_ instanceof ISidedInventory) || ((ISidedInventory)p_174920_0_).func_180462_a(p_174920_2_, p_174920_1_, p_174920_3_);
+        return !inventoryIn.isItemValidForSlot(index, stack) ? false : !(inventoryIn instanceof ISidedInventory) || ((ISidedInventory)inventoryIn).canInsertItem(index, stack, side);
     }
 
-    private static boolean func_174921_b(IInventory p_174921_0_, ItemStack p_174921_1_, int p_174921_2_, EnumFacing p_174921_3_)
+    private static boolean canExtractItemFromSlot(IInventory inventoryIn, ItemStack stack, int index, EnumFacing side)
     {
-        return !(p_174921_0_ instanceof ISidedInventory) || ((ISidedInventory)p_174921_0_).func_180461_b(p_174921_2_, p_174921_1_, p_174921_3_);
+        return !(inventoryIn instanceof ISidedInventory) || ((ISidedInventory)inventoryIn).canExtractItem(index, stack, side);
     }
 
-    private static ItemStack func_174916_c(IInventory p_174916_0_, IInventory p_174916_1_, ItemStack p_174916_2_, int p_174916_3_, EnumFacing p_174916_4_)
+    private static ItemStack insertStack(IInventory inventoryIn, IInventory stack, ItemStack index, int side, EnumFacing p_174916_4_)
     {
-        ItemStack itemstack = p_174916_1_.func_70301_a(p_174916_3_);
+        ItemStack itemstack = stack.getStackInSlot(side);
 
-        if (func_174920_a(p_174916_1_, p_174916_2_, p_174916_3_, p_174916_4_))
+        if (canInsertItemInSlot(stack, index, side, p_174916_4_))
         {
             boolean flag = false;
-            boolean flag1 = p_174916_1_.func_191420_l();
+            boolean flag1 = stack.isEmpty();
 
-            if (itemstack.func_190926_b())
+            if (itemstack.isEmpty())
             {
-                p_174916_1_.func_70299_a(p_174916_3_, p_174916_2_);
-                p_174916_2_ = ItemStack.field_190927_a;
+                stack.setInventorySlotContents(side, index);
+                index = ItemStack.EMPTY;
                 flag = true;
             }
-            else if (func_145894_a(itemstack, p_174916_2_))
+            else if (canCombine(itemstack, index))
             {
-                int i = p_174916_2_.func_77976_d() - itemstack.func_190916_E();
-                int j = Math.min(p_174916_2_.func_190916_E(), i);
-                p_174916_2_.func_190918_g(j);
-                itemstack.func_190917_f(j);
+                int i = index.getMaxStackSize() - itemstack.getCount();
+                int j = Math.min(index.getCount(), i);
+                index.shrink(j);
+                itemstack.grow(j);
                 flag = j > 0;
             }
 
             if (flag)
             {
-                if (flag1 && p_174916_1_ instanceof TileEntityHopper)
+                if (flag1 && stack instanceof TileEntityHopper)
                 {
-                    TileEntityHopper tileentityhopper1 = (TileEntityHopper)p_174916_1_;
+                    TileEntityHopper tileentityhopper1 = (TileEntityHopper)stack;
 
-                    if (!tileentityhopper1.func_174914_o())
+                    if (!tileentityhopper1.mayTransfer())
                     {
                         int k = 0;
 
-                        if (p_174916_0_ != null && p_174916_0_ instanceof TileEntityHopper)
+                        if (inventoryIn != null && inventoryIn instanceof TileEntityHopper)
                         {
-                            TileEntityHopper tileentityhopper = (TileEntityHopper)p_174916_0_;
+                            TileEntityHopper tileentityhopper = (TileEntityHopper)inventoryIn;
 
-                            if (tileentityhopper1.field_190578_g >= tileentityhopper.field_190578_g)
+                            if (tileentityhopper1.tickedGameTime >= tileentityhopper.tickedGameTime)
                             {
                                 k = 1;
                             }
                         }
 
-                        tileentityhopper1.func_145896_c(8 - k);
+                        tileentityhopper1.setTransferCooldown(8 - k);
                     }
                 }
 
-                p_174916_1_.func_70296_d();
+                stack.markDirty();
             }
         }
 
-        return p_174916_2_;
+        return index;
     }
 
-    private IInventory func_145895_l()
+    private IInventory getInventoryForHopperTransfer()
     {
-        EnumFacing enumfacing = BlockHopper.func_176428_b(this.func_145832_p());
-        return func_145893_b(this.func_145831_w(), this.func_96107_aA() + (double)enumfacing.func_82601_c(), this.func_96109_aB() + (double)enumfacing.func_96559_d(), this.func_96108_aC() + (double)enumfacing.func_82599_e());
+        EnumFacing enumfacing = BlockHopper.getFacing(this.getBlockMetadata());
+        return getInventoryAtPosition(this.getWorld(), this.getXPos() + (double)enumfacing.getFrontOffsetX(), this.getYPos() + (double)enumfacing.getFrontOffsetY(), this.getZPos() + (double)enumfacing.getFrontOffsetZ());
     }
 
-    public static IInventory func_145884_b(IHopper p_145884_0_)
+    public static IInventory getHopperInventory(IHopper hopper)
     {
-        return func_145893_b(p_145884_0_.func_145831_w(), p_145884_0_.func_96107_aA(), p_145884_0_.func_96109_aB() + 1.0D, p_145884_0_.func_96108_aC());
+        return getInventoryAtPosition(hopper.getWorld(), hopper.getXPos(), hopper.getYPos() + 1.0D, hopper.getZPos());
     }
 
-    public static List<EntityItem> func_184292_a(World p_184292_0_, double p_184292_1_, double p_184292_3_, double p_184292_5_)
+    public static List<EntityItem> getCaptureItems(World worldIn, double p_184292_1_, double p_184292_3_, double p_184292_5_)
     {
-        return p_184292_0_.<EntityItem>func_175647_a(EntityItem.class, new AxisAlignedBB(p_184292_1_ - 0.5D, p_184292_3_, p_184292_5_ - 0.5D, p_184292_1_ + 0.5D, p_184292_3_ + 1.5D, p_184292_5_ + 0.5D), EntitySelectors.field_94557_a);
+        return worldIn.<EntityItem>getEntitiesWithinAABB(EntityItem.class, new AxisAlignedBB(p_184292_1_ - 0.5D, p_184292_3_, p_184292_5_ - 0.5D, p_184292_1_ + 0.5D, p_184292_3_ + 1.5D, p_184292_5_ + 0.5D), EntitySelectors.IS_ALIVE);
     }
 
-    public static IInventory func_145893_b(World p_145893_0_, double p_145893_1_, double p_145893_3_, double p_145893_5_)
+    public static IInventory getInventoryAtPosition(World worldIn, double x, double y, double z)
     {
         IInventory iinventory = null;
-        int i = MathHelper.func_76128_c(p_145893_1_);
-        int j = MathHelper.func_76128_c(p_145893_3_);
-        int k = MathHelper.func_76128_c(p_145893_5_);
+        int i = MathHelper.floor(x);
+        int j = MathHelper.floor(y);
+        int k = MathHelper.floor(z);
         BlockPos blockpos = new BlockPos(i, j, k);
-        Block block = p_145893_0_.func_180495_p(blockpos).func_177230_c();
+        net.minecraft.block.state.IBlockState state = worldIn.getBlockState(blockpos);
+        Block block = state.getBlock();
 
-        if (block.func_149716_u())
+        if (block.hasTileEntity(state))
         {
-            TileEntity tileentity = p_145893_0_.func_175625_s(blockpos);
+            TileEntity tileentity = worldIn.getTileEntity(blockpos);
 
             if (tileentity instanceof IInventory)
             {
@@ -521,72 +617,74 @@
 
                 if (iinventory instanceof TileEntityChest && block instanceof BlockChest)
                 {
-                    iinventory = ((BlockChest)block).func_189418_a(p_145893_0_, blockpos, true);
+                    iinventory = ((BlockChest)block).getContainer(worldIn, blockpos, true);
                 }
             }
         }
 
         if (iinventory == null)
         {
-            List<Entity> list = p_145893_0_.func_175674_a((Entity)null, new AxisAlignedBB(p_145893_1_ - 0.5D, p_145893_3_ - 0.5D, p_145893_5_ - 0.5D, p_145893_1_ + 0.5D, p_145893_3_ + 0.5D, p_145893_5_ + 0.5D), EntitySelectors.field_96566_b);
+            List<Entity> list = worldIn.getEntitiesInAABBexcluding((Entity)null, new AxisAlignedBB(x - 0.5D, y - 0.5D, z - 0.5D, x + 0.5D, y + 0.5D, z + 0.5D), EntitySelectors.HAS_INVENTORY);
 
             if (!list.isEmpty())
             {
-                iinventory = (IInventory)list.get(p_145893_0_.field_73012_v.nextInt(list.size()));
+                iinventory = (IInventory)list.get(worldIn.rand.nextInt(list.size()));
             }
         }
 
         return iinventory;
     }
 
-    private static boolean func_145894_a(ItemStack p_145894_0_, ItemStack p_145894_1_)
+    private static boolean canCombine(ItemStack stack1, ItemStack stack2)
     {
-        return p_145894_0_.func_77973_b() != p_145894_1_.func_77973_b() ? false : (p_145894_0_.func_77960_j() != p_145894_1_.func_77960_j() ? false : (p_145894_0_.func_190916_E() > p_145894_0_.func_77976_d() ? false : ItemStack.func_77970_a(p_145894_0_, p_145894_1_)));
+        return stack1.getItem() != stack2.getItem() ? false : (stack1.getMetadata() != stack2.getMetadata() ? false : (stack1.getCount() > stack1.getMaxStackSize() ? false : ItemStack.areItemStackTagsEqual(stack1, stack2)));
     }
 
-    public double func_96107_aA()
+    public double getXPos()
     {
-        return (double)this.field_174879_c.func_177958_n() + 0.5D;
+        return (double)this.pos.getX() + 0.5D;
     }
 
-    public double func_96109_aB()
+    public double getYPos()
     {
-        return (double)this.field_174879_c.func_177956_o() + 0.5D;
+        return (double)this.pos.getY() + 0.5D;
     }
 
-    public double func_96108_aC()
+    public double getZPos()
     {
-        return (double)this.field_174879_c.func_177952_p() + 0.5D;
+        return (double)this.pos.getZ() + 0.5D;
     }
 
-    public void func_145896_c(int p_145896_1_)
+    public void setTransferCooldown(int ticks)
     {
-        this.field_145901_j = p_145896_1_;
+        this.transferCooldown = ticks;
     }
 
-    private boolean func_145888_j()
+    private boolean isOnTransferCooldown()
     {
-        return this.field_145901_j > 0;
+        return this.transferCooldown > 0;
     }
 
-    public boolean func_174914_o()
+    public boolean mayTransfer()
     {
-        return this.field_145901_j > 8;
+        return this.transferCooldown > 8;
     }
 
-    public String func_174875_k()
+    public String getGuiID()
     {
         return "minecraft:hopper";
     }
 
-    public Container func_174876_a(InventoryPlayer p_174876_1_, EntityPlayer p_174876_2_)
+    public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
     {
-        this.func_184281_d(p_174876_2_);
-        return new ContainerHopper(p_174876_1_, this, p_174876_2_);
+        this.fillWithLoot(playerIn);
+        return new ContainerHopper(playerInventory, this, playerIn);
     }
 
-    protected NonNullList<ItemStack> func_190576_q()
+    protected NonNullList<ItemStack> getItems()
     {
-        return this.field_145900_a;
+        return this.inventory;
     }
+
+    public long getLastUpdateTime() { return tickedGameTime; } // Forge
 }
