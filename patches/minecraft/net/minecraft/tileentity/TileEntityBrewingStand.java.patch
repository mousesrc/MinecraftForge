--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
@@ -1,6 +1,8 @@
 package net.minecraft.tileentity;
 
 import java.util.Arrays;
+import java.util.List;
+
 import net.minecraft.block.BlockBrewingStand;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
@@ -15,6 +17,7 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.potion.PotionHelper;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.ITickable;
 import net.minecraft.util.NonNullList;
@@ -22,6 +25,14 @@
 import net.minecraft.util.datafix.FixTypes;
 import net.minecraft.util.datafix.walkers.ItemStackDataLists;
 import net.minecraft.util.math.BlockPos;
+import org.bukkit.craftbukkit.CraftChunk;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.BrewEvent;
+import org.bukkit.event.inventory.BrewingStandFuelEvent;
 
 public class TileEntityBrewingStand extends TileEntityLockable implements ITickable, ISidedInventory
 {
@@ -34,7 +45,31 @@
     private Item field_145944_m;
     private String field_145942_n;
     private int field_184278_m;
+    // CraftBukkit start - add fields and methods
+    private int lastTick = MinecraftServer.currentTick;
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = 64;
 
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public List<ItemStack> getContents() {
+        return this.field_145945_j;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
     public String func_70005_c_()
     {
         return this.func_145818_k_() ? this.field_145942_n : "container.brewing";
@@ -74,8 +109,19 @@
 
         if (this.field_184278_m <= 0 && itemstack.func_77973_b() == Items.field_151065_br)
         {
-            this.field_184278_m = 20;
-            itemstack.func_190918_g(1);
+            // CraftBukkit start
+            BrewingStandFuelEvent event = new BrewingStandFuelEvent(field_145850_b.getWorld().getBlockAt(field_174879_c.func_177958_n(), field_174879_c.func_177956_o(), field_174879_c.func_177952_p()), CraftItemStack.asCraftMirror(itemstack), 20);
+            this.field_145850_b.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+
+            this.field_184278_m = event.getFuelPower(); // PAIL fuelLevel
+            if (this.field_184278_m > 0 && event.isConsuming()) {
+                itemstack.func_190918_g(1);
+            }
+            // CraftBukkit end
             this.func_70296_d();
         }
 
@@ -153,6 +199,7 @@
 
     private boolean func_145934_k()
     {
+        if (1 == 1) return net.minecraftforge.common.brewing.BrewingRecipeRegistry.canBrew(field_145945_j, field_145945_j.get(3), field_145947_i); // divert to VanillaBrewingRegistry
         ItemStack itemstack = (ItemStack)this.field_145945_j.get(3);
 
         if (itemstack.func_190926_b())
@@ -181,19 +228,26 @@
 
     private void func_145940_l()
     {
+        if (net.minecraftforge.event.ForgeEventFactory.onPotionAttemptBrew(field_145945_j)) return;
+        // CraftBukkit start
+        if (getOwner() != null) {
+            BrewEvent event = new BrewEvent(field_145850_b.getWorld().getBlockAt(field_174879_c.func_177958_n(), field_174879_c.func_177956_o(), field_174879_c.func_177952_p()), (org.bukkit.inventory.BrewerInventory) this.getOwner().getInventory(), this.field_184278_m);
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
+        }
+        // CraftBukkit end
         ItemStack itemstack = (ItemStack)this.field_145945_j.get(3);
 
-        for (int i = 0; i < 3; ++i)
-        {
-            this.field_145945_j.set(i, PotionHelper.func_185212_d(itemstack, (ItemStack)this.field_145945_j.get(i)));
-        }
+        net.minecraftforge.common.brewing.BrewingRecipeRegistry.brewPotions(field_145945_j, field_145945_j.get(3), field_145947_i);
 
         itemstack.func_190918_g(1);
         BlockPos blockpos = this.func_174877_v();
 
-        if (itemstack.func_77973_b().func_77634_r())
+        if (itemstack.func_77973_b().hasContainerItem(itemstack))
         {
-            ItemStack itemstack1 = new ItemStack(itemstack.func_77973_b().func_77668_q());
+            ItemStack itemstack1 = itemstack.func_77973_b().getContainerItem(itemstack);
 
             if (itemstack.func_190926_b())
             {
@@ -204,9 +258,9 @@
                 InventoryHelper.func_180173_a(this.field_145850_b, (double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p(), itemstack1);
             }
         }
-
         this.field_145945_j.set(3, itemstack);
         this.field_145850_b.func_175718_b(1035, blockpos, 0);
+        net.minecraftforge.event.ForgeEventFactory.onPotionBrewed(field_145945_j);
     }
 
     public static void func_189675_a(DataFixer p_189675_0_)
@@ -289,12 +343,12 @@
     {
         if (p_94041_1_ == 3)
         {
-            return PotionHelper.func_185205_a(p_94041_2_);
+            return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidIngredient(p_94041_2_);
         }
         else
         {
             Item item = p_94041_2_.func_77973_b();
-            return p_94041_1_ == 4 ? item == Items.field_151065_br : (item == Items.field_151068_bn || item == Items.field_185155_bH || item == Items.field_185156_bI || item == Items.field_151069_bo) && this.func_70301_a(p_94041_1_) == ItemStack.field_190927_a;
+            return p_94041_1_ == 4 ? item == Items.field_151065_br : net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidInput(p_94041_2_) && this.func_70301_a(p_94041_1_).func_190926_b(); // FORGE - Fix MC-111753 Identity comparing with ItemStack.EMPTY
         }
     }
 
@@ -348,6 +402,26 @@
         }
     }
 
+    net.minecraftforge.items.IItemHandler handlerInput = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.UP);
+    net.minecraftforge.items.IItemHandler handlerOutput = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.DOWN);
+    net.minecraftforge.items.IItemHandler handlerSides = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.NORTH);
+
+    @SuppressWarnings("unchecked")
+    @Override
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @javax.annotation.Nullable net.minecraft.util.EnumFacing facing)
+    {
+        if (facing != null && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)
+        {
+            if (facing == EnumFacing.UP)
+                return (T) handlerInput;
+            else if (facing == EnumFacing.DOWN)
+                return (T) handlerOutput;
+            else
+                return (T) handlerSides;
+        }
+        return super.getCapability(capability, facing);
+    }
+
     public int func_174890_g()
     {
         return 2;
