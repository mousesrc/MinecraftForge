--- ../src-base/minecraft/net/minecraft/world/chunk/Chunk.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/Chunk.java
@@ -39,6 +39,8 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Server;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 
 public class Chunk
 {
@@ -67,7 +69,35 @@
     private int field_76649_t;
     private final ConcurrentLinkedQueue<BlockPos> field_177447_w;
     public boolean field_189550_d;
+    // CraftBukkit start - Neighbor loaded cache for chunk lighting and entity ticking
+    private int neighbors = 0x1 << 12;
+    public long chunkKey;
 
+    public boolean areNeighborsLoaded(final int radius) {
+        switch (radius) {
+            case 2:
+                return this.neighbors == Integer.MAX_VALUE >> 6;
+            case 1:
+                final int mask =
+                        //       x        z   offset          x        z   offset          x         z   offset
+                        (0x1 << (1 * 5 +  1 + 12)) | (0x1 << (0 * 5 +  1 + 12)) | (0x1 << (-1 * 5 +  1 + 12)) |
+                                (0x1 << (1 * 5 +  0 + 12)) | (0x1 << (0 * 5 +  0 + 12)) | (0x1 << (-1 * 5 +  0 + 12)) |
+                                (0x1 << (1 * 5 + -1 + 12)) | (0x1 << (0 * 5 + -1 + 12)) | (0x1 << (-1 * 5 + -1 + 12));
+                return (this.neighbors & mask) == mask;
+            default:
+                throw new UnsupportedOperationException(String.valueOf(radius));
+        }
+    }
+
+    public void setNeighborLoaded(final int x, final int z) {
+        this.neighbors |= 0x1 << (x * 5 + 12 + z);
+    }
+
+    public void setNeighborUnloaded(final int x, final int z) {
+        this.neighbors &= ~(0x1 << (x * 5 + 12 + z));
+    }
+    // CraftBukkit end
+
     public Chunk(World p_i1995_1_, int p_i1995_2_, int p_i1995_3_)
     {
         this.field_76652_q = new ExtendedBlockStorage[16];
@@ -90,8 +120,15 @@
 
         Arrays.fill((int[])this.field_76638_b, (int) - 999);
         Arrays.fill(this.field_76651_r, (byte) - 1);
+        // CraftBukkit start
+        this.bukkitChunk = new org.bukkit.craftbukkit.CraftChunk(this);
+        this.chunkKey = ChunkPos.func_77272_a(this.field_76635_g, this.field_76647_h);
     }
 
+    public org.bukkit.Chunk bukkitChunk;
+    public boolean mustSave;
+    // CraftBukkit end
+
     public Chunk(World p_i45645_1_, ChunkPrimer p_i45645_2_, int p_i45645_3_, int p_i45645_4_)
     {
         this(p_i45645_1_, p_i45645_3_, p_i45645_4_);
@@ -178,7 +215,7 @@
                 {
                     IBlockState iblockstate = this.func_186032_a(j, l - 1, k);
 
-                    if (iblockstate.func_185891_c() != 0)
+                    if (this.func_150808_b(j, l - 1, k) != 0)
                     {
                         this.field_76634_f[k << 4 | j] = l;
 
@@ -451,12 +488,13 @@
 
     public int func_177437_b(BlockPos p_177437_1_)
     {
-        return this.func_177435_g(p_177437_1_).func_185891_c();
+        return this.func_177435_g(p_177437_1_).getLightOpacity(this.field_76637_e, p_177437_1_);
     }
 
     private int func_150808_b(int p_150808_1_, int p_150808_2_, int p_150808_3_)
     {
-        return this.func_186032_a(p_150808_1_, p_150808_2_, p_150808_3_).func_185891_c();
+        IBlockState state = this.func_186032_a(p_150808_1_, p_150808_2_, p_150808_3_); //Forge: Can sometimes be called before we are added to the global world list. So use the less accurate one during that. It'll be recalculated later
+        return !field_76636_d ? state.func_185891_c() : state.getLightOpacity(field_76637_e, new BlockPos(field_76635_g << 4 | p_150808_1_ & 15, p_150808_2_, field_76647_h << 4 | p_150808_3_ & 15));
     }
 
     public IBlockState func_177435_g(BlockPos p_177435_1_)
@@ -538,6 +576,7 @@
         {
             Block block = p_177436_2_.func_177230_c();
             Block block1 = iblockstate.func_177230_c();
+            int k1 = iblockstate.getLightOpacity(this.field_76637_e, p_177436_1_); // Relocate old light value lookup here, so that it is called before TE is removed.
             ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
             boolean flag = false;
 
@@ -555,14 +594,19 @@
 
             extendedblockstorage.func_177484_a(i, j & 15, k, p_177436_2_);
 
-            if (block1 != block)
+            //if (block1 != block)
             {
                 if (!this.field_76637_e.field_72995_K)
                 {
+                    if (block1 != block) //Only fire block breaks when the block changes.
                     block1.func_180663_b(this.field_76637_e, p_177436_1_, iblockstate);
+                    TileEntity te = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
+                    if (te != null && te.shouldRefresh(this.field_76637_e, p_177436_1_, iblockstate, p_177436_2_)) this.field_76637_e.func_175713_t(p_177436_1_);
                 }
-                else if (block1 instanceof ITileEntityProvider)
+                else if (block1.hasTileEntity(iblockstate))
                 {
+                    TileEntity te = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
+                    if (te != null && te.shouldRefresh(this.field_76637_e, p_177436_1_, iblockstate, p_177436_2_))
                     this.field_76637_e.func_175713_t(p_177436_1_);
                 }
             }
@@ -579,8 +623,7 @@
                 }
                 else
                 {
-                    int j1 = p_177436_2_.func_185891_c();
-                    int k1 = iblockstate.func_185891_c();
+                    int j1 = p_177436_2_.getLightOpacity(this.field_76637_e, p_177436_1_);
 
                     if (j1 > 0)
                     {
@@ -600,28 +643,19 @@
                     }
                 }
 
-                if (block1 instanceof ITileEntityProvider)
+                // If capturing blocks, only run block physics for TE's. Non-TE's are handled in ForgeHooks.onPlaceItemIntoWorld
+                if (!this.field_76637_e.field_72995_K && block1 != block && (!this.field_76637_e.captureBlockSnapshots || block.hasTileEntity(p_177436_2_)))
                 {
-                    TileEntity tileentity = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
-
-                    if (tileentity != null)
-                    {
-                        tileentity.func_145836_u();
-                    }
-                }
-
-                if (!this.field_76637_e.field_72995_K && block1 != block)
-                {
                     block.func_176213_c(this.field_76637_e, p_177436_1_, p_177436_2_);
                 }
 
-                if (block instanceof ITileEntityProvider)
+                if (block.hasTileEntity(p_177436_2_))
                 {
                     TileEntity tileentity1 = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
 
                     if (tileentity1 == null)
                     {
-                        tileentity1 = ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, block.func_176201_c(p_177436_2_));
+                        tileentity1 = block.createTileEntity(this.field_76637_e, p_177436_2_);
                         this.field_76637_e.func_175690_a(p_177436_1_, tileentity1);
                     }
 
@@ -666,6 +700,7 @@
         {
             if (this.field_76637_e.field_73011_w.func_191066_m())
             {
+                //System.out.println("We are setting light for x : " + i + " y : " + j + " z : " + k + " => " + value );
                 extendedblockstorage.func_76657_c(i, j & 15, k, p_177431_3_);
             }
         }
@@ -725,6 +760,7 @@
             k = this.field_76645_j.length - 1;
         }
 
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EnteringChunk(p_76612_1_, this.field_76635_g, this.field_76647_h, p_76612_1_.field_70176_ah, p_76612_1_.field_70164_aj));
         p_76612_1_.field_70175_ag = true;
         p_76612_1_.field_70176_ah = this.field_76635_g;
         p_76612_1_.field_70162_ai = k;
@@ -765,7 +801,7 @@
     {
         IBlockState iblockstate = this.func_177435_g(p_177422_1_);
         Block block = iblockstate.func_177230_c();
-        return !block.func_149716_u() ? null : ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, iblockstate.func_177230_c().func_176201_c(iblockstate));
+        return !block.hasTileEntity(iblockstate) ? null : block.createTileEntity(this.field_76637_e, iblockstate);
     }
 
     @Nullable
@@ -773,6 +809,12 @@
     {
         TileEntity tileentity = (TileEntity)this.field_150816_i.get(p_177424_1_);
 
+        if (tileentity != null && tileentity.func_145837_r())
+        {
+            field_150816_i.remove(p_177424_1_);
+            tileentity = null;
+        }
+
         if (tileentity == null)
         {
             if (p_177424_2_ == Chunk.EnumCreateEntityType.IMMEDIATE)
@@ -782,14 +824,9 @@
             }
             else if (p_177424_2_ == Chunk.EnumCreateEntityType.QUEUED)
             {
-                this.field_177447_w.add(p_177424_1_);
+                this.field_177447_w.add(p_177424_1_.func_185334_h());
             }
         }
-        else if (tileentity.func_145837_r())
-        {
-            this.field_150816_i.remove(p_177424_1_);
-            return null;
-        }
 
         return tileentity;
     }
@@ -804,20 +841,25 @@
         }
     }
 
-    public void func_177426_a(BlockPos p_177426_1_, TileEntity p_177426_2_)
-    {
-        p_177426_2_.func_145834_a(this.field_76637_e);
+    public void func_177426_a(BlockPos p_177426_1_, TileEntity p_177426_2_) {
+        if (p_177426_2_.func_145831_w() != this.field_76637_e) //Forge don't call unless it's changed, could screw up bad mods.
+            p_177426_2_.func_145834_a(this.field_76637_e);
         p_177426_2_.func_174878_a(p_177426_1_);
 
-        if (this.func_177435_g(p_177426_1_).func_177230_c() instanceof ITileEntityProvider)
-        {
-            if (this.field_150816_i.containsKey(p_177426_1_))
-            {
-                ((TileEntity)this.field_150816_i.get(p_177426_1_)).func_145843_s();
+        if (this.func_177435_g(p_177426_1_).func_177230_c().hasTileEntity(this.func_177435_g(p_177426_1_))) {
+            if (this.field_150816_i.containsKey(p_177426_1_)) {
+                ((TileEntity) this.field_150816_i.get(p_177426_1_)).func_145843_s();
             }
 
             p_177426_2_.func_145829_t();
             this.field_150816_i.put(p_177426_1_, p_177426_2_);
+            // CraftBukkit start
+        } else {
+            System.out.println("Attempted to place a tile entity (" + p_177426_2_ + ") at " + p_177426_2_.func_174877_v().func_177958_n() + "," + p_177426_2_.func_174877_v().func_177956_o() + "," + p_177426_2_.func_174877_v().func_177952_p()
+                    + " (" + CraftMagicNumbers.getMaterial(func_177435_g(p_177426_1_).func_177230_c()) + ") where there was no entity tile!");
+            System.out.println("Chunk coordinates: " + (this.field_76635_g * 16) + "," + (this.field_76647_h * 16));
+            new Exception().printStackTrace();
+            // CraftBukkit end
         }
     }
 
@@ -841,8 +883,9 @@
 
         for (ClassInheritanceMultiMap<Entity> classinheritancemultimap : this.field_76645_j)
         {
-            this.field_76637_e.func_175650_b(classinheritancemultimap);
+            this.field_76637_e.func_175650_b(com.google.common.collect.ImmutableList.copyOf(classinheritancemultimap));
         }
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(this));
     }
 
     public void func_76623_d()
@@ -858,6 +901,7 @@
         {
             this.field_76637_e.func_175681_c(classinheritancemultimap);
         }
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Unload(this));
     }
 
     public void func_76630_e()
@@ -867,8 +911,8 @@
 
     public void func_177414_a(@Nullable Entity p_177414_1_, AxisAlignedBB p_177414_2_, List<Entity> p_177414_3_, Predicate <? super Entity > p_177414_4_)
     {
-        int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - 2.0D) / 16.0D);
-        int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + 2.0D) / 16.0D);
+        int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - World.MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + World.MAX_ENTITY_RADIUS) / 16.0D);
         i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
         j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -905,8 +949,8 @@
 
     public <T extends Entity> void func_177430_a(Class <? extends T > p_177430_1_, AxisAlignedBB p_177430_2_, List<T> p_177430_3_, Predicate <? super T > p_177430_4_)
     {
-        int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - 2.0D) / 16.0D);
-        int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + 2.0D) / 16.0D);
+        int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - World.MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + World.MAX_ENTITY_RADIUS) / 16.0D);
         i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
         j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -951,6 +995,31 @@
 
     public void func_186030_a(IChunkProvider p_186030_1_, IChunkGenerator p_186030_2_)
     {
+        Server server = field_76637_e.getServer();
+        if (server != null) {
+            /*
+             * If it's a new world, the first few chunks are generated inside
+             * the World constructor. We can't reliably alter that, so we have
+             * no way of creating a CraftWorld/CraftServer at that point.
+             */
+            server.getPluginManager().callEvent(new org.bukkit.event.world.ChunkLoadEvent(bukkitChunk, false));
+        }
+
+        // Update neighbor counts
+        for (int x = -2; x < 3; x++) {
+            for (int z = -2; z < 3; z++) {
+                if (x == 0 && z == 0) {
+                    continue;
+                }
+
+                net.minecraft.world.chunk.Chunk neighbor = func_177412_p().getChunkIfLoaded(field_76635_g + x, field_76647_h + z);
+                if (neighbor != null) {
+                    neighbor.setNeighborLoaded(-x, -z);
+                    setNeighborLoaded(x, z);
+                }
+            }
+        }
+        // CraftBukkit end
         Chunk chunk = p_186030_1_.func_186026_b(this.field_76635_g, this.field_76647_h - 1);
         Chunk chunk1 = p_186030_1_.func_186026_b(this.field_76635_g + 1, this.field_76647_h);
         Chunk chunk2 = p_186030_1_.func_186026_b(this.field_76635_g, this.field_76647_h + 1);
@@ -984,6 +1053,8 @@
 
     protected void func_186034_a(IChunkGenerator p_186034_1_)
     {
+        if (populating && net.minecraftforge.common.ForgeModContainer.logCascadingWorldGeneration) logCascadingWorldGeneration();
+        populating = true;
         if (this.func_177419_t())
         {
             if (p_186034_1_.func_185933_a(this, this.field_76635_g, this.field_76647_h))
@@ -995,8 +1066,11 @@
         {
             this.func_150809_p();
             p_186034_1_.func_185931_b(this.field_76635_g, this.field_76647_h);
+            net.minecraftforge.fml.common.registry.GameRegistry.generateWorld(this.field_76635_g, this.field_76647_h, this.field_76637_e, p_186034_1_, this.field_76637_e.func_72863_F());
+            this.field_76637_e.getServer().getPluginManager().callEvent(new org.bukkit.event.world.ChunkPopulateEvent(bukkitChunk)); //MCPC Revive
             this.func_76630_e();
         }
+        populating = false;
     }
 
     public BlockPos func_177440_h(BlockPos p_177440_1_)
@@ -1051,7 +1125,7 @@
         {
             BlockPos blockpos = (BlockPos)this.field_177447_w.poll();
 
-            if (this.func_177424_a(blockpos, Chunk.EnumCreateEntityType.CHECK) == null && this.func_177435_g(blockpos).func_177230_c().func_149716_u())
+            if (this.func_177424_a(blockpos, Chunk.EnumCreateEntityType.CHECK) == null && this.func_177435_g(blockpos).func_177230_c().hasTileEntity(this.func_177435_g(blockpos)))
             {
                 TileEntity tileentity = this.func_177422_i(blockpos);
                 this.field_76637_e.func_175690_a(blockpos, tileentity);
@@ -1115,6 +1189,13 @@
     @SideOnly(Side.CLIENT)
     public void func_186033_a(PacketBuffer p_186033_1_, int p_186033_2_, boolean p_186033_3_)
     {
+        for(TileEntity tileEntity : field_150816_i.values())
+        {
+            tileEntity.func_145836_u();
+            tileEntity.func_145832_p();
+            tileEntity.func_145838_q();
+        }
+
         boolean flag = this.field_76637_e.field_73011_w.func_191066_m();
 
         for (int i = 0; i < this.field_76652_q.length; ++i)
@@ -1163,10 +1244,16 @@
         this.field_76646_k = true;
         this.func_76590_a();
 
+        List<TileEntity> invalidList = new java.util.ArrayList<TileEntity>();
+
         for (TileEntity tileentity : this.field_150816_i.values())
         {
+            if (tileentity.shouldRefresh(this.field_76637_e, tileentity.func_174877_v(), tileentity.func_145838_q().func_176203_a(tileentity.func_145832_p()), func_177435_g(tileentity.func_174877_v())))
+                invalidList.add(tileentity);
             tileentity.func_145836_u();
         }
+
+        for (TileEntity te : invalidList) te.func_145843_s();
     }
 
     public Biome func_177411_a(BlockPos p_177411_1_, BiomeProvider p_177411_2_)
@@ -1231,13 +1318,13 @@
                     BlockPos blockpos1 = blockpos.func_177982_a(k, (j << 4) + i1, l);
                     boolean flag = i1 == 0 || i1 == 15 || k == 0 || k == 15 || l == 0 || l == 15;
 
-                    if (this.field_76652_q[j] == field_186036_a && flag || this.field_76652_q[j] != field_186036_a && this.field_76652_q[j].func_177485_a(k, i1, l).func_185904_a() == Material.field_151579_a)
+                    if (this.field_76652_q[j] == field_186036_a && flag || this.field_76652_q[j] != field_186036_a && this.field_76652_q[j].func_177485_a(k, i1, l).func_177230_c().isAir(this.field_76652_q[j].func_177485_a(k, i1, l), this.field_76637_e, blockpos1))
                     {
                         for (EnumFacing enumfacing : EnumFacing.values())
                         {
                             BlockPos blockpos2 = blockpos1.func_177972_a(enumfacing);
 
-                            if (this.field_76637_e.func_180495_p(blockpos2).func_185906_d() > 0)
+                            if (this.field_76637_e.func_180495_p(blockpos2).getLightValue(this.field_76637_e, blockpos2) > 0)
                             {
                                 this.field_76637_e.func_175664_x(blockpos2);
                             }
@@ -1368,7 +1455,7 @@
         {
             blockpos$mutableblockpos.func_181079_c(blockpos$mutableblockpos.func_177958_n(), l, blockpos$mutableblockpos.func_177952_p());
 
-            if (this.func_177435_g(blockpos$mutableblockpos).func_185906_d() > 0)
+            if (this.func_177435_g(blockpos$mutableblockpos).getLightValue(this.field_76637_e, blockpos$mutableblockpos) > 0)
             {
                 this.field_76637_e.func_175664_x(blockpos$mutableblockpos);
             }
@@ -1476,4 +1563,34 @@
         QUEUED,
         CHECK;
     }
+
+    /* ======================================== FORGE START =====================================*/
+    /**
+     * Removes the tile entity at the specified position, only if it's
+     * marked as invalid.
+     */
+    public void removeInvalidTileEntity(BlockPos pos)
+    {
+        if (field_76636_d)
+        {
+            TileEntity entity = (TileEntity)field_150816_i.get(pos);
+            if (entity != null && entity.func_145837_r())
+            {
+                field_150816_i.remove(pos);
+            }
+        }
+    }
+
+    private static boolean populating = false; // keep track of cascading chunk generation during chunk population
+
+    private void logCascadingWorldGeneration()
+    {
+        net.minecraftforge.fml.common.ModContainer activeModContainer = net.minecraftforge.fml.common.Loader.instance().activeModContainer();
+        String format = "{} loaded a new chunk ({}, {}  Dimension: {}) during chunk population, causing cascading worldgen lag. Please report this to the mod's issue tracker. This log can be disabled in the Forge config.";
+
+        if (activeModContainer == null) // vanilla minecraft has problems too (MC-114332), log it at a quieter level.
+            net.minecraftforge.fml.common.FMLLog.log.debug(format, "Minecraft", this.field_76635_g, this.field_76647_h, this.field_76637_e.field_73011_w.getDimension());
+        else
+            net.minecraftforge.fml.common.FMLLog.log.warn(format, activeModContainer.getName(), this.field_76635_g, this.field_76647_h, this.field_76637_e.field_73011_w.getDimension());
+    }
 }
