--- ../src-base/minecraft/net/minecraft/world/chunk/Chunk.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/Chunk.java
@@ -39,64 +39,101 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Server;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 
 public class Chunk
 {
-    private static final Logger field_150817_t = LogManager.getLogger();
-    public static final ExtendedBlockStorage field_186036_a = null;
-    private final ExtendedBlockStorage[] field_76652_q;
-    private final byte[] field_76651_r;
-    private final int[] field_76638_b;
-    private final boolean[] field_76639_c;
-    private boolean field_76636_d;
-    public final World field_76637_e;
-    public final int[] field_76634_f;
-    public final int field_76635_g;
-    public final int field_76647_h;
-    private boolean field_76650_s;
-    public final Map<BlockPos, TileEntity> field_150816_i;
-    public final ClassInheritanceMultiMap<Entity>[] field_76645_j;
-    private boolean field_76646_k;
-    private boolean field_150814_l;
-    private boolean field_150815_m;
-    private boolean field_76643_l;
-    private boolean field_76644_m;
-    private long field_76641_n;
-    private int field_82912_p;
-    private long field_111204_q;
-    private int field_76649_t;
-    private final ConcurrentLinkedQueue<BlockPos> field_177447_w;
-    public boolean field_189550_d;
+    private static final Logger LOGGER = LogManager.getLogger();
+    public static final ExtendedBlockStorage NULL_BLOCK_STORAGE = null;
+    private final ExtendedBlockStorage[] storageArrays;
+    private final byte[] blockBiomeArray;
+    private final int[] precipitationHeightMap;
+    private final boolean[] updateSkylightColumns;
+    private boolean isChunkLoaded;
+    public final World world;
+    public final int[] heightMap;
+    public final int xPosition;
+    public final int zPosition;
+    private boolean isGapLightingUpdated;
+    public final Map<BlockPos, TileEntity> chunkTileEntityMap;
+    public final ClassInheritanceMultiMap<Entity>[] entityLists;
+    private boolean isTerrainPopulated;
+    private boolean isLightPopulated;
+    private boolean chunkTicked;
+    private boolean isModified;
+    private boolean hasEntities;
+    private long lastSaveTime;
+    private int heightMapMinimum;
+    private long inhabitedTime;
+    private int queuedLightChecks;
+    private final ConcurrentLinkedQueue<BlockPos> tileEntityPosQueue;
+    public boolean unloaded;
+    // CraftBukkit start - Neighbor loaded cache for chunk lighting and entity ticking
+    private int neighbors = 0x1 << 12;
+    public long chunkKey;
 
-    public Chunk(World p_i1995_1_, int p_i1995_2_, int p_i1995_3_)
+    public boolean areNeighborsLoaded(final int radius) {
+        switch (radius) {
+            case 2:
+                return this.neighbors == Integer.MAX_VALUE >> 6;
+            case 1:
+                final int mask =
+                        //       x        z   offset          x        z   offset          x         z   offset
+                        (0x1 << (1 * 5 +  1 + 12)) | (0x1 << (0 * 5 +  1 + 12)) | (0x1 << (-1 * 5 +  1 + 12)) |
+                                (0x1 << (1 * 5 +  0 + 12)) | (0x1 << (0 * 5 +  0 + 12)) | (0x1 << (-1 * 5 +  0 + 12)) |
+                                (0x1 << (1 * 5 + -1 + 12)) | (0x1 << (0 * 5 + -1 + 12)) | (0x1 << (-1 * 5 + -1 + 12));
+                return (this.neighbors & mask) == mask;
+            default:
+                throw new UnsupportedOperationException(String.valueOf(radius));
+        }
+    }
+
+    public void setNeighborLoaded(final int x, final int z) {
+        this.neighbors |= 0x1 << (x * 5 + 12 + z);
+    }
+
+    public void setNeighborUnloaded(final int x, final int z) {
+        this.neighbors &= ~(0x1 << (x * 5 + 12 + z));
+    }
+    // CraftBukkit end
+
+    public Chunk(World worldIn, int x, int z)
     {
-        this.field_76652_q = new ExtendedBlockStorage[16];
-        this.field_76651_r = new byte[256];
-        this.field_76638_b = new int[256];
-        this.field_76639_c = new boolean[256];
-        this.field_150816_i = Maps.<BlockPos, TileEntity>newHashMap();
-        this.field_76649_t = 4096;
-        this.field_177447_w = Queues.<BlockPos>newConcurrentLinkedQueue();
-        this.field_76645_j = (ClassInheritanceMultiMap[])(new ClassInheritanceMultiMap[16]);
-        this.field_76637_e = p_i1995_1_;
-        this.field_76635_g = p_i1995_2_;
-        this.field_76647_h = p_i1995_3_;
-        this.field_76634_f = new int[256];
+        this.storageArrays = new ExtendedBlockStorage[16];
+        this.blockBiomeArray = new byte[256];
+        this.precipitationHeightMap = new int[256];
+        this.updateSkylightColumns = new boolean[256];
+        this.chunkTileEntityMap = Maps.<BlockPos, TileEntity>newHashMap();
+        this.queuedLightChecks = 4096;
+        this.tileEntityPosQueue = Queues.<BlockPos>newConcurrentLinkedQueue();
+        this.entityLists = (ClassInheritanceMultiMap[])(new ClassInheritanceMultiMap[16]);
+        this.world = worldIn;
+        this.xPosition = x;
+        this.zPosition = z;
+        this.heightMap = new int[256];
 
-        for (int i = 0; i < this.field_76645_j.length; ++i)
+        for (int i = 0; i < this.entityLists.length; ++i)
         {
-            this.field_76645_j[i] = new ClassInheritanceMultiMap(Entity.class);
+            this.entityLists[i] = new ClassInheritanceMultiMap(Entity.class);
         }
 
-        Arrays.fill((int[])this.field_76638_b, (int) - 999);
-        Arrays.fill(this.field_76651_r, (byte) - 1);
+        Arrays.fill((int[])this.precipitationHeightMap, (int) - 999);
+        Arrays.fill(this.blockBiomeArray, (byte) - 1);
+        // CraftBukkit start
+        this.bukkitChunk = new org.bukkit.craftbukkit.CraftChunk(this);
+        this.chunkKey = ChunkPos.asLong(this.xPosition, this.zPosition);
     }
 
-    public Chunk(World p_i45645_1_, ChunkPrimer p_i45645_2_, int p_i45645_3_, int p_i45645_4_)
+    public org.bukkit.Chunk bukkitChunk;
+    public boolean mustSave;
+    // CraftBukkit end
+
+    public Chunk(World worldIn, ChunkPrimer primer, int x, int z)
     {
-        this(p_i45645_1_, p_i45645_3_, p_i45645_4_);
+        this(worldIn, x, z);
         int i = 256;
-        boolean flag = p_i45645_1_.field_73011_w.func_191066_m();
+        boolean flag = worldIn.provider.hasSkyLight();
 
         for (int j = 0; j < 16; ++j)
         {
@@ -104,87 +141,87 @@
             {
                 for (int l = 0; l < 256; ++l)
                 {
-                    IBlockState iblockstate = p_i45645_2_.func_177856_a(j, l, k);
+                    IBlockState iblockstate = primer.getBlockState(j, l, k);
 
-                    if (iblockstate.func_185904_a() != Material.field_151579_a)
+                    if (iblockstate.getMaterial() != Material.AIR)
                     {
                         int i1 = l >> 4;
 
-                        if (this.field_76652_q[i1] == field_186036_a)
+                        if (this.storageArrays[i1] == NULL_BLOCK_STORAGE)
                         {
-                            this.field_76652_q[i1] = new ExtendedBlockStorage(i1 << 4, flag);
+                            this.storageArrays[i1] = new ExtendedBlockStorage(i1 << 4, flag);
                         }
 
-                        this.field_76652_q[i1].func_177484_a(j, l & 15, k, iblockstate);
+                        this.storageArrays[i1].set(j, l & 15, k, iblockstate);
                     }
                 }
             }
         }
     }
 
-    public boolean func_76600_a(int p_76600_1_, int p_76600_2_)
+    public boolean isAtLocation(int x, int z)
     {
-        return p_76600_1_ == this.field_76635_g && p_76600_2_ == this.field_76647_h;
+        return x == this.xPosition && z == this.zPosition;
     }
 
-    public int func_177433_f(BlockPos p_177433_1_)
+    public int getHeight(BlockPos pos)
     {
-        return this.func_76611_b(p_177433_1_.func_177958_n() & 15, p_177433_1_.func_177952_p() & 15);
+        return this.getHeightValue(pos.getX() & 15, pos.getZ() & 15);
     }
 
-    public int func_76611_b(int p_76611_1_, int p_76611_2_)
+    public int getHeightValue(int x, int z)
     {
-        return this.field_76634_f[p_76611_2_ << 4 | p_76611_1_];
+        return this.heightMap[z << 4 | x];
     }
 
     @Nullable
-    private ExtendedBlockStorage func_186031_y()
+    private ExtendedBlockStorage getLastExtendedBlockStorage()
     {
-        for (int i = this.field_76652_q.length - 1; i >= 0; --i)
+        for (int i = this.storageArrays.length - 1; i >= 0; --i)
         {
-            if (this.field_76652_q[i] != field_186036_a)
+            if (this.storageArrays[i] != NULL_BLOCK_STORAGE)
             {
-                return this.field_76652_q[i];
+                return this.storageArrays[i];
             }
         }
 
         return null;
     }
 
-    public int func_76625_h()
+    public int getTopFilledSegment()
     {
-        ExtendedBlockStorage extendedblockstorage = this.func_186031_y();
-        return extendedblockstorage == null ? 0 : extendedblockstorage.func_76662_d();
+        ExtendedBlockStorage extendedblockstorage = this.getLastExtendedBlockStorage();
+        return extendedblockstorage == null ? 0 : extendedblockstorage.getYLocation();
     }
 
-    public ExtendedBlockStorage[] func_76587_i()
+    public ExtendedBlockStorage[] getBlockStorageArray()
     {
-        return this.field_76652_q;
+        return this.storageArrays;
     }
 
     @SideOnly(Side.CLIENT)
-    protected void func_76590_a()
+    protected void generateHeightMap()
     {
-        int i = this.func_76625_h();
-        this.field_82912_p = Integer.MAX_VALUE;
+        int i = this.getTopFilledSegment();
+        this.heightMapMinimum = Integer.MAX_VALUE;
 
         for (int j = 0; j < 16; ++j)
         {
             for (int k = 0; k < 16; ++k)
             {
-                this.field_76638_b[j + (k << 4)] = -999;
+                this.precipitationHeightMap[j + (k << 4)] = -999;
 
                 for (int l = i + 16; l > 0; --l)
                 {
-                    IBlockState iblockstate = this.func_186032_a(j, l - 1, k);
+                    IBlockState iblockstate = this.getBlockState(j, l - 1, k);
 
-                    if (iblockstate.func_185891_c() != 0)
+                    if (this.getBlockLightOpacity(j, l - 1, k) != 0)
                     {
-                        this.field_76634_f[k << 4 | j] = l;
+                        this.heightMap[k << 4 | j] = l;
 
-                        if (l < this.field_82912_p)
+                        if (l < this.heightMapMinimum)
                         {
-                            this.field_82912_p = l;
+                            this.heightMapMinimum = l;
                         }
 
                         break;
@@ -193,43 +230,43 @@
             }
         }
 
-        this.field_76643_l = true;
+        this.isModified = true;
     }
 
-    public void func_76603_b()
+    public void generateSkylightMap()
     {
-        int i = this.func_76625_h();
-        this.field_82912_p = Integer.MAX_VALUE;
+        int i = this.getTopFilledSegment();
+        this.heightMapMinimum = Integer.MAX_VALUE;
 
         for (int j = 0; j < 16; ++j)
         {
             for (int k = 0; k < 16; ++k)
             {
-                this.field_76638_b[j + (k << 4)] = -999;
+                this.precipitationHeightMap[j + (k << 4)] = -999;
 
                 for (int l = i + 16; l > 0; --l)
                 {
-                    if (this.func_150808_b(j, l - 1, k) != 0)
+                    if (this.getBlockLightOpacity(j, l - 1, k) != 0)
                     {
-                        this.field_76634_f[k << 4 | j] = l;
+                        this.heightMap[k << 4 | j] = l;
 
-                        if (l < this.field_82912_p)
+                        if (l < this.heightMapMinimum)
                         {
-                            this.field_82912_p = l;
+                            this.heightMapMinimum = l;
                         }
 
                         break;
                     }
                 }
 
-                if (this.field_76637_e.field_73011_w.func_191066_m())
+                if (this.world.provider.hasSkyLight())
                 {
                     int k1 = 15;
                     int i1 = i + 16 - 1;
 
                     while (true)
                     {
-                        int j1 = this.func_150808_b(j, i1, k);
+                        int j1 = this.getBlockLightOpacity(j, i1, k);
 
                         if (j1 == 0 && k1 != 15)
                         {
@@ -240,12 +277,12 @@
 
                         if (k1 > 0)
                         {
-                            ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i1 >> 4];
+                            ExtendedBlockStorage extendedblockstorage = this.storageArrays[i1 >> 4];
 
-                            if (extendedblockstorage != field_186036_a)
+                            if (extendedblockstorage != NULL_BLOCK_STORAGE)
                             {
-                                extendedblockstorage.func_76657_c(j, i1 & 15, k, k1);
-                                this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + j, i1, (this.field_76647_h << 4) + k));
+                                extendedblockstorage.setExtSkylightValue(j, i1 & 15, k, k1);
+                                this.world.notifyLightSet(new BlockPos((this.xPosition << 4) + j, i1, (this.zPosition << 4) + k));
                             }
                         }
 
@@ -260,121 +297,121 @@
             }
         }
 
-        this.field_76643_l = true;
+        this.isModified = true;
     }
 
-    private void func_76595_e(int p_76595_1_, int p_76595_2_)
+    private void propagateSkylightOcclusion(int x, int z)
     {
-        this.field_76639_c[p_76595_1_ + p_76595_2_ * 16] = true;
-        this.field_76650_s = true;
+        this.updateSkylightColumns[x + z * 16] = true;
+        this.isGapLightingUpdated = true;
     }
 
-    private void func_150803_c(boolean p_150803_1_)
+    private void recheckGaps(boolean p_150803_1_)
     {
-        this.field_76637_e.field_72984_F.func_76320_a("recheckGaps");
+        this.world.theProfiler.startSection("recheckGaps");
 
-        if (this.field_76637_e.func_175697_a(new BlockPos(this.field_76635_g * 16 + 8, 0, this.field_76647_h * 16 + 8), 16))
+        if (this.world.isAreaLoaded(new BlockPos(this.xPosition * 16 + 8, 0, this.zPosition * 16 + 8), 16))
         {
             for (int i = 0; i < 16; ++i)
             {
                 for (int j = 0; j < 16; ++j)
                 {
-                    if (this.field_76639_c[i + j * 16])
+                    if (this.updateSkylightColumns[i + j * 16])
                     {
-                        this.field_76639_c[i + j * 16] = false;
-                        int k = this.func_76611_b(i, j);
-                        int l = this.field_76635_g * 16 + i;
-                        int i1 = this.field_76647_h * 16 + j;
+                        this.updateSkylightColumns[i + j * 16] = false;
+                        int k = this.getHeightValue(i, j);
+                        int l = this.xPosition * 16 + i;
+                        int i1 = this.zPosition * 16 + j;
                         int j1 = Integer.MAX_VALUE;
 
                         for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
                         {
-                            j1 = Math.min(j1, this.field_76637_e.func_82734_g(l + enumfacing.func_82601_c(), i1 + enumfacing.func_82599_e()));
+                            j1 = Math.min(j1, this.world.getChunksLowestHorizon(l + enumfacing.getFrontOffsetX(), i1 + enumfacing.getFrontOffsetZ()));
                         }
 
-                        this.func_76599_g(l, i1, j1);
+                        this.checkSkylightNeighborHeight(l, i1, j1);
 
                         for (EnumFacing enumfacing1 : EnumFacing.Plane.HORIZONTAL)
                         {
-                            this.func_76599_g(l + enumfacing1.func_82601_c(), i1 + enumfacing1.func_82599_e(), k);
+                            this.checkSkylightNeighborHeight(l + enumfacing1.getFrontOffsetX(), i1 + enumfacing1.getFrontOffsetZ(), k);
                         }
 
                         if (p_150803_1_)
                         {
-                            this.field_76637_e.field_72984_F.func_76319_b();
+                            this.world.theProfiler.endSection();
                             return;
                         }
                     }
                 }
             }
 
-            this.field_76650_s = false;
+            this.isGapLightingUpdated = false;
         }
 
-        this.field_76637_e.field_72984_F.func_76319_b();
+        this.world.theProfiler.endSection();
     }
 
-    private void func_76599_g(int p_76599_1_, int p_76599_2_, int p_76599_3_)
+    private void checkSkylightNeighborHeight(int x, int z, int maxValue)
     {
-        int i = this.field_76637_e.func_175645_m(new BlockPos(p_76599_1_, 0, p_76599_2_)).func_177956_o();
+        int i = this.world.getHeight(new BlockPos(x, 0, z)).getY();
 
-        if (i > p_76599_3_)
+        if (i > maxValue)
         {
-            this.func_76609_d(p_76599_1_, p_76599_2_, p_76599_3_, i + 1);
+            this.updateSkylightNeighborHeight(x, z, maxValue, i + 1);
         }
-        else if (i < p_76599_3_)
+        else if (i < maxValue)
         {
-            this.func_76609_d(p_76599_1_, p_76599_2_, i, p_76599_3_ + 1);
+            this.updateSkylightNeighborHeight(x, z, i, maxValue + 1);
         }
     }
 
-    private void func_76609_d(int p_76609_1_, int p_76609_2_, int p_76609_3_, int p_76609_4_)
+    private void updateSkylightNeighborHeight(int x, int z, int startY, int endY)
     {
-        if (p_76609_4_ > p_76609_3_ && this.field_76637_e.func_175697_a(new BlockPos(p_76609_1_, 0, p_76609_2_), 16))
+        if (endY > startY && this.world.isAreaLoaded(new BlockPos(x, 0, z), 16))
         {
-            for (int i = p_76609_3_; i < p_76609_4_; ++i)
+            for (int i = startY; i < endY; ++i)
             {
-                this.field_76637_e.func_180500_c(EnumSkyBlock.SKY, new BlockPos(p_76609_1_, i, p_76609_2_));
+                this.world.checkLightFor(EnumSkyBlock.SKY, new BlockPos(x, i, z));
             }
 
-            this.field_76643_l = true;
+            this.isModified = true;
         }
     }
 
-    private void func_76615_h(int p_76615_1_, int p_76615_2_, int p_76615_3_)
+    private void relightBlock(int x, int y, int z)
     {
-        int i = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] & 255;
+        int i = this.heightMap[z << 4 | x] & 255;
         int j = i;
 
-        if (p_76615_2_ > i)
+        if (y > i)
         {
-            j = p_76615_2_;
+            j = y;
         }
 
-        while (j > 0 && this.func_150808_b(p_76615_1_, j - 1, p_76615_3_) == 0)
+        while (j > 0 && this.getBlockLightOpacity(x, j - 1, z) == 0)
         {
             --j;
         }
 
         if (j != i)
         {
-            this.field_76637_e.func_72975_g(p_76615_1_ + this.field_76635_g * 16, p_76615_3_ + this.field_76647_h * 16, j, i);
-            this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] = j;
-            int k = this.field_76635_g * 16 + p_76615_1_;
-            int l = this.field_76647_h * 16 + p_76615_3_;
+            this.world.markBlocksDirtyVertical(x + this.xPosition * 16, z + this.zPosition * 16, j, i);
+            this.heightMap[z << 4 | x] = j;
+            int k = this.xPosition * 16 + x;
+            int l = this.zPosition * 16 + z;
 
-            if (this.field_76637_e.field_73011_w.func_191066_m())
+            if (this.world.provider.hasSkyLight())
             {
                 if (j < i)
                 {
                     for (int j1 = j; j1 < i; ++j1)
                     {
-                        ExtendedBlockStorage extendedblockstorage2 = this.field_76652_q[j1 >> 4];
+                        ExtendedBlockStorage extendedblockstorage2 = this.storageArrays[j1 >> 4];
 
-                        if (extendedblockstorage2 != field_186036_a)
+                        if (extendedblockstorage2 != NULL_BLOCK_STORAGE)
                         {
-                            extendedblockstorage2.func_76657_c(p_76615_1_, j1 & 15, p_76615_3_, 15);
-                            this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + p_76615_1_, j1, (this.field_76647_h << 4) + p_76615_3_));
+                            extendedblockstorage2.setExtSkylightValue(x, j1 & 15, z, 15);
+                            this.world.notifyLightSet(new BlockPos((this.xPosition << 4) + x, j1, (this.zPosition << 4) + z));
                         }
                     }
                 }
@@ -382,12 +419,12 @@
                 {
                     for (int i1 = i; i1 < j; ++i1)
                     {
-                        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i1 >> 4];
+                        ExtendedBlockStorage extendedblockstorage = this.storageArrays[i1 >> 4];
 
-                        if (extendedblockstorage != field_186036_a)
+                        if (extendedblockstorage != NULL_BLOCK_STORAGE)
                         {
-                            extendedblockstorage.func_76657_c(p_76615_1_, i1 & 15, p_76615_3_, 0);
-                            this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + p_76615_1_, i1, (this.field_76647_h << 4) + p_76615_3_));
+                            extendedblockstorage.setExtSkylightValue(x, i1 & 15, z, 0);
+                            this.world.notifyLightSet(new BlockPos((this.xPosition << 4) + x, i1, (this.zPosition << 4) + z));
                         }
                     }
                 }
@@ -397,7 +434,7 @@
                 while (j > 0 && k1 > 0)
                 {
                     --j;
-                    int i2 = this.func_150808_b(p_76615_1_, j, p_76615_3_);
+                    int i2 = this.getBlockLightOpacity(x, j, z);
 
                     if (i2 == 0)
                     {
@@ -411,16 +448,16 @@
                         k1 = 0;
                     }
 
-                    ExtendedBlockStorage extendedblockstorage1 = this.field_76652_q[j >> 4];
+                    ExtendedBlockStorage extendedblockstorage1 = this.storageArrays[j >> 4];
 
-                    if (extendedblockstorage1 != field_186036_a)
+                    if (extendedblockstorage1 != NULL_BLOCK_STORAGE)
                     {
-                        extendedblockstorage1.func_76657_c(p_76615_1_, j & 15, p_76615_3_, k1);
+                        extendedblockstorage1.setExtSkylightValue(x, j & 15, z, k1);
                     }
                 }
             }
 
-            int l1 = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_];
+            int l1 = this.heightMap[z << 4 | x];
             int j2 = i;
             int k2 = l1;
 
@@ -430,83 +467,84 @@
                 k2 = i;
             }
 
-            if (l1 < this.field_82912_p)
+            if (l1 < this.heightMapMinimum)
             {
-                this.field_82912_p = l1;
+                this.heightMapMinimum = l1;
             }
 
-            if (this.field_76637_e.field_73011_w.func_191066_m())
+            if (this.world.provider.hasSkyLight())
             {
                 for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
                 {
-                    this.func_76609_d(k + enumfacing.func_82601_c(), l + enumfacing.func_82599_e(), j2, k2);
+                    this.updateSkylightNeighborHeight(k + enumfacing.getFrontOffsetX(), l + enumfacing.getFrontOffsetZ(), j2, k2);
                 }
 
-                this.func_76609_d(k, l, j2, k2);
+                this.updateSkylightNeighborHeight(k, l, j2, k2);
             }
 
-            this.field_76643_l = true;
+            this.isModified = true;
         }
     }
 
-    public int func_177437_b(BlockPos p_177437_1_)
+    public int getBlockLightOpacity(BlockPos pos)
     {
-        return this.func_177435_g(p_177437_1_).func_185891_c();
+        return this.getBlockState(pos).getLightOpacity(this.world, pos);
     }
 
-    private int func_150808_b(int p_150808_1_, int p_150808_2_, int p_150808_3_)
+    private int getBlockLightOpacity(int x, int y, int z)
     {
-        return this.func_186032_a(p_150808_1_, p_150808_2_, p_150808_3_).func_185891_c();
+        IBlockState state = this.getBlockState(x, y, z); //Forge: Can sometimes be called before we are added to the global world list. So use the less accurate one during that. It'll be recalculated later
+        return !isChunkLoaded ? state.getLightOpacity() : state.getLightOpacity(world, new BlockPos(xPosition << 4 | x & 15, y, zPosition << 4 | z & 15));
     }
 
-    public IBlockState func_177435_g(BlockPos p_177435_1_)
+    public IBlockState getBlockState(BlockPos pos)
     {
-        return this.func_186032_a(p_177435_1_.func_177958_n(), p_177435_1_.func_177956_o(), p_177435_1_.func_177952_p());
+        return this.getBlockState(pos.getX(), pos.getY(), pos.getZ());
     }
 
-    public IBlockState func_186032_a(final int p_186032_1_, final int p_186032_2_, final int p_186032_3_)
+    public IBlockState getBlockState(final int x, final int y, final int z)
     {
-        if (this.field_76637_e.func_175624_G() == WorldType.field_180272_g)
+        if (this.world.getWorldType() == WorldType.DEBUG_WORLD)
         {
             IBlockState iblockstate = null;
 
-            if (p_186032_2_ == 60)
+            if (y == 60)
             {
-                iblockstate = Blocks.field_180401_cv.func_176223_P();
+                iblockstate = Blocks.BARRIER.getDefaultState();
             }
 
-            if (p_186032_2_ == 70)
+            if (y == 70)
             {
-                iblockstate = ChunkProviderDebug.func_177461_b(p_186032_1_, p_186032_3_);
+                iblockstate = ChunkProviderDebug.getBlockStateFor(x, z);
             }
 
-            return iblockstate == null ? Blocks.field_150350_a.func_176223_P() : iblockstate;
+            return iblockstate == null ? Blocks.AIR.getDefaultState() : iblockstate;
         }
         else
         {
             try
             {
-                if (p_186032_2_ >= 0 && p_186032_2_ >> 4 < this.field_76652_q.length)
+                if (y >= 0 && y >> 4 < this.storageArrays.length)
                 {
-                    ExtendedBlockStorage extendedblockstorage = this.field_76652_q[p_186032_2_ >> 4];
+                    ExtendedBlockStorage extendedblockstorage = this.storageArrays[y >> 4];
 
-                    if (extendedblockstorage != field_186036_a)
+                    if (extendedblockstorage != NULL_BLOCK_STORAGE)
                     {
-                        return extendedblockstorage.func_177485_a(p_186032_1_ & 15, p_186032_2_ & 15, p_186032_3_ & 15);
+                        return extendedblockstorage.get(x & 15, y & 15, z & 15);
                     }
                 }
 
-                return Blocks.field_150350_a.func_176223_P();
+                return Blocks.AIR.getDefaultState();
             }
             catch (Throwable throwable)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Getting block state");
-                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being got");
-                crashreportcategory.func_189529_a("Location", new ICrashReportDetail<String>()
+                CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Getting block state");
+                CrashReportCategory crashreportcategory = crashreport.makeCategory("Block being got");
+                crashreportcategory.setDetail("Location", new ICrashReportDetail<String>()
                 {
                     public String call() throws Exception
                     {
-                        return CrashReportCategory.func_184876_a(p_186032_1_, p_186032_2_, p_186032_3_);
+                        return CrashReportCategory.getCoordinateInfo(x, y, z);
                     }
                 });
                 throw new ReportedException(crashreport);
@@ -515,59 +553,65 @@
     }
 
     @Nullable
-    public IBlockState func_177436_a(BlockPos p_177436_1_, IBlockState p_177436_2_)
+    public IBlockState setBlockState(BlockPos pos, IBlockState state)
     {
-        int i = p_177436_1_.func_177958_n() & 15;
-        int j = p_177436_1_.func_177956_o();
-        int k = p_177436_1_.func_177952_p() & 15;
+        int i = pos.getX() & 15;
+        int j = pos.getY();
+        int k = pos.getZ() & 15;
         int l = k << 4 | i;
 
-        if (j >= this.field_76638_b[l] - 1)
+        if (j >= this.precipitationHeightMap[l] - 1)
         {
-            this.field_76638_b[l] = -999;
+            this.precipitationHeightMap[l] = -999;
         }
 
-        int i1 = this.field_76634_f[l];
-        IBlockState iblockstate = this.func_177435_g(p_177436_1_);
+        int i1 = this.heightMap[l];
+        IBlockState iblockstate = this.getBlockState(pos);
 
-        if (iblockstate == p_177436_2_)
+        if (iblockstate == state)
         {
             return null;
         }
         else
         {
-            Block block = p_177436_2_.func_177230_c();
-            Block block1 = iblockstate.func_177230_c();
-            ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
+            Block block = state.getBlock();
+            Block block1 = iblockstate.getBlock();
+            int k1 = iblockstate.getLightOpacity(this.world, pos); // Relocate old light value lookup here, so that it is called before TE is removed.
+            ExtendedBlockStorage extendedblockstorage = this.storageArrays[j >> 4];
             boolean flag = false;
 
-            if (extendedblockstorage == field_186036_a)
+            if (extendedblockstorage == NULL_BLOCK_STORAGE)
             {
-                if (block == Blocks.field_150350_a)
+                if (block == Blocks.AIR)
                 {
                     return null;
                 }
 
-                extendedblockstorage = new ExtendedBlockStorage(j >> 4 << 4, this.field_76637_e.field_73011_w.func_191066_m());
-                this.field_76652_q[j >> 4] = extendedblockstorage;
+                extendedblockstorage = new ExtendedBlockStorage(j >> 4 << 4, this.world.provider.hasSkyLight());
+                this.storageArrays[j >> 4] = extendedblockstorage;
                 flag = j >= i1;
             }
 
-            extendedblockstorage.func_177484_a(i, j & 15, k, p_177436_2_);
+            extendedblockstorage.set(i, j & 15, k, state);
 
-            if (block1 != block)
+            //if (block1 != block)
             {
-                if (!this.field_76637_e.field_72995_K)
+                if (!this.world.isRemote)
                 {
-                    block1.func_180663_b(this.field_76637_e, p_177436_1_, iblockstate);
+                    if (block1 != block) //Only fire block breaks when the block changes.
+                    block1.breakBlock(this.world, pos, iblockstate);
+                    TileEntity te = this.getTileEntity(pos, Chunk.EnumCreateEntityType.CHECK);
+                    if (te != null && te.shouldRefresh(this.world, pos, iblockstate, state)) this.world.removeTileEntity(pos);
                 }
-                else if (block1 instanceof ITileEntityProvider)
+                else if (block1.hasTileEntity(iblockstate))
                 {
-                    this.field_76637_e.func_175713_t(p_177436_1_);
+                    TileEntity te = this.getTileEntity(pos, Chunk.EnumCreateEntityType.CHECK);
+                    if (te != null && te.shouldRefresh(this.world, pos, iblockstate, state))
+                    this.world.removeTileEntity(pos);
                 }
             }
 
-            if (extendedblockstorage.func_177485_a(i, j & 15, k).func_177230_c() != block)
+            if (extendedblockstorage.get(i, j & 15, k).getBlock() != block)
             {
                 return null;
             }
@@ -575,122 +619,112 @@
             {
                 if (flag)
                 {
-                    this.func_76603_b();
+                    this.generateSkylightMap();
                 }
                 else
                 {
-                    int j1 = p_177436_2_.func_185891_c();
-                    int k1 = iblockstate.func_185891_c();
+                    int j1 = state.getLightOpacity(this.world, pos);
 
                     if (j1 > 0)
                     {
                         if (j >= i1)
                         {
-                            this.func_76615_h(i, j + 1, k);
+                            this.relightBlock(i, j + 1, k);
                         }
                     }
                     else if (j == i1 - 1)
                     {
-                        this.func_76615_h(i, j, k);
+                        this.relightBlock(i, j, k);
                     }
 
-                    if (j1 != k1 && (j1 < k1 || this.func_177413_a(EnumSkyBlock.SKY, p_177436_1_) > 0 || this.func_177413_a(EnumSkyBlock.BLOCK, p_177436_1_) > 0))
+                    if (j1 != k1 && (j1 < k1 || this.getLightFor(EnumSkyBlock.SKY, pos) > 0 || this.getLightFor(EnumSkyBlock.BLOCK, pos) > 0))
                     {
-                        this.func_76595_e(i, k);
+                        this.propagateSkylightOcclusion(i, k);
                     }
                 }
 
-                if (block1 instanceof ITileEntityProvider)
+                // If capturing blocks, only run block physics for TE's. Non-TE's are handled in ForgeHooks.onPlaceItemIntoWorld
+                if (!this.world.isRemote && block1 != block && (!this.world.captureBlockSnapshots || block.hasTileEntity(state)))
                 {
-                    TileEntity tileentity = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
-
-                    if (tileentity != null)
-                    {
-                        tileentity.func_145836_u();
-                    }
+                    block.onBlockAdded(this.world, pos, state);
                 }
 
-                if (!this.field_76637_e.field_72995_K && block1 != block)
+                if (block.hasTileEntity(state))
                 {
-                    block.func_176213_c(this.field_76637_e, p_177436_1_, p_177436_2_);
-                }
+                    TileEntity tileentity1 = this.getTileEntity(pos, Chunk.EnumCreateEntityType.CHECK);
 
-                if (block instanceof ITileEntityProvider)
-                {
-                    TileEntity tileentity1 = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
-
                     if (tileentity1 == null)
                     {
-                        tileentity1 = ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, block.func_176201_c(p_177436_2_));
-                        this.field_76637_e.func_175690_a(p_177436_1_, tileentity1);
+                        tileentity1 = block.createTileEntity(this.world, state);
+                        this.world.setTileEntity(pos, tileentity1);
                     }
 
                     if (tileentity1 != null)
                     {
-                        tileentity1.func_145836_u();
+                        tileentity1.updateContainingBlockInfo();
                     }
                 }
 
-                this.field_76643_l = true;
+                this.isModified = true;
                 return iblockstate;
             }
         }
     }
 
-    public int func_177413_a(EnumSkyBlock p_177413_1_, BlockPos p_177413_2_)
+    public int getLightFor(EnumSkyBlock p_177413_1_, BlockPos pos)
     {
-        int i = p_177413_2_.func_177958_n() & 15;
-        int j = p_177413_2_.func_177956_o();
-        int k = p_177413_2_.func_177952_p() & 15;
-        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
-        return extendedblockstorage == field_186036_a ? (this.func_177444_d(p_177413_2_) ? p_177413_1_.field_77198_c : 0) : (p_177413_1_ == EnumSkyBlock.SKY ? (!this.field_76637_e.field_73011_w.func_191066_m() ? 0 : extendedblockstorage.func_76670_c(i, j & 15, k)) : (p_177413_1_ == EnumSkyBlock.BLOCK ? extendedblockstorage.func_76674_d(i, j & 15, k) : p_177413_1_.field_77198_c));
+        int i = pos.getX() & 15;
+        int j = pos.getY();
+        int k = pos.getZ() & 15;
+        ExtendedBlockStorage extendedblockstorage = this.storageArrays[j >> 4];
+        return extendedblockstorage == NULL_BLOCK_STORAGE ? (this.canSeeSky(pos) ? p_177413_1_.defaultLightValue : 0) : (p_177413_1_ == EnumSkyBlock.SKY ? (!this.world.provider.hasSkyLight() ? 0 : extendedblockstorage.getExtSkylightValue(i, j & 15, k)) : (p_177413_1_ == EnumSkyBlock.BLOCK ? extendedblockstorage.getExtBlocklightValue(i, j & 15, k) : p_177413_1_.defaultLightValue));
     }
 
-    public void func_177431_a(EnumSkyBlock p_177431_1_, BlockPos p_177431_2_, int p_177431_3_)
+    public void setLightFor(EnumSkyBlock p_177431_1_, BlockPos pos, int value)
     {
-        int i = p_177431_2_.func_177958_n() & 15;
-        int j = p_177431_2_.func_177956_o();
-        int k = p_177431_2_.func_177952_p() & 15;
-        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
+        int i = pos.getX() & 15;
+        int j = pos.getY();
+        int k = pos.getZ() & 15;
+        ExtendedBlockStorage extendedblockstorage = this.storageArrays[j >> 4];
 
-        if (extendedblockstorage == field_186036_a)
+        if (extendedblockstorage == NULL_BLOCK_STORAGE)
         {
-            extendedblockstorage = new ExtendedBlockStorage(j >> 4 << 4, this.field_76637_e.field_73011_w.func_191066_m());
-            this.field_76652_q[j >> 4] = extendedblockstorage;
-            this.func_76603_b();
+            extendedblockstorage = new ExtendedBlockStorage(j >> 4 << 4, this.world.provider.hasSkyLight());
+            this.storageArrays[j >> 4] = extendedblockstorage;
+            this.generateSkylightMap();
         }
 
-        this.field_76643_l = true;
+        this.isModified = true;
 
         if (p_177431_1_ == EnumSkyBlock.SKY)
         {
-            if (this.field_76637_e.field_73011_w.func_191066_m())
+            if (this.world.provider.hasSkyLight())
             {
-                extendedblockstorage.func_76657_c(i, j & 15, k, p_177431_3_);
+                extendedblockstorage.setExtSkylightValue(i, j & 15, k, value);
             }
         }
         else if (p_177431_1_ == EnumSkyBlock.BLOCK)
         {
-            extendedblockstorage.func_76677_d(i, j & 15, k, p_177431_3_);
+            extendedblockstorage.setExtBlocklightValue(i, j & 15, k, value);
         }
     }
 
-    public int func_177443_a(BlockPos p_177443_1_, int p_177443_2_)
+    public int getLightSubtracted(BlockPos pos, int amount)
     {
-        int i = p_177443_1_.func_177958_n() & 15;
-        int j = p_177443_1_.func_177956_o();
-        int k = p_177443_1_.func_177952_p() & 15;
-        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
+        int i = pos.getX() & 15;
+        int j = pos.getY();
+        int k = pos.getZ() & 15;
+        ExtendedBlockStorage extendedblockstorage = this.storageArrays[j >> 4];
 
-        if (extendedblockstorage == field_186036_a)
+        if (extendedblockstorage == NULL_BLOCK_STORAGE)
         {
-            return this.field_76637_e.field_73011_w.func_191066_m() && p_177443_2_ < EnumSkyBlock.SKY.field_77198_c ? EnumSkyBlock.SKY.field_77198_c - p_177443_2_ : 0;
+            return this.world.provider.hasSkyLight() && amount < EnumSkyBlock.SKY.defaultLightValue ? EnumSkyBlock.SKY.defaultLightValue - amount : 0;
         }
         else
         {
-            int l = !this.field_76637_e.field_73011_w.func_191066_m() ? 0 : extendedblockstorage.func_76670_c(i, j & 15, k);
-            l = l - p_177443_2_;
-            int i1 = extendedblockstorage.func_76674_d(i, j & 15, k);
+            int l = !this.world.provider.hasSkyLight() ? 0 : extendedblockstorage.getExtSkylightValue(i, j & 15, k);
+            l = l - amount;
+            int i1 = extendedblockstorage.getExtBlocklightValue(i, j & 15, k);
 
             if (i1 > l)
             {
@@ -701,199 +735,208 @@
         }
     }
 
-    public void func_76612_a(Entity p_76612_1_)
+    public void addEntity(Entity entityIn)
     {
-        this.field_76644_m = true;
-        int i = MathHelper.func_76128_c(p_76612_1_.field_70165_t / 16.0D);
-        int j = MathHelper.func_76128_c(p_76612_1_.field_70161_v / 16.0D);
+        this.hasEntities = true;
+        int i = MathHelper.floor(entityIn.posX / 16.0D);
+        int j = MathHelper.floor(entityIn.posZ / 16.0D);
 
-        if (i != this.field_76635_g || j != this.field_76647_h)
+        if (i != this.xPosition || j != this.zPosition)
         {
-            field_150817_t.warn("Wrong location! ({}, {}) should be ({}, {}), {}", new Object[] {Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(this.field_76635_g), Integer.valueOf(this.field_76647_h), p_76612_1_});
-            p_76612_1_.func_70106_y();
+            LOGGER.warn("Wrong location! ({}, {}) should be ({}, {}), {}", new Object[] {Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(this.xPosition), Integer.valueOf(this.zPosition), entityIn});
+            entityIn.setDead();
         }
 
-        int k = MathHelper.func_76128_c(p_76612_1_.field_70163_u / 16.0D);
+        int k = MathHelper.floor(entityIn.posY / 16.0D);
 
         if (k < 0)
         {
             k = 0;
         }
 
-        if (k >= this.field_76645_j.length)
+        if (k >= this.entityLists.length)
         {
-            k = this.field_76645_j.length - 1;
+            k = this.entityLists.length - 1;
         }
 
-        p_76612_1_.field_70175_ag = true;
-        p_76612_1_.field_70176_ah = this.field_76635_g;
-        p_76612_1_.field_70162_ai = k;
-        p_76612_1_.field_70164_aj = this.field_76647_h;
-        this.field_76645_j[k].add(p_76612_1_);
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EnteringChunk(entityIn, this.xPosition, this.zPosition, entityIn.chunkCoordX, entityIn.chunkCoordZ));
+        entityIn.addedToChunk = true;
+        entityIn.chunkCoordX = this.xPosition;
+        entityIn.chunkCoordY = k;
+        entityIn.chunkCoordZ = this.zPosition;
+        this.entityLists[k].add(entityIn);
     }
 
-    public void func_76622_b(Entity p_76622_1_)
+    public void removeEntity(Entity entityIn)
     {
-        this.func_76608_a(p_76622_1_, p_76622_1_.field_70162_ai);
+        this.removeEntityAtIndex(entityIn, entityIn.chunkCoordY);
     }
 
-    public void func_76608_a(Entity p_76608_1_, int p_76608_2_)
+    public void removeEntityAtIndex(Entity entityIn, int index)
     {
-        if (p_76608_2_ < 0)
+        if (index < 0)
         {
-            p_76608_2_ = 0;
+            index = 0;
         }
 
-        if (p_76608_2_ >= this.field_76645_j.length)
+        if (index >= this.entityLists.length)
         {
-            p_76608_2_ = this.field_76645_j.length - 1;
+            index = this.entityLists.length - 1;
         }
 
-        this.field_76645_j[p_76608_2_].remove(p_76608_1_);
+        this.entityLists[index].remove(entityIn);
     }
 
-    public boolean func_177444_d(BlockPos p_177444_1_)
+    public boolean canSeeSky(BlockPos pos)
     {
-        int i = p_177444_1_.func_177958_n() & 15;
-        int j = p_177444_1_.func_177956_o();
-        int k = p_177444_1_.func_177952_p() & 15;
-        return j >= this.field_76634_f[k << 4 | i];
+        int i = pos.getX() & 15;
+        int j = pos.getY();
+        int k = pos.getZ() & 15;
+        return j >= this.heightMap[k << 4 | i];
     }
 
     @Nullable
-    private TileEntity func_177422_i(BlockPos p_177422_1_)
+    private TileEntity createNewTileEntity(BlockPos pos)
     {
-        IBlockState iblockstate = this.func_177435_g(p_177422_1_);
-        Block block = iblockstate.func_177230_c();
-        return !block.func_149716_u() ? null : ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, iblockstate.func_177230_c().func_176201_c(iblockstate));
+        IBlockState iblockstate = this.getBlockState(pos);
+        Block block = iblockstate.getBlock();
+        return !block.hasTileEntity(iblockstate) ? null : block.createTileEntity(this.world, iblockstate);
     }
 
     @Nullable
-    public TileEntity func_177424_a(BlockPos p_177424_1_, Chunk.EnumCreateEntityType p_177424_2_)
+    public TileEntity getTileEntity(BlockPos pos, Chunk.EnumCreateEntityType p_177424_2_)
     {
-        TileEntity tileentity = (TileEntity)this.field_150816_i.get(p_177424_1_);
+        TileEntity tileentity = (TileEntity)this.chunkTileEntityMap.get(pos);
 
+        if (tileentity != null && tileentity.isInvalid())
+        {
+            chunkTileEntityMap.remove(pos);
+            tileentity = null;
+        }
+
         if (tileentity == null)
         {
             if (p_177424_2_ == Chunk.EnumCreateEntityType.IMMEDIATE)
             {
-                tileentity = this.func_177422_i(p_177424_1_);
-                this.field_76637_e.func_175690_a(p_177424_1_, tileentity);
+                tileentity = this.createNewTileEntity(pos);
+                this.world.setTileEntity(pos, tileentity);
             }
             else if (p_177424_2_ == Chunk.EnumCreateEntityType.QUEUED)
             {
-                this.field_177447_w.add(p_177424_1_);
+                this.tileEntityPosQueue.add(pos.toImmutable());
             }
         }
-        else if (tileentity.func_145837_r())
-        {
-            this.field_150816_i.remove(p_177424_1_);
-            return null;
-        }
 
         return tileentity;
     }
 
-    public void func_150813_a(TileEntity p_150813_1_)
+    public void addTileEntity(TileEntity tileEntityIn)
     {
-        this.func_177426_a(p_150813_1_.func_174877_v(), p_150813_1_);
+        this.addTileEntity(tileEntityIn.getPos(), tileEntityIn);
 
-        if (this.field_76636_d)
+        if (this.isChunkLoaded)
         {
-            this.field_76637_e.func_175700_a(p_150813_1_);
+            this.world.addTileEntity(tileEntityIn);
         }
     }
 
-    public void func_177426_a(BlockPos p_177426_1_, TileEntity p_177426_2_)
-    {
-        p_177426_2_.func_145834_a(this.field_76637_e);
-        p_177426_2_.func_174878_a(p_177426_1_);
+    public void addTileEntity(BlockPos pos, TileEntity tileEntityIn) {
+        if (tileEntityIn.getWorld() != this.world) //Forge don't call unless it's changed, could screw up bad mods.
+            tileEntityIn.setWorld(this.world);
+        tileEntityIn.setPos(pos);
 
-        if (this.func_177435_g(p_177426_1_).func_177230_c() instanceof ITileEntityProvider)
-        {
-            if (this.field_150816_i.containsKey(p_177426_1_))
-            {
-                ((TileEntity)this.field_150816_i.get(p_177426_1_)).func_145843_s();
+        if (this.getBlockState(pos).getBlock().hasTileEntity(this.getBlockState(pos))) {
+            if (this.chunkTileEntityMap.containsKey(pos)) {
+                ((TileEntity) this.chunkTileEntityMap.get(pos)).invalidate();
             }
 
-            p_177426_2_.func_145829_t();
-            this.field_150816_i.put(p_177426_1_, p_177426_2_);
+            tileEntityIn.validate();
+            this.chunkTileEntityMap.put(pos, tileEntityIn);
+            // CraftBukkit start
+        } else {
+            System.out.println("Attempted to place a tile entity (" + tileEntityIn + ") at " + tileEntityIn.getPos().getX() + "," + tileEntityIn.getPos().getY() + "," + tileEntityIn.getPos().getZ()
+                    + " (" + CraftMagicNumbers.getMaterial(getBlockState(pos).getBlock()) + ") where there was no entity tile!");
+            System.out.println("Chunk coordinates: " + (this.xPosition * 16) + "," + (this.zPosition * 16));
+            new Exception().printStackTrace();
+            // CraftBukkit end
         }
     }
 
-    public void func_177425_e(BlockPos p_177425_1_)
+    public void removeTileEntity(BlockPos pos)
     {
-        if (this.field_76636_d)
+        if (this.isChunkLoaded)
         {
-            TileEntity tileentity = (TileEntity)this.field_150816_i.remove(p_177425_1_);
+            TileEntity tileentity = (TileEntity)this.chunkTileEntityMap.remove(pos);
 
             if (tileentity != null)
             {
-                tileentity.func_145843_s();
+                tileentity.invalidate();
             }
         }
     }
 
-    public void func_76631_c()
+    public void onChunkLoad()
     {
-        this.field_76636_d = true;
-        this.field_76637_e.func_147448_a(this.field_150816_i.values());
+        this.isChunkLoaded = true;
+        this.world.addTileEntities(this.chunkTileEntityMap.values());
 
-        for (ClassInheritanceMultiMap<Entity> classinheritancemultimap : this.field_76645_j)
+        for (ClassInheritanceMultiMap<Entity> classinheritancemultimap : this.entityLists)
         {
-            this.field_76637_e.func_175650_b(classinheritancemultimap);
+            this.world.loadEntities(com.google.common.collect.ImmutableList.copyOf(classinheritancemultimap));
         }
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(this));
     }
 
-    public void func_76623_d()
+    public void onChunkUnload()
     {
-        this.field_76636_d = false;
+        this.isChunkLoaded = false;
 
-        for (TileEntity tileentity : this.field_150816_i.values())
+        for (TileEntity tileentity : this.chunkTileEntityMap.values())
         {
-            this.field_76637_e.func_147457_a(tileentity);
+            this.world.markTileEntityForRemoval(tileentity);
         }
 
-        for (ClassInheritanceMultiMap<Entity> classinheritancemultimap : this.field_76645_j)
+        for (ClassInheritanceMultiMap<Entity> classinheritancemultimap : this.entityLists)
         {
-            this.field_76637_e.func_175681_c(classinheritancemultimap);
+            this.world.unloadEntities(classinheritancemultimap);
         }
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Unload(this));
     }
 
-    public void func_76630_e()
+    public void setChunkModified()
     {
-        this.field_76643_l = true;
+        this.isModified = true;
     }
 
-    public void func_177414_a(@Nullable Entity p_177414_1_, AxisAlignedBB p_177414_2_, List<Entity> p_177414_3_, Predicate <? super Entity > p_177414_4_)
+    public void getEntitiesWithinAABBForEntity(@Nullable Entity entityIn, AxisAlignedBB aabb, List<Entity> listToFill, Predicate <? super Entity > p_177414_4_)
     {
-        int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - 2.0D) / 16.0D);
-        int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + 2.0D) / 16.0D);
-        i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
-        j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
+        int i = MathHelper.floor((aabb.minY - World.MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.floor((aabb.maxY + World.MAX_ENTITY_RADIUS) / 16.0D);
+        i = MathHelper.clamp(i, 0, this.entityLists.length - 1);
+        j = MathHelper.clamp(j, 0, this.entityLists.length - 1);
 
         for (int k = i; k <= j; ++k)
         {
-            if (!this.field_76645_j[k].isEmpty())
+            if (!this.entityLists[k].isEmpty())
             {
-                for (Entity entity : this.field_76645_j[k])
+                for (Entity entity : this.entityLists[k])
                 {
-                    if (entity.func_174813_aQ().func_72326_a(p_177414_2_) && entity != p_177414_1_)
+                    if (entity.getEntityBoundingBox().intersectsWith(aabb) && entity != entityIn)
                     {
                         if (p_177414_4_ == null || p_177414_4_.apply(entity))
                         {
-                            p_177414_3_.add(entity);
+                            listToFill.add(entity);
                         }
 
-                        Entity[] aentity = entity.func_70021_al();
+                        Entity[] aentity = entity.getParts();
 
                         if (aentity != null)
                         {
                             for (Entity entity1 : aentity)
                             {
-                                if (entity1 != p_177414_1_ && entity1.func_174813_aQ().func_72326_a(p_177414_2_) && (p_177414_4_ == null || p_177414_4_.apply(entity1)))
+                                if (entity1 != entityIn && entity1.getEntityBoundingBox().intersectsWith(aabb) && (p_177414_4_ == null || p_177414_4_.apply(entity1)))
                                 {
-                                    p_177414_3_.add(entity1);
+                                    listToFill.add(entity1);
                                 }
                             }
                         }
@@ -903,195 +946,225 @@
         }
     }
 
-    public <T extends Entity> void func_177430_a(Class <? extends T > p_177430_1_, AxisAlignedBB p_177430_2_, List<T> p_177430_3_, Predicate <? super T > p_177430_4_)
+    public <T extends Entity> void getEntitiesOfTypeWithinAAAB(Class <? extends T > entityClass, AxisAlignedBB aabb, List<T> listToFill, Predicate <? super T > filter)
     {
-        int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - 2.0D) / 16.0D);
-        int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + 2.0D) / 16.0D);
-        i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
-        j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
+        int i = MathHelper.floor((aabb.minY - World.MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.floor((aabb.maxY + World.MAX_ENTITY_RADIUS) / 16.0D);
+        i = MathHelper.clamp(i, 0, this.entityLists.length - 1);
+        j = MathHelper.clamp(j, 0, this.entityLists.length - 1);
 
         for (int k = i; k <= j; ++k)
         {
-            for (T t : this.field_76645_j[k].func_180215_b(p_177430_1_))
+            for (T t : this.entityLists[k].getByClass(entityClass))
             {
-                if (t.func_174813_aQ().func_72326_a(p_177430_2_) && (p_177430_4_ == null || p_177430_4_.apply(t)))
+                if (t.getEntityBoundingBox().intersectsWith(aabb) && (filter == null || filter.apply(t)))
                 {
-                    p_177430_3_.add(t);
+                    listToFill.add(t);
                 }
             }
         }
     }
 
-    public boolean func_76601_a(boolean p_76601_1_)
+    public boolean needsSaving(boolean p_76601_1_)
     {
         if (p_76601_1_)
         {
-            if (this.field_76644_m && this.field_76637_e.func_82737_E() != this.field_76641_n || this.field_76643_l)
+            if (this.hasEntities && this.world.getTotalWorldTime() != this.lastSaveTime || this.isModified)
             {
                 return true;
             }
         }
-        else if (this.field_76644_m && this.field_76637_e.func_82737_E() >= this.field_76641_n + 600L)
+        else if (this.hasEntities && this.world.getTotalWorldTime() >= this.lastSaveTime + 600L)
         {
             return true;
         }
 
-        return this.field_76643_l;
+        return this.isModified;
     }
 
-    public Random func_76617_a(long p_76617_1_)
+    public Random getRandomWithSeed(long seed)
     {
-        return new Random(this.field_76637_e.func_72905_C() + (long)(this.field_76635_g * this.field_76635_g * 4987142) + (long)(this.field_76635_g * 5947611) + (long)(this.field_76647_h * this.field_76647_h) * 4392871L + (long)(this.field_76647_h * 389711) ^ p_76617_1_);
+        return new Random(this.world.getSeed() + (long)(this.xPosition * this.xPosition * 4987142) + (long)(this.xPosition * 5947611) + (long)(this.zPosition * this.zPosition) * 4392871L + (long)(this.zPosition * 389711) ^ seed);
     }
 
-    public boolean func_76621_g()
+    public boolean isEmpty()
     {
         return false;
     }
 
-    public void func_186030_a(IChunkProvider p_186030_1_, IChunkGenerator p_186030_2_)
+    public void populateChunk(IChunkProvider chunkProvider, IChunkGenerator chunkGenrator)
     {
-        Chunk chunk = p_186030_1_.func_186026_b(this.field_76635_g, this.field_76647_h - 1);
-        Chunk chunk1 = p_186030_1_.func_186026_b(this.field_76635_g + 1, this.field_76647_h);
-        Chunk chunk2 = p_186030_1_.func_186026_b(this.field_76635_g, this.field_76647_h + 1);
-        Chunk chunk3 = p_186030_1_.func_186026_b(this.field_76635_g - 1, this.field_76647_h);
+        Server server = world.getServer();
+        if (server != null) {
+            /*
+             * If it's a new world, the first few chunks are generated inside
+             * the World constructor. We can't reliably alter that, so we have
+             * no way of creating a CraftWorld/CraftServer at that point.
+             */
+            server.getPluginManager().callEvent(new org.bukkit.event.world.ChunkLoadEvent(bukkitChunk, false));
+        }
 
-        if (chunk1 != null && chunk2 != null && p_186030_1_.func_186026_b(this.field_76635_g + 1, this.field_76647_h + 1) != null)
+        // Update neighbor counts
+        for (int x = -2; x < 3; x++) {
+            for (int z = -2; z < 3; z++) {
+                if (x == 0 && z == 0) {
+                    continue;
+                }
+
+                net.minecraft.world.chunk.Chunk neighbor = getWorld().getChunkIfLoaded(xPosition + x, zPosition + z);
+                if (neighbor != null) {
+                    neighbor.setNeighborLoaded(-x, -z);
+                    setNeighborLoaded(x, z);
+                }
+            }
+        }
+        // CraftBukkit end
+        Chunk chunk = chunkProvider.getLoadedChunk(this.xPosition, this.zPosition - 1);
+        Chunk chunk1 = chunkProvider.getLoadedChunk(this.xPosition + 1, this.zPosition);
+        Chunk chunk2 = chunkProvider.getLoadedChunk(this.xPosition, this.zPosition + 1);
+        Chunk chunk3 = chunkProvider.getLoadedChunk(this.xPosition - 1, this.zPosition);
+
+        if (chunk1 != null && chunk2 != null && chunkProvider.getLoadedChunk(this.xPosition + 1, this.zPosition + 1) != null)
         {
-            this.func_186034_a(p_186030_2_);
+            this.populateChunk(chunkGenrator);
         }
 
-        if (chunk3 != null && chunk2 != null && p_186030_1_.func_186026_b(this.field_76635_g - 1, this.field_76647_h + 1) != null)
+        if (chunk3 != null && chunk2 != null && chunkProvider.getLoadedChunk(this.xPosition - 1, this.zPosition + 1) != null)
         {
-            chunk3.func_186034_a(p_186030_2_);
+            chunk3.populateChunk(chunkGenrator);
         }
 
-        if (chunk != null && chunk1 != null && p_186030_1_.func_186026_b(this.field_76635_g + 1, this.field_76647_h - 1) != null)
+        if (chunk != null && chunk1 != null && chunkProvider.getLoadedChunk(this.xPosition + 1, this.zPosition - 1) != null)
         {
-            chunk.func_186034_a(p_186030_2_);
+            chunk.populateChunk(chunkGenrator);
         }
 
         if (chunk != null && chunk3 != null)
         {
-            Chunk chunk4 = p_186030_1_.func_186026_b(this.field_76635_g - 1, this.field_76647_h - 1);
+            Chunk chunk4 = chunkProvider.getLoadedChunk(this.xPosition - 1, this.zPosition - 1);
 
             if (chunk4 != null)
             {
-                chunk4.func_186034_a(p_186030_2_);
+                chunk4.populateChunk(chunkGenrator);
             }
         }
     }
 
-    protected void func_186034_a(IChunkGenerator p_186034_1_)
+    protected void populateChunk(IChunkGenerator generator)
     {
-        if (this.func_177419_t())
+        if (populating && net.minecraftforge.common.ForgeModContainer.logCascadingWorldGeneration) logCascadingWorldGeneration();
+        populating = true;
+        if (this.isTerrainPopulated())
         {
-            if (p_186034_1_.func_185933_a(this, this.field_76635_g, this.field_76647_h))
+            if (generator.generateStructures(this, this.xPosition, this.zPosition))
             {
-                this.func_76630_e();
+                this.setChunkModified();
             }
         }
         else
         {
-            this.func_150809_p();
-            p_186034_1_.func_185931_b(this.field_76635_g, this.field_76647_h);
-            this.func_76630_e();
+            this.checkLight();
+            generator.populate(this.xPosition, this.zPosition);
+            net.minecraftforge.fml.common.registry.GameRegistry.generateWorld(this.xPosition, this.zPosition, this.world, generator, this.world.getChunkProvider());
+            this.world.getServer().getPluginManager().callEvent(new org.bukkit.event.world.ChunkPopulateEvent(bukkitChunk)); //MCPC Revive
+            this.setChunkModified();
         }
+        populating = false;
     }
 
-    public BlockPos func_177440_h(BlockPos p_177440_1_)
+    public BlockPos getPrecipitationHeight(BlockPos pos)
     {
-        int i = p_177440_1_.func_177958_n() & 15;
-        int j = p_177440_1_.func_177952_p() & 15;
+        int i = pos.getX() & 15;
+        int j = pos.getZ() & 15;
         int k = i | j << 4;
-        BlockPos blockpos = new BlockPos(p_177440_1_.func_177958_n(), this.field_76638_b[k], p_177440_1_.func_177952_p());
+        BlockPos blockpos = new BlockPos(pos.getX(), this.precipitationHeightMap[k], pos.getZ());
 
-        if (blockpos.func_177956_o() == -999)
+        if (blockpos.getY() == -999)
         {
-            int l = this.func_76625_h() + 15;
-            blockpos = new BlockPos(p_177440_1_.func_177958_n(), l, p_177440_1_.func_177952_p());
+            int l = this.getTopFilledSegment() + 15;
+            blockpos = new BlockPos(pos.getX(), l, pos.getZ());
             int i1 = -1;
 
-            while (blockpos.func_177956_o() > 0 && i1 == -1)
+            while (blockpos.getY() > 0 && i1 == -1)
             {
-                IBlockState iblockstate = this.func_177435_g(blockpos);
-                Material material = iblockstate.func_185904_a();
+                IBlockState iblockstate = this.getBlockState(blockpos);
+                Material material = iblockstate.getMaterial();
 
-                if (!material.func_76230_c() && !material.func_76224_d())
+                if (!material.blocksMovement() && !material.isLiquid())
                 {
-                    blockpos = blockpos.func_177977_b();
+                    blockpos = blockpos.down();
                 }
                 else
                 {
-                    i1 = blockpos.func_177956_o() + 1;
+                    i1 = blockpos.getY() + 1;
                 }
             }
 
-            this.field_76638_b[k] = i1;
+            this.precipitationHeightMap[k] = i1;
         }
 
-        return new BlockPos(p_177440_1_.func_177958_n(), this.field_76638_b[k], p_177440_1_.func_177952_p());
+        return new BlockPos(pos.getX(), this.precipitationHeightMap[k], pos.getZ());
     }
 
-    public void func_150804_b(boolean p_150804_1_)
+    public void onTick(boolean p_150804_1_)
     {
-        if (this.field_76650_s && this.field_76637_e.field_73011_w.func_191066_m() && !p_150804_1_)
+        if (this.isGapLightingUpdated && this.world.provider.hasSkyLight() && !p_150804_1_)
         {
-            this.func_150803_c(this.field_76637_e.field_72995_K);
+            this.recheckGaps(this.world.isRemote);
         }
 
-        this.field_150815_m = true;
+        this.chunkTicked = true;
 
-        if (!this.field_150814_l && this.field_76646_k)
+        if (!this.isLightPopulated && this.isTerrainPopulated)
         {
-            this.func_150809_p();
+            this.checkLight();
         }
 
-        while (!this.field_177447_w.isEmpty())
+        while (!this.tileEntityPosQueue.isEmpty())
         {
-            BlockPos blockpos = (BlockPos)this.field_177447_w.poll();
+            BlockPos blockpos = (BlockPos)this.tileEntityPosQueue.poll();
 
-            if (this.func_177424_a(blockpos, Chunk.EnumCreateEntityType.CHECK) == null && this.func_177435_g(blockpos).func_177230_c().func_149716_u())
+            if (this.getTileEntity(blockpos, Chunk.EnumCreateEntityType.CHECK) == null && this.getBlockState(blockpos).getBlock().hasTileEntity(this.getBlockState(blockpos)))
             {
-                TileEntity tileentity = this.func_177422_i(blockpos);
-                this.field_76637_e.func_175690_a(blockpos, tileentity);
-                this.field_76637_e.func_175704_b(blockpos, blockpos);
+                TileEntity tileentity = this.createNewTileEntity(blockpos);
+                this.world.setTileEntity(blockpos, tileentity);
+                this.world.markBlockRangeForRenderUpdate(blockpos, blockpos);
             }
         }
     }
 
-    public boolean func_150802_k()
+    public boolean isPopulated()
     {
-        return this.field_150815_m && this.field_76646_k && this.field_150814_l;
+        return this.chunkTicked && this.isTerrainPopulated && this.isLightPopulated;
     }
 
-    public boolean func_186035_j()
+    public boolean isChunkTicked()
     {
-        return this.field_150815_m;
+        return this.chunkTicked;
     }
 
-    public ChunkPos func_76632_l()
+    public ChunkPos getPos()
     {
-        return new ChunkPos(this.field_76635_g, this.field_76647_h);
+        return new ChunkPos(this.xPosition, this.zPosition);
     }
 
-    public boolean func_76606_c(int p_76606_1_, int p_76606_2_)
+    public boolean getAreLevelsEmpty(int startY, int endY)
     {
-        if (p_76606_1_ < 0)
+        if (startY < 0)
         {
-            p_76606_1_ = 0;
+            startY = 0;
         }
 
-        if (p_76606_2_ >= 256)
+        if (endY >= 256)
         {
-            p_76606_2_ = 255;
+            endY = 255;
         }
 
-        for (int i = p_76606_1_; i <= p_76606_2_; i += 16)
+        for (int i = startY; i <= endY; i += 16)
         {
-            ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i >> 4];
+            ExtendedBlockStorage extendedblockstorage = this.storageArrays[i >> 4];
 
-            if (extendedblockstorage != field_186036_a && !extendedblockstorage.func_76663_a())
+            if (extendedblockstorage != NULL_BLOCK_STORAGE && !extendedblockstorage.isEmpty())
             {
                 return false;
             }
@@ -1100,165 +1173,178 @@
         return true;
     }
 
-    public void func_76602_a(ExtendedBlockStorage[] p_76602_1_)
+    public void setStorageArrays(ExtendedBlockStorage[] newStorageArrays)
     {
-        if (this.field_76652_q.length != p_76602_1_.length)
+        if (this.storageArrays.length != newStorageArrays.length)
         {
-            field_150817_t.warn("Could not set level chunk sections, array length is {} instead of {}", new Object[] {Integer.valueOf(p_76602_1_.length), Integer.valueOf(this.field_76652_q.length)});
+            LOGGER.warn("Could not set level chunk sections, array length is {} instead of {}", new Object[] {Integer.valueOf(newStorageArrays.length), Integer.valueOf(this.storageArrays.length)});
         }
         else
         {
-            System.arraycopy(p_76602_1_, 0, this.field_76652_q, 0, this.field_76652_q.length);
+            System.arraycopy(newStorageArrays, 0, this.storageArrays, 0, this.storageArrays.length);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_186033_a(PacketBuffer p_186033_1_, int p_186033_2_, boolean p_186033_3_)
+    public void fillChunk(PacketBuffer buf, int p_186033_2_, boolean p_186033_3_)
     {
-        boolean flag = this.field_76637_e.field_73011_w.func_191066_m();
+        for(TileEntity tileEntity : chunkTileEntityMap.values())
+        {
+            tileEntity.updateContainingBlockInfo();
+            tileEntity.getBlockMetadata();
+            tileEntity.getBlockType();
+        }
 
-        for (int i = 0; i < this.field_76652_q.length; ++i)
+        boolean flag = this.world.provider.hasSkyLight();
+
+        for (int i = 0; i < this.storageArrays.length; ++i)
         {
-            ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i];
+            ExtendedBlockStorage extendedblockstorage = this.storageArrays[i];
 
             if ((p_186033_2_ & 1 << i) == 0)
             {
-                if (p_186033_3_ && extendedblockstorage != field_186036_a)
+                if (p_186033_3_ && extendedblockstorage != NULL_BLOCK_STORAGE)
                 {
-                    this.field_76652_q[i] = field_186036_a;
+                    this.storageArrays[i] = NULL_BLOCK_STORAGE;
                 }
             }
             else
             {
-                if (extendedblockstorage == field_186036_a)
+                if (extendedblockstorage == NULL_BLOCK_STORAGE)
                 {
                     extendedblockstorage = new ExtendedBlockStorage(i << 4, flag);
-                    this.field_76652_q[i] = extendedblockstorage;
+                    this.storageArrays[i] = extendedblockstorage;
                 }
 
-                extendedblockstorage.func_186049_g().func_186010_a(p_186033_1_);
-                p_186033_1_.readBytes(extendedblockstorage.func_76661_k().func_177481_a());
+                extendedblockstorage.getData().read(buf);
+                buf.readBytes(extendedblockstorage.getBlocklightArray().getData());
 
                 if (flag)
                 {
-                    p_186033_1_.readBytes(extendedblockstorage.func_76671_l().func_177481_a());
+                    buf.readBytes(extendedblockstorage.getSkylightArray().getData());
                 }
             }
         }
 
         if (p_186033_3_)
         {
-            p_186033_1_.readBytes(this.field_76651_r);
+            buf.readBytes(this.blockBiomeArray);
         }
 
-        for (int j = 0; j < this.field_76652_q.length; ++j)
+        for (int j = 0; j < this.storageArrays.length; ++j)
         {
-            if (this.field_76652_q[j] != field_186036_a && (p_186033_2_ & 1 << j) != 0)
+            if (this.storageArrays[j] != NULL_BLOCK_STORAGE && (p_186033_2_ & 1 << j) != 0)
             {
-                this.field_76652_q[j].func_76672_e();
+                this.storageArrays[j].removeInvalidBlocks();
             }
         }
 
-        this.field_150814_l = true;
-        this.field_76646_k = true;
-        this.func_76590_a();
+        this.isLightPopulated = true;
+        this.isTerrainPopulated = true;
+        this.generateHeightMap();
 
-        for (TileEntity tileentity : this.field_150816_i.values())
+        List<TileEntity> invalidList = new java.util.ArrayList<TileEntity>();
+
+        for (TileEntity tileentity : this.chunkTileEntityMap.values())
         {
-            tileentity.func_145836_u();
+            if (tileentity.shouldRefresh(this.world, tileentity.getPos(), tileentity.getBlockType().getStateFromMeta(tileentity.getBlockMetadata()), getBlockState(tileentity.getPos())))
+                invalidList.add(tileentity);
+            tileentity.updateContainingBlockInfo();
         }
+
+        for (TileEntity te : invalidList) te.invalidate();
     }
 
-    public Biome func_177411_a(BlockPos p_177411_1_, BiomeProvider p_177411_2_)
+    public Biome getBiome(BlockPos pos, BiomeProvider provider)
     {
-        int i = p_177411_1_.func_177958_n() & 15;
-        int j = p_177411_1_.func_177952_p() & 15;
-        int k = this.field_76651_r[j << 4 | i] & 255;
+        int i = pos.getX() & 15;
+        int j = pos.getZ() & 15;
+        int k = this.blockBiomeArray[j << 4 | i] & 255;
 
         if (k == 255)
         {
-            Biome biome = p_177411_2_.func_180300_a(p_177411_1_, Biomes.field_76772_c);
-            k = Biome.func_185362_a(biome);
-            this.field_76651_r[j << 4 | i] = (byte)(k & 255);
+            Biome biome = provider.getBiome(pos, Biomes.PLAINS);
+            k = Biome.getIdForBiome(biome);
+            this.blockBiomeArray[j << 4 | i] = (byte)(k & 255);
         }
 
-        Biome biome1 = Biome.func_150568_d(k);
-        return biome1 == null ? Biomes.field_76772_c : biome1;
+        Biome biome1 = Biome.getBiome(k);
+        return biome1 == null ? Biomes.PLAINS : biome1;
     }
 
-    public byte[] func_76605_m()
+    public byte[] getBiomeArray()
     {
-        return this.field_76651_r;
+        return this.blockBiomeArray;
     }
 
-    public void func_76616_a(byte[] p_76616_1_)
+    public void setBiomeArray(byte[] biomeArray)
     {
-        if (this.field_76651_r.length != p_76616_1_.length)
+        if (this.blockBiomeArray.length != biomeArray.length)
         {
-            field_150817_t.warn("Could not set level chunk biomes, array length is {} instead of {}", new Object[] {Integer.valueOf(p_76616_1_.length), Integer.valueOf(this.field_76651_r.length)});
+            LOGGER.warn("Could not set level chunk biomes, array length is {} instead of {}", new Object[] {Integer.valueOf(biomeArray.length), Integer.valueOf(this.blockBiomeArray.length)});
         }
         else
         {
-            System.arraycopy(p_76616_1_, 0, this.field_76651_r, 0, this.field_76651_r.length);
+            System.arraycopy(biomeArray, 0, this.blockBiomeArray, 0, this.blockBiomeArray.length);
         }
     }
 
-    public void func_76613_n()
+    public void resetRelightChecks()
     {
-        this.field_76649_t = 0;
+        this.queuedLightChecks = 0;
     }
 
-    public void func_76594_o()
+    public void enqueueRelightChecks()
     {
-        if (this.field_76649_t < 4096)
+        if (this.queuedLightChecks < 4096)
         {
-            BlockPos blockpos = new BlockPos(this.field_76635_g << 4, 0, this.field_76647_h << 4);
+            BlockPos blockpos = new BlockPos(this.xPosition << 4, 0, this.zPosition << 4);
 
             for (int i = 0; i < 8; ++i)
             {
-                if (this.field_76649_t >= 4096)
+                if (this.queuedLightChecks >= 4096)
                 {
                     return;
                 }
 
-                int j = this.field_76649_t % 16;
-                int k = this.field_76649_t / 16 % 16;
-                int l = this.field_76649_t / 256;
-                ++this.field_76649_t;
+                int j = this.queuedLightChecks % 16;
+                int k = this.queuedLightChecks / 16 % 16;
+                int l = this.queuedLightChecks / 256;
+                ++this.queuedLightChecks;
 
                 for (int i1 = 0; i1 < 16; ++i1)
                 {
-                    BlockPos blockpos1 = blockpos.func_177982_a(k, (j << 4) + i1, l);
+                    BlockPos blockpos1 = blockpos.add(k, (j << 4) + i1, l);
                     boolean flag = i1 == 0 || i1 == 15 || k == 0 || k == 15 || l == 0 || l == 15;
 
-                    if (this.field_76652_q[j] == field_186036_a && flag || this.field_76652_q[j] != field_186036_a && this.field_76652_q[j].func_177485_a(k, i1, l).func_185904_a() == Material.field_151579_a)
+                    if (this.storageArrays[j] == NULL_BLOCK_STORAGE && flag || this.storageArrays[j] != NULL_BLOCK_STORAGE && this.storageArrays[j].get(k, i1, l).getBlock().isAir(this.storageArrays[j].get(k, i1, l), this.world, blockpos1))
                     {
                         for (EnumFacing enumfacing : EnumFacing.values())
                         {
-                            BlockPos blockpos2 = blockpos1.func_177972_a(enumfacing);
+                            BlockPos blockpos2 = blockpos1.offset(enumfacing);
 
-                            if (this.field_76637_e.func_180495_p(blockpos2).func_185906_d() > 0)
+                            if (this.world.getBlockState(blockpos2).getLightValue(this.world, blockpos2) > 0)
                             {
-                                this.field_76637_e.func_175664_x(blockpos2);
+                                this.world.checkLight(blockpos2);
                             }
                         }
 
-                        this.field_76637_e.func_175664_x(blockpos1);
+                        this.world.checkLight(blockpos1);
                     }
                 }
             }
         }
     }
 
-    public void func_150809_p()
+    public void checkLight()
     {
-        this.field_76646_k = true;
-        this.field_150814_l = true;
-        BlockPos blockpos = new BlockPos(this.field_76635_g << 4, 0, this.field_76647_h << 4);
+        this.isTerrainPopulated = true;
+        this.isLightPopulated = true;
+        BlockPos blockpos = new BlockPos(this.xPosition << 4, 0, this.zPosition << 4);
 
-        if (this.field_76637_e.field_73011_w.func_191066_m())
+        if (this.world.provider.hasSkyLight())
         {
-            if (this.field_76637_e.func_175707_a(blockpos.func_177982_a(-1, 0, -1), blockpos.func_177982_a(16, this.field_76637_e.func_181545_F(), 16)))
+            if (this.world.isAreaLoaded(blockpos.add(-1, 0, -1), blockpos.add(16, this.world.getSeaLevel(), 16)))
             {
                 label92:
 
@@ -1266,90 +1352,90 @@
                 {
                     for (int j = 0; j < 16; ++j)
                     {
-                        if (!this.func_150811_f(i, j))
+                        if (!this.checkLight(i, j))
                         {
-                            this.field_150814_l = false;
+                            this.isLightPopulated = false;
                             break label92;
                         }
                     }
                 }
 
-                if (this.field_150814_l)
+                if (this.isLightPopulated)
                 {
                     for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
                     {
-                        int k = enumfacing.func_176743_c() == EnumFacing.AxisDirection.POSITIVE ? 16 : 1;
-                        this.field_76637_e.func_175726_f(blockpos.func_177967_a(enumfacing, k)).func_180700_a(enumfacing.func_176734_d());
+                        int k = enumfacing.getAxisDirection() == EnumFacing.AxisDirection.POSITIVE ? 16 : 1;
+                        this.world.getChunkFromBlockCoords(blockpos.offset(enumfacing, k)).checkLightSide(enumfacing.getOpposite());
                     }
 
-                    this.func_177441_y();
+                    this.setSkylightUpdated();
                 }
             }
             else
             {
-                this.field_150814_l = false;
+                this.isLightPopulated = false;
             }
         }
     }
 
-    private void func_177441_y()
+    private void setSkylightUpdated()
     {
-        for (int i = 0; i < this.field_76639_c.length; ++i)
+        for (int i = 0; i < this.updateSkylightColumns.length; ++i)
         {
-            this.field_76639_c[i] = true;
+            this.updateSkylightColumns[i] = true;
         }
 
-        this.func_150803_c(false);
+        this.recheckGaps(false);
     }
 
-    private void func_180700_a(EnumFacing p_180700_1_)
+    private void checkLightSide(EnumFacing facing)
     {
-        if (this.field_76646_k)
+        if (this.isTerrainPopulated)
         {
-            if (p_180700_1_ == EnumFacing.EAST)
+            if (facing == EnumFacing.EAST)
             {
                 for (int i = 0; i < 16; ++i)
                 {
-                    this.func_150811_f(15, i);
+                    this.checkLight(15, i);
                 }
             }
-            else if (p_180700_1_ == EnumFacing.WEST)
+            else if (facing == EnumFacing.WEST)
             {
                 for (int j = 0; j < 16; ++j)
                 {
-                    this.func_150811_f(0, j);
+                    this.checkLight(0, j);
                 }
             }
-            else if (p_180700_1_ == EnumFacing.SOUTH)
+            else if (facing == EnumFacing.SOUTH)
             {
                 for (int k = 0; k < 16; ++k)
                 {
-                    this.func_150811_f(k, 15);
+                    this.checkLight(k, 15);
                 }
             }
-            else if (p_180700_1_ == EnumFacing.NORTH)
+            else if (facing == EnumFacing.NORTH)
             {
                 for (int l = 0; l < 16; ++l)
                 {
-                    this.func_150811_f(l, 0);
+                    this.checkLight(l, 0);
                 }
             }
         }
     }
 
-    private boolean func_150811_f(int p_150811_1_, int p_150811_2_)
+    private boolean checkLight(int x, int z)
     {
-        int i = this.func_76625_h();
+        int i = this.getTopFilledSegment();
         boolean flag = false;
         boolean flag1 = false;
-        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos((this.field_76635_g << 4) + p_150811_1_, 0, (this.field_76647_h << 4) + p_150811_2_);
+        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos((this.xPosition << 4) + x, 0, (this.zPosition << 4) + z);
 
-        for (int j = i + 16 - 1; j > this.field_76637_e.func_181545_F() || j > 0 && !flag1; --j)
+        for (int j = i + 16 - 1; j > this.world.getSeaLevel() || j > 0 && !flag1; --j)
         {
-            blockpos$mutableblockpos.func_181079_c(blockpos$mutableblockpos.func_177958_n(), j, blockpos$mutableblockpos.func_177952_p());
-            int k = this.func_177437_b(blockpos$mutableblockpos);
+            blockpos$mutableblockpos.setPos(blockpos$mutableblockpos.getX(), j, blockpos$mutableblockpos.getZ());
+            int k = this.getBlockLightOpacity(blockpos$mutableblockpos);
 
-            if (k == 255 && blockpos$mutableblockpos.func_177956_o() < this.field_76637_e.func_181545_F())
+            if (k == 255 && blockpos$mutableblockpos.getY() < this.world.getSeaLevel())
             {
                 flag1 = true;
             }
@@ -1358,116 +1444,116 @@
             {
                 flag = true;
             }
-            else if (flag && k == 0 && !this.field_76637_e.func_175664_x(blockpos$mutableblockpos))
+            else if (flag && k == 0 && !this.world.checkLight(blockpos$mutableblockpos))
             {
                 return false;
             }
         }
 
-        for (int l = blockpos$mutableblockpos.func_177956_o(); l > 0; --l)
+        for (int l = blockpos$mutableblockpos.getY(); l > 0; --l)
         {
-            blockpos$mutableblockpos.func_181079_c(blockpos$mutableblockpos.func_177958_n(), l, blockpos$mutableblockpos.func_177952_p());
+            blockpos$mutableblockpos.setPos(blockpos$mutableblockpos.getX(), l, blockpos$mutableblockpos.getZ());
 
-            if (this.func_177435_g(blockpos$mutableblockpos).func_185906_d() > 0)
+            if (this.getBlockState(blockpos$mutableblockpos).getLightValue(this.world, blockpos$mutableblockpos) > 0)
             {
-                this.field_76637_e.func_175664_x(blockpos$mutableblockpos);
+                this.world.checkLight(blockpos$mutableblockpos);
             }
         }
 
         return true;
     }
 
-    public boolean func_177410_o()
+    public boolean isLoaded()
     {
-        return this.field_76636_d;
+        return this.isChunkLoaded;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_177417_c(boolean p_177417_1_)
+    public void setChunkLoaded(boolean loaded)
     {
-        this.field_76636_d = p_177417_1_;
+        this.isChunkLoaded = loaded;
     }
 
-    public World func_177412_p()
+    public World getWorld()
     {
-        return this.field_76637_e;
+        return this.world;
     }
 
-    public int[] func_177445_q()
+    public int[] getHeightMap()
     {
-        return this.field_76634_f;
+        return this.heightMap;
     }
 
-    public void func_177420_a(int[] p_177420_1_)
+    public void setHeightMap(int[] newHeightMap)
     {
-        if (this.field_76634_f.length != p_177420_1_.length)
+        if (this.heightMap.length != newHeightMap.length)
         {
-            field_150817_t.warn("Could not set level chunk heightmap, array length is {} instead of {}", new Object[] {Integer.valueOf(p_177420_1_.length), Integer.valueOf(this.field_76634_f.length)});
+            LOGGER.warn("Could not set level chunk heightmap, array length is {} instead of {}", new Object[] {Integer.valueOf(newHeightMap.length), Integer.valueOf(this.heightMap.length)});
         }
         else
         {
-            System.arraycopy(p_177420_1_, 0, this.field_76634_f, 0, this.field_76634_f.length);
+            System.arraycopy(newHeightMap, 0, this.heightMap, 0, this.heightMap.length);
         }
     }
 
-    public Map<BlockPos, TileEntity> func_177434_r()
+    public Map<BlockPos, TileEntity> getTileEntityMap()
     {
-        return this.field_150816_i;
+        return this.chunkTileEntityMap;
     }
 
-    public ClassInheritanceMultiMap<Entity>[] func_177429_s()
+    public ClassInheritanceMultiMap<Entity>[] getEntityLists()
     {
-        return this.field_76645_j;
+        return this.entityLists;
     }
 
-    public boolean func_177419_t()
+    public boolean isTerrainPopulated()
     {
-        return this.field_76646_k;
+        return this.isTerrainPopulated;
     }
 
-    public void func_177446_d(boolean p_177446_1_)
+    public void setTerrainPopulated(boolean terrainPopulated)
     {
-        this.field_76646_k = p_177446_1_;
+        this.isTerrainPopulated = terrainPopulated;
     }
 
-    public boolean func_177423_u()
+    public boolean isLightPopulated()
     {
-        return this.field_150814_l;
+        return this.isLightPopulated;
     }
 
-    public void func_177421_e(boolean p_177421_1_)
+    public void setLightPopulated(boolean lightPopulated)
     {
-        this.field_150814_l = p_177421_1_;
+        this.isLightPopulated = lightPopulated;
     }
 
-    public void func_177427_f(boolean p_177427_1_)
+    public void setModified(boolean modified)
     {
-        this.field_76643_l = p_177427_1_;
+        this.isModified = modified;
     }
 
-    public void func_177409_g(boolean p_177409_1_)
+    public void setHasEntities(boolean hasEntitiesIn)
     {
-        this.field_76644_m = p_177409_1_;
+        this.hasEntities = hasEntitiesIn;
     }
 
-    public void func_177432_b(long p_177432_1_)
+    public void setLastSaveTime(long saveTime)
     {
-        this.field_76641_n = p_177432_1_;
+        this.lastSaveTime = saveTime;
     }
 
-    public int func_177442_v()
+    public int getLowestHeight()
     {
-        return this.field_82912_p;
+        return this.heightMapMinimum;
     }
 
-    public long func_177416_w()
+    public long getInhabitedTime()
     {
-        return this.field_111204_q;
+        return this.inhabitedTime;
     }
 
-    public void func_177415_c(long p_177415_1_)
+    public void setInhabitedTime(long newInhabitedTime)
     {
-        this.field_111204_q = p_177415_1_;
+        this.inhabitedTime = newInhabitedTime;
     }
 
     public static enum EnumCreateEntityType
@@ -1476,4 +1562,34 @@
         QUEUED,
         CHECK;
     }
+
+    /* ======================================== FORGE START =====================================*/
+    /**
+     * Removes the tile entity at the specified position, only if it's
+     * marked as invalid.
+     */
+    public void removeInvalidTileEntity(BlockPos pos)
+    {
+        if (isChunkLoaded)
+        {
+            TileEntity entity = (TileEntity)chunkTileEntityMap.get(pos);
+            if (entity != null && entity.isInvalid())
+            {
+                chunkTileEntityMap.remove(pos);
+            }
+        }
+    }
+
+    private static boolean populating = false; // keep track of cascading chunk generation during chunk population
+
+    private void logCascadingWorldGeneration()
+    {
+        net.minecraftforge.fml.common.ModContainer activeModContainer = net.minecraftforge.fml.common.Loader.instance().activeModContainer();
+        String format = "{} loaded a new chunk ({}, {}  Dimension: {}) during chunk population, causing cascading worldgen lag. Please report this to the mod's issue tracker. This log can be disabled in the Forge config.";
+
+        if (activeModContainer == null) // vanilla minecraft has problems too (MC-114332), log it at a quieter level.
+            net.minecraftforge.fml.common.FMLLog.log.debug(format, "Minecraft", this.xPosition, this.zPosition, this.world.provider.getDimension());
+        else
+            net.minecraftforge.fml.common.FMLLog.log.warn(format, activeModContainer.getName(), this.xPosition, this.zPosition, this.world.provider.getDimension());
+    }
 }
