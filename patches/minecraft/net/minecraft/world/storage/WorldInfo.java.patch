--- ../src-base/minecraft/net/minecraft/world/storage/WorldInfo.java
+++ ../src-work/minecraft/net/minecraft/world/storage/WorldInfo.java
@@ -14,14 +14,12 @@
 import net.minecraft.util.datafix.IDataFixer;
 import net.minecraft.util.datafix.IDataWalker;
 import net.minecraft.util.math.BlockPos;
-import net.minecraft.world.DimensionType;
-import net.minecraft.world.EnumDifficulty;
-import net.minecraft.world.GameRules;
-import net.minecraft.world.GameType;
-import net.minecraft.world.WorldSettings;
-import net.minecraft.world.WorldType;
+import net.minecraft.world.*;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Bukkit;
+import org.bukkit.event.weather.ThunderChangeEvent;
+import org.bukkit.event.weather.WeatherChangeEvent;
 
 public class WorldInfo
 {
@@ -64,8 +62,10 @@
     private double field_176153_H = 0.2D;
     private int field_176154_I = 5;
     private int field_176155_J = 15;
-    private final Map<DimensionType, NBTTagCompound> field_186348_N = Maps.newEnumMap(DimensionType.class);
+    private final Map<Integer, NBTTagCompound> field_186348_N = Maps.newHashMap();
     private GameRules field_82577_x = new GameRules();
+    private java.util.Map<String, net.minecraft.nbt.NBTBase> additionalProperties;
+    public WorldServer world; // CraftBukkit
 
     protected WorldInfo()
     {
@@ -252,7 +252,7 @@
 
             for (String s : nbttagcompound1.func_150296_c())
             {
-                this.field_186348_N.put(DimensionType.func_186069_a(Integer.parseInt(s)), nbttagcompound1.func_74775_l(s));
+                this.field_186348_N.put(Integer.parseInt(s), nbttagcompound1.func_74775_l(s));
             }
         }
     }
@@ -335,6 +335,7 @@
         nbttagcompound.func_74757_a("Snapshot", false);
         p_76064_1_.func_74782_a("Version", nbttagcompound);
         p_76064_1_.func_74768_a("DataVersion", 922);
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().getDataFixer().writeVersionData(p_76064_1_);
         p_76064_1_.func_74772_a("RandomSeed", this.field_76100_a);
         p_76064_1_.func_74778_a("generatorName", this.field_76098_b.func_77127_a());
         p_76064_1_.func_74768_a("generatorVersion", this.field_76098_b.func_77131_c());
@@ -377,9 +378,10 @@
         p_76064_1_.func_74782_a("GameRules", this.field_82577_x.func_82770_a());
         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
 
-        for (Entry<DimensionType, NBTTagCompound> entry : this.field_186348_N.entrySet())
+        for (Entry<Integer, NBTTagCompound> entry : this.field_186348_N.entrySet())
         {
-            nbttagcompound1.func_74782_a(String.valueOf(((DimensionType)entry.getKey()).func_186068_a()), (NBTBase)entry.getValue());
+            if (entry.getValue() == null || entry.getValue().func_82582_d()) continue;
+            nbttagcompound1.func_74782_a(String.valueOf(entry.getKey()), (NBTBase)entry.getValue());
         }
 
         p_76064_1_.func_74782_a("DimensionData", nbttagcompound1);
@@ -509,7 +511,19 @@
 
     public void func_76069_a(boolean p_76069_1_)
     {
-        this.field_76102_o = p_76069_1_;
+
+        // CraftBukkit start
+        org.bukkit.World world = Bukkit.getWorld(func_76065_j());
+        if (world != null) {
+            ThunderChangeEvent thunder = new ThunderChangeEvent(world, p_76069_1_);
+            Bukkit.getServer().getPluginManager().callEvent(thunder);
+            if (thunder.isCancelled()) {
+                return;
+            }
+
+            func_76090_f(0); // Will force a time reset
+        }
+        // CraftBukkit endthis.thundering = thunderingIn;
     }
 
     public int func_76071_n()
@@ -529,6 +543,19 @@
 
     public void func_76084_b(boolean p_76084_1_)
     {
+
+        // CraftBukkit start
+        org.bukkit.World world = Bukkit.getWorld(func_76065_j());
+        if (world != null) {
+            WeatherChangeEvent weather = new WeatherChangeEvent(world, p_76084_1_);
+            Bukkit.getServer().getPluginManager().callEvent(weather);
+            if (weather.isCancelled()) {
+                return;
+            }
+
+            func_76080_g(0); // Will force a time reset
+        }
+        // CraftBukkit end
         this.field_76104_m = p_76084_1_;
     }
 
@@ -709,6 +736,7 @@
 
     public void func_176144_a(EnumDifficulty p_176144_1_)
     {
+        net.minecraftforge.common.ForgeHooks.onDifficultyChange(p_176144_1_, this.field_176158_z);
         this.field_176158_z = p_176144_1_;
     }
 
@@ -807,17 +835,49 @@
         });
     }
 
+    /**
+     * Allow access to additional mod specific world based properties
+     * Used by FML to store mod list associated with a world, and maybe an id map
+     * Used by Forge to store the dimensions available to a world
+     * @param additionalProperties
+     */
+    public void setAdditionalProperties(java.util.Map<String,net.minecraft.nbt.NBTBase> additionalProperties)
+    {
+        // one time set for this
+        if (this.additionalProperties == null)
+        {
+            this.additionalProperties = additionalProperties;
+        }
+    }
+
+    public net.minecraft.nbt.NBTBase getAdditionalProperty(String additionalProperty)
+    {
+        return this.additionalProperties!=null? this.additionalProperties.get(additionalProperty) : null;
+    }
+
+    @Deprecated //Use the int version below, and pass in dimension id NOT TYPE id
     public NBTTagCompound func_186347_a(DimensionType p_186347_1_)
     {
-        NBTTagCompound nbttagcompound = (NBTTagCompound)this.field_186348_N.get(p_186347_1_);
+        return getDimensionData(p_186347_1_.func_186068_a());
+    }
+    public NBTTagCompound getDimensionData(int dimensionID)
+    {
+        NBTTagCompound nbttagcompound = (NBTTagCompound)this.field_186348_N.get(dimensionID);
         return nbttagcompound == null ? new NBTTagCompound() : nbttagcompound;
     }
 
+    @Deprecated //Use the int version below, and pass in dimension id NOT TYPE id
     public void func_186345_a(DimensionType p_186345_1_, NBTTagCompound p_186345_2_)
     {
-        this.field_186348_N.put(p_186345_1_, p_186345_2_);
+        this.setDimensionData(p_186345_1_.func_186068_a(), p_186345_2_);
     }
 
+    //Dimension numerical ID version of setter, as two dimensions could in theory have the same DimensionType. ID should be grabbed from the world NOT the Type
+    public void setDimensionData(int dimensionID, NBTTagCompound compound)
+    {
+        this.field_186348_N.put(dimensionID, compound);
+    }
+
     @SideOnly(Side.CLIENT)
     public int func_186344_K()
     {
@@ -835,4 +895,11 @@
     {
         return this.field_186349_b;
     }
+    // CraftBukkit start - Check if the name stored in NBT is the correct one
+    public void checkName( String name ) {
+        if ( !this.field_76106_k.equals( name ) ) {
+            this.field_76106_k = name;
+        }
+    }
+    // CraftBukkit end
 }
