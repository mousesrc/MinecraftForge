--- ../src-base/minecraft/net/minecraft/world/World.java
+++ ../src-work/minecraft/net/minecraft/world/World.java
@@ -4,12 +4,8 @@
 import com.google.common.base.Objects;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
-import java.util.Calendar;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Random;
-import java.util.UUID;
+
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockLiquid;
@@ -21,12 +17,22 @@
 import net.minecraft.crash.ICrashReportDetail;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLiving;
+import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.INpc;
+import net.minecraft.entity.item.EntityItem;
+import net.minecraft.entity.monster.EntityGhast;
+import net.minecraft.entity.monster.EntityGolem;
+import net.minecraft.entity.monster.EntityMob;
+import net.minecraft.entity.monster.EntitySlime;
+import net.minecraft.entity.passive.EntityAnimal;
+import net.minecraft.entity.passive.EntityWaterMob;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.init.Biomes;
 import net.minecraft.init.Blocks;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.network.Packet;
+import net.minecraft.network.play.server.SPacketWorldBorder;
 import net.minecraft.pathfinding.PathWorldListener;
 import net.minecraft.profiler.Profiler;
 import net.minecraft.scoreboard.Scoreboard;
@@ -48,100 +54,234 @@
 import net.minecraft.village.VillageCollection;
 import net.minecraft.world.biome.Biome;
 import net.minecraft.world.biome.BiomeProvider;
+import net.minecraft.world.border.IBorderListener;
 import net.minecraft.world.border.WorldBorder;
 import net.minecraft.world.chunk.Chunk;
 import net.minecraft.world.chunk.IChunkProvider;
+import net.minecraft.world.gen.ChunkProviderServer;
 import net.minecraft.world.gen.structure.StructureBoundingBox;
 import net.minecraft.world.storage.ISaveHandler;
 import net.minecraft.world.storage.MapStorage;
 import net.minecraft.world.storage.WorldInfo;
 import net.minecraft.world.storage.loot.LootTableManager;
+import net.minecraftforge.common.util.BlockSnapshot;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Bukkit;
+import org.bukkit.block.BlockState;
+import org.bukkit.craftbukkit.CraftChunk;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.CraftWorld;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.entity.CraftCustomExplosive;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.generator.CustomChunkGenerator;
+import org.bukkit.craftbukkit.generator.NormalChunkGenerator;
+import org.bukkit.craftbukkit.util.CraftMagicNumbers;
+import org.bukkit.entity.Explosive;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+import org.bukkit.generator.ChunkGenerator;
+import org.spigotmc.SpigotWorldConfig;
 
-public abstract class World implements IBlockAccess
+public abstract class World implements IBlockAccess, net.minecraftforge.common.capabilities.ICapabilityProvider
 {
-    private int field_181546_a = 63;
-    protected boolean field_72999_e;
-    public final List<Entity> field_72996_f = Lists.<Entity>newArrayList();
-    protected final List<Entity> field_72997_g = Lists.<Entity>newArrayList();
-    public final List<TileEntity> field_147482_g = Lists.<TileEntity>newArrayList();
-    public final List<TileEntity> field_175730_i = Lists.<TileEntity>newArrayList();
-    private final List<TileEntity> field_147484_a = Lists.<TileEntity>newArrayList();
-    private final List<TileEntity> field_147483_b = Lists.<TileEntity>newArrayList();
-    public final List<EntityPlayer> field_73010_i = Lists.<EntityPlayer>newArrayList();
-    public final List<Entity> field_73007_j = Lists.<Entity>newArrayList();
-    protected final IntHashMap<Entity> field_175729_l = new IntHashMap();
-    private final long field_73001_c = 16777215L;
-    private int field_73008_k;
-    protected int field_73005_l = (new Random()).nextInt();
-    protected final int field_73006_m = 1013904223;
-    public float field_73003_n;
-    public float field_73004_o;
-    public float field_73018_p;
-    public float field_73017_q;
-    private int field_73016_r;
-    public final Random field_73012_v = new Random();
-    public final WorldProvider field_73011_w;
-    protected PathWorldListener field_184152_t = new PathWorldListener();
-    protected List<IWorldEventListener> field_73021_x;
-    protected IChunkProvider field_73020_y;
-    protected final ISaveHandler field_73019_z;
-    public WorldInfo field_72986_A;
-    protected boolean field_72987_B;
-    public MapStorage field_72988_C;
-    public VillageCollection field_72982_D;
-    protected LootTableManager field_184151_B;
-    public final Profiler field_72984_F;
-    private final Calendar field_83016_L;
-    public Scoreboard field_96442_D;
-    public final boolean field_72995_K;
-    public boolean field_72985_G;
-    public boolean field_72992_H;
-    private boolean field_147481_N;
-    private final WorldBorder field_175728_M;
-    int[] field_72994_J;
+    /**
+     * Used in the getEntitiesWithinAABB functions to expand the search area for entities.
+     * Modders should change this variable to a higher value if it is less then the radius
+     * of one of there entities.
+     */
+    public static double MAX_ENTITY_RADIUS = 2.0D;
 
-    protected World(ISaveHandler p_i45749_1_, WorldInfo p_i45749_2_, WorldProvider p_i45749_3_, Profiler p_i45749_4_, boolean p_i45749_5_)
+    private int seaLevel = 63;
+    protected boolean scheduledUpdatesAreImmediate;
+    public final List<Entity> loadedEntityList = Lists.<Entity>newArrayList();
+    protected final List<Entity> unloadedEntityList = Lists.<Entity>newArrayList();
+    public final List<TileEntity> loadedTileEntityList = Lists.<TileEntity>newArrayList();
+    public final List<TileEntity> tickableTileEntities = Lists.<TileEntity>newArrayList();
+    private final List<TileEntity> addedTileEntityList = Lists.<TileEntity>newArrayList();
+    private final List<TileEntity> tileEntitiesToBeRemoved = Lists.<TileEntity>newArrayList();
+    public final List<EntityPlayer> playerEntities = Lists.<EntityPlayer>newArrayList();
+    public final List<Entity> weatherEffects = Lists.<Entity>newArrayList();
+    protected final IntHashMap<Entity> entitiesById = new IntHashMap();
+    private final long cloudColour = 16777215L;
+    private int skylightSubtracted;
+    protected int updateLCG = (new Random()).nextInt();
+    protected final int DIST_HASH_MAGIC = 1013904223;
+    public float prevRainingStrength;
+    public float rainingStrength;
+    public float prevThunderingStrength;
+    public float thunderingStrength;
+    private int lastLightningBolt;
+    public final Random rand = new Random();
+    public final WorldProvider provider;
+    protected PathWorldListener pathListener = new PathWorldListener();
+    protected List<IWorldEventListener> eventListeners;
+    protected IChunkProvider chunkProvider;
+    protected final ISaveHandler saveHandler;
+    public WorldInfo worldInfo;
+    protected boolean findingSpawnPoint;
+    public MapStorage mapStorage;
+    public VillageCollection villageCollectionObj;
+    protected LootTableManager lootTable;
+    public final Profiler theProfiler;
+    private final Calendar theCalendar;
+    public Scoreboard worldScoreboard;
+    public final boolean isRemote;
+    public boolean spawnHostileMobs;
+    public boolean spawnPeacefulMobs;
+    private boolean processingLoadedTiles;
+    private final WorldBorder worldBorder;
+    int[] lightUpdateBlockList;
+
+    public boolean restoringBlockSnapshots = false;
+    public boolean captureBlockSnapshots = false;
+    public java.util.ArrayList<net.minecraftforge.common.util.BlockSnapshot> capturedBlockSnapshots = new java.util.ArrayList<net.minecraftforge.common.util.BlockSnapshot>();
+    private net.minecraftforge.common.capabilities.CapabilityDispatcher capabilities;
+    private net.minecraftforge.common.util.WorldCapabilityData capabilityData;
+    // CraftBukkit start Added the following
+    private CraftWorld world;
+    public boolean pvpMode;
+    public boolean keepSpawnInMemory = true;
+    public ChunkGenerator generator;
+
+    public boolean captureBlockStates = false;
+    public boolean captureTreeGeneration = false;
+    public ArrayList<BlockState> capturedBlockStates= new ArrayList<BlockState>(){
+        @Override
+        public boolean add( BlockState blockState ) {
+            Iterator<BlockState> blockStateIterator = this.iterator();
+            while( blockStateIterator.hasNext() ) {
+                BlockState blockState1 = blockStateIterator.next();
+                if ( blockState1.getLocation().equals( blockState.getLocation() ) ) {
+                    return false;
+                }
+            }
+
+            return super.add( blockState );
+        }
+    };
+    //Spigot
+    public SpigotWorldConfig spigotConfig;
+
+    //craftbukkit
+    public static org.bukkit.World.Environment decide(net.minecraft.world.WorldProvider in)
     {
-        this.field_73021_x = Lists.newArrayList(new IWorldEventListener[] {this.field_184152_t});
-        this.field_83016_L = Calendar.getInstance();
-        this.field_96442_D = new Scoreboard();
-        this.field_72985_G = true;
-        this.field_72992_H = true;
-        this.field_72994_J = new int[32768];
-        this.field_73019_z = p_i45749_1_;
-        this.field_72984_F = p_i45749_4_;
-        this.field_72986_A = p_i45749_2_;
-        this.field_73011_w = p_i45749_3_;
-        this.field_72995_K = p_i45749_5_;
-        this.field_175728_M = p_i45749_3_.func_177501_r();
+        switch (in.getDimensionType())
+        {
+            case OVERWORLD: return org.bukkit.World.Environment.NORMAL;
+            case NETHER: return org.bukkit.World.Environment.NETHER;
+            case THE_END:return org.bukkit.World.Environment.THE_END;
+            default: return org.bukkit.World.Environment.NORMAL;
+        }
     }
+    protected World(ISaveHandler idatamanager, WorldInfo worlddata, net.minecraft.world.WorldProvider worldprovider, Profiler methodprofiler, boolean flag)
+    {
+        this(idatamanager,worlddata,worldprovider,methodprofiler,flag,null,decide(worldprovider));
+    }
+    protected World(ISaveHandler saveHandlerIn, WorldInfo info, WorldProvider providerIn, Profiler profilerIn, boolean client, ChunkGenerator gen, org.bukkit.World.Environment env)
+    {
+        this.generator = gen;
+        if(gen == null)
+        {
+            gen = new CustomChunkGenerator(this,info.getSeed());
+        }
+        this.world = new CraftWorld((net.minecraft.world.WorldServer) this, gen, env);
+        this.ticksPerAnimalSpawns = this.getServer().getTicksPerAnimalSpawns(); // CraftBukkit
+        this.ticksPerMonsterSpawns = this.getServer().getTicksPerMonsterSpawns(); // CraftBukkit
+        // CraftBukkit end
+        this.eventListeners = Lists.newArrayList(new IWorldEventListener[] {this.pathListener});
+        this.theCalendar = Calendar.getInstance();
+        this.worldScoreboard = new Scoreboard();
+        this.spawnHostileMobs = true;
+        this.spawnPeacefulMobs = true;
+        this.lightUpdateBlockList = new int[32768];
+        this.saveHandler = saveHandlerIn;
+        this.theProfiler = profilerIn;
+        this.worldInfo = info;
+        this.provider = providerIn;
+        this.isRemote = client;
+        this.worldBorder = providerIn.createWorldBorder();
+        perWorldStorage = new MapStorage((ISaveHandler)null);
+        // CraftBukkit start
+        getWorldBorder().world = (WorldServer) this;
+        // From PlayerList.setPlayerFileData
+        getWorldBorder().addListener(new IBorderListener() {
+            public void onSizeChanged(WorldBorder worldborder, double d0) {
+                getServer().getHandle().sendAll(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.SET_SIZE), worldborder.world);
+            }
 
-    public World func_175643_b()
+            public void onTransitionStarted(WorldBorder worldborder, double d0, double d1, long i) {
+                getServer().getHandle().sendAll(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.LERP_SIZE), worldborder.world);
+            }
+
+            public void onCenterChanged(WorldBorder worldborder, double d0, double d1) {
+                getServer().getHandle().sendAll(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.SET_CENTER), worldborder.world);
+            }
+
+            public void onWarningTimeChanged(WorldBorder worldborder, int i) {
+                getServer().getHandle().sendAll(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.SET_WARNING_TIME), worldborder.world);
+            }
+
+            public void onWarningDistanceChanged(WorldBorder worldborder, int i) {
+                getServer().getHandle().sendAll(new SPacketWorldBorder(worldborder, SPacketWorldBorder.Action.SET_WARNING_BLOCKS), worldborder.world);
+            }
+
+            public void onDamageAmountChanged(WorldBorder worldborder, double d0) {}
+
+            public void onDamageBufferChanged(WorldBorder worldborder, double d0) {}
+        });
+        this.getServer().addWorld(this.world);
+        // CraftBukkit end
+    }
+
+
+    public long ticksPerAnimalSpawns;
+    public long ticksPerMonsterSpawns;
+    public boolean populating;
+    private int tickPosition;
+
+    public CraftWorld getWorld() {
+        return this.world;
+    }
+
+    public CraftServer getServer() {
+        return (CraftServer) Bukkit.getServer();
+    }
+
+    public Chunk getChunkIfLoaded(int x, int z) {
+        return ((ChunkProviderServer) this.chunkProvider).getChunkIfLoaded(x, z);
+    }
+    //craftbukkit end
+    public World init()
     {
         return this;
     }
 
-    public Biome func_180494_b(final BlockPos p_180494_1_)
+    public Biome getBiome(final BlockPos pos)
     {
-        if (this.func_175667_e(p_180494_1_))
+        return this.provider.getBiomeForCoords(pos);
+    }
+
+    public Biome getBiomeForCoordsBody(final BlockPos pos)
+    {
+        if (this.isBlockLoaded(pos))
         {
-            Chunk chunk = this.func_175726_f(p_180494_1_);
+            Chunk chunk = this.getChunkFromBlockCoords(pos);
 
             try
             {
-                return chunk.func_177411_a(p_180494_1_, this.field_73011_w.func_177499_m());
+                return chunk.getBiome(pos, this.provider.getBiomeProvider());
             }
             catch (Throwable throwable)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Getting biome");
-                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Coordinates of biome request");
-                crashreportcategory.func_189529_a("Location", new ICrashReportDetail<String>()
+                CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Getting biome");
+                CrashReportCategory crashreportcategory = crashreport.makeCategory("Coordinates of biome request");
+                crashreportcategory.setDetail("Location", new ICrashReportDetail<String>()
                 {
                     public String call() throws Exception
                     {
-                        return CrashReportCategory.func_180522_a(p_180494_1_);
+                        return CrashReportCategory.getCoordinateInfo(pos);
                     }
                 });
                 throw new ReportedException(crashreport);
@@ -149,115 +289,115 @@
         }
         else
         {
-            return this.field_73011_w.func_177499_m().func_180300_a(p_180494_1_, Biomes.field_76772_c);
+            return this.provider.getBiomeProvider().getBiome(pos, Biomes.PLAINS);
         }
     }
 
-    public BiomeProvider func_72959_q()
+    public BiomeProvider getBiomeProvider()
     {
-        return this.field_73011_w.func_177499_m();
+        return this.provider.getBiomeProvider();
     }
 
-    protected abstract IChunkProvider func_72970_h();
+    protected abstract IChunkProvider createChunkProvider();
 
-    public void func_72963_a(WorldSettings p_72963_1_)
+    public void initialize(WorldSettings settings)
     {
-        this.field_72986_A.func_76091_d(true);
+        this.worldInfo.setServerInitialized(true);
     }
 
     @Nullable
-    public MinecraftServer func_73046_m()
+    public MinecraftServer getMinecraftServer()
     {
         return null;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_72974_f()
+    public void setInitialSpawnLocation()
     {
-        this.func_175652_B(new BlockPos(8, 64, 8));
+        this.setSpawnPoint(new BlockPos(8, 64, 8));
     }
 
-    public IBlockState func_184141_c(BlockPos p_184141_1_)
+    public IBlockState getGroundAboveSeaLevel(BlockPos pos)
     {
         BlockPos blockpos;
 
-        for (blockpos = new BlockPos(p_184141_1_.func_177958_n(), this.func_181545_F(), p_184141_1_.func_177952_p()); !this.func_175623_d(blockpos.func_177984_a()); blockpos = blockpos.func_177984_a())
+        for (blockpos = new BlockPos(pos.getX(), this.getSeaLevel(), pos.getZ()); !this.isAirBlock(blockpos.up()); blockpos = blockpos.up())
         {
             ;
         }
 
-        return this.func_180495_p(blockpos);
+        return this.getBlockState(blockpos);
     }
 
-    public boolean func_175701_a(BlockPos p_175701_1_)
+    public boolean isValid(BlockPos pos)
     {
-        return !this.func_189509_E(p_175701_1_) && p_175701_1_.func_177958_n() >= -30000000 && p_175701_1_.func_177952_p() >= -30000000 && p_175701_1_.func_177958_n() < 30000000 && p_175701_1_.func_177952_p() < 30000000;
+        return !this.isOutsideBuildHeight(pos) && pos.getX() >= -30000000 && pos.getZ() >= -30000000 && pos.getX() < 30000000 && pos.getZ() < 30000000;
     }
 
-    public boolean func_189509_E(BlockPos p_189509_1_)
+    public boolean isOutsideBuildHeight(BlockPos pos)
     {
-        return p_189509_1_.func_177956_o() < 0 || p_189509_1_.func_177956_o() >= 256;
+        return pos.getY() < 0 || pos.getY() >= 256;
     }
 
-    public boolean func_175623_d(BlockPos p_175623_1_)
+    public boolean isAirBlock(BlockPos pos)
     {
-        return this.func_180495_p(p_175623_1_).func_185904_a() == Material.field_151579_a;
+        return this.getBlockState(pos).getBlock().isAir(this.getBlockState(pos), this, pos);
     }
 
-    public boolean func_175667_e(BlockPos p_175667_1_)
+    public boolean isBlockLoaded(BlockPos pos)
     {
-        return this.func_175668_a(p_175667_1_, true);
+        return this.isBlockLoaded(pos, true);
     }
 
-    public boolean func_175668_a(BlockPos p_175668_1_, boolean p_175668_2_)
+    public boolean isBlockLoaded(BlockPos pos, boolean allowEmpty)
     {
-        return this.func_175680_a(p_175668_1_.func_177958_n() >> 4, p_175668_1_.func_177952_p() >> 4, p_175668_2_);
+        return this.isChunkLoaded(pos.getX() >> 4, pos.getZ() >> 4, allowEmpty);
     }
 
-    public boolean func_175697_a(BlockPos p_175697_1_, int p_175697_2_)
+    public boolean isAreaLoaded(BlockPos center, int radius)
     {
-        return this.func_175648_a(p_175697_1_, p_175697_2_, true);
+        return this.isAreaLoaded(center, radius, true);
     }
 
-    public boolean func_175648_a(BlockPos p_175648_1_, int p_175648_2_, boolean p_175648_3_)
+    public boolean isAreaLoaded(BlockPos center, int radius, boolean allowEmpty)
     {
-        return this.func_175663_a(p_175648_1_.func_177958_n() - p_175648_2_, p_175648_1_.func_177956_o() - p_175648_2_, p_175648_1_.func_177952_p() - p_175648_2_, p_175648_1_.func_177958_n() + p_175648_2_, p_175648_1_.func_177956_o() + p_175648_2_, p_175648_1_.func_177952_p() + p_175648_2_, p_175648_3_);
+        return this.isAreaLoaded(center.getX() - radius, center.getY() - radius, center.getZ() - radius, center.getX() + radius, center.getY() + radius, center.getZ() + radius, allowEmpty);
     }
 
-    public boolean func_175707_a(BlockPos p_175707_1_, BlockPos p_175707_2_)
+    public boolean isAreaLoaded(BlockPos from, BlockPos to)
     {
-        return this.func_175706_a(p_175707_1_, p_175707_2_, true);
+        return this.isAreaLoaded(from, to, true);
     }
 
-    public boolean func_175706_a(BlockPos p_175706_1_, BlockPos p_175706_2_, boolean p_175706_3_)
+    public boolean isAreaLoaded(BlockPos from, BlockPos to, boolean allowEmpty)
     {
-        return this.func_175663_a(p_175706_1_.func_177958_n(), p_175706_1_.func_177956_o(), p_175706_1_.func_177952_p(), p_175706_2_.func_177958_n(), p_175706_2_.func_177956_o(), p_175706_2_.func_177952_p(), p_175706_3_);
+        return this.isAreaLoaded(from.getX(), from.getY(), from.getZ(), to.getX(), to.getY(), to.getZ(), allowEmpty);
     }
 
-    public boolean func_175711_a(StructureBoundingBox p_175711_1_)
+    public boolean isAreaLoaded(StructureBoundingBox box)
     {
-        return this.func_175639_b(p_175711_1_, true);
+        return this.isAreaLoaded(box, true);
     }
 
-    public boolean func_175639_b(StructureBoundingBox p_175639_1_, boolean p_175639_2_)
+    public boolean isAreaLoaded(StructureBoundingBox box, boolean allowEmpty)
     {
-        return this.func_175663_a(p_175639_1_.field_78897_a, p_175639_1_.field_78895_b, p_175639_1_.field_78896_c, p_175639_1_.field_78893_d, p_175639_1_.field_78894_e, p_175639_1_.field_78892_f, p_175639_2_);
+        return this.isAreaLoaded(box.minX, box.minY, box.minZ, box.maxX, box.maxY, box.maxZ, allowEmpty);
     }
 
-    private boolean func_175663_a(int p_175663_1_, int p_175663_2_, int p_175663_3_, int p_175663_4_, int p_175663_5_, int p_175663_6_, boolean p_175663_7_)
+    private boolean isAreaLoaded(int xStart, int yStart, int zStart, int xEnd, int yEnd, int zEnd, boolean allowEmpty)
     {
-        if (p_175663_5_ >= 0 && p_175663_2_ < 256)
+        if (yEnd >= 0 && yStart < 256)
         {
-            p_175663_1_ = p_175663_1_ >> 4;
-            p_175663_3_ = p_175663_3_ >> 4;
-            p_175663_4_ = p_175663_4_ >> 4;
-            p_175663_6_ = p_175663_6_ >> 4;
+            xStart = xStart >> 4;
+            zStart = zStart >> 4;
+            xEnd = xEnd >> 4;
+            zEnd = zEnd >> 4;
 
-            for (int i = p_175663_1_; i <= p_175663_4_; ++i)
+            for (int i = xStart; i <= xEnd; ++i)
             {
-                for (int j = p_175663_3_; j <= p_175663_6_; ++j)
+                for (int j = zStart; j <= zEnd; ++j)
                 {
-                    if (!this.func_175680_a(i, j, p_175663_7_))
+                    if (!this.isChunkLoaded(i, j, allowEmpty))
                     {
                         return false;
                     }
@@ -272,317 +412,349 @@
         }
     }
 
-    protected abstract boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_);
+    public abstract boolean isChunkLoaded(int x, int z, boolean allowEmpty);
 
-    public Chunk func_175726_f(BlockPos p_175726_1_)
+    public Chunk getChunkFromBlockCoords(BlockPos pos)
     {
-        return this.func_72964_e(p_175726_1_.func_177958_n() >> 4, p_175726_1_.func_177952_p() >> 4);
+        return this.getChunkFromChunkCoords(pos.getX() >> 4, pos.getZ() >> 4);
     }
 
-    public Chunk func_72964_e(int p_72964_1_, int p_72964_2_)
+    public Chunk getChunkFromChunkCoords(int chunkX, int chunkZ)
     {
-        return this.field_73020_y.func_186025_d(p_72964_1_, p_72964_2_);
+        return this.chunkProvider.provideChunk(chunkX, chunkZ);
     }
 
-    public boolean func_190526_b(int p_190526_1_, int p_190526_2_)
+    public boolean isChunkGeneratedAt(int x, int z)
     {
-        return this.func_175680_a(p_190526_1_, p_190526_2_, false) ? true : this.field_73020_y.func_191062_e(p_190526_1_, p_190526_2_);
+        return this.isChunkLoaded(x, z, false) ? true : this.chunkProvider.isChunkGeneratedAt(x, z);
     }
 
-    public boolean func_180501_a(BlockPos p_180501_1_, IBlockState p_180501_2_, int p_180501_3_)
+    public boolean setBlockState(BlockPos pos, IBlockState newState, int flags)
     {
-        if (this.func_189509_E(p_180501_1_))
+        if (this.isOutsideBuildHeight(pos))
         {
             return false;
         }
-        else if (!this.field_72995_K && this.field_72986_A.func_76067_t() == WorldType.field_180272_g)
+        else if (!this.isRemote && this.worldInfo.getTerrainType() == WorldType.DEBUG_WORLD)
         {
             return false;
         }
         else
         {
-            Chunk chunk = this.func_175726_f(p_180501_1_);
-            Block block = p_180501_2_.func_177230_c();
-            IBlockState iblockstate = chunk.func_177436_a(p_180501_1_, p_180501_2_);
+            Chunk chunk = this.getChunkFromBlockCoords(pos);
 
+            BlockSnapshot blockSnapshot = null;
+            if (this.captureBlockSnapshots && !this.isRemote)
+            {
+                blockSnapshot = BlockSnapshot.getBlockSnapshot(this, pos, flags);
+                this.capturedBlockSnapshots.add(blockSnapshot);
+            }
+            IBlockState oldState = getBlockState(pos);
+            int oldLight = oldState.getLightValue(this, pos);
+            int oldOpacity = oldState.getLightOpacity(this, pos);
+
+            IBlockState iblockstate = chunk.setBlockState(pos, newState);
+
             if (iblockstate == null)
             {
+                if (blockSnapshot != null) this.capturedBlockSnapshots.remove(blockSnapshot);
                 return false;
             }
             else
             {
-                if (p_180501_2_.func_185891_c() != iblockstate.func_185891_c() || p_180501_2_.func_185906_d() != iblockstate.func_185906_d())
+                if (newState.getLightOpacity(this, pos) != oldOpacity || newState.getLightValue(this, pos) != oldLight)
                 {
-                    this.field_72984_F.func_76320_a("checkLight");
-                    this.func_175664_x(p_180501_1_);
-                    this.field_72984_F.func_76319_b();
+                    this.theProfiler.startSection("checkLight");
+                    this.checkLight(pos);
+                    this.theProfiler.endSection();
                 }
 
-                if ((p_180501_3_ & 2) != 0 && (!this.field_72995_K || (p_180501_3_ & 4) == 0) && chunk.func_150802_k())
+                if (blockSnapshot == null) // Don't notify clients or update physics while capturing blockstates
                 {
-                    this.func_184138_a(p_180501_1_, iblockstate, p_180501_2_, p_180501_3_);
+                    this.markAndNotifyBlock(pos, chunk, iblockstate, newState, flags);
                 }
+                return true;
+            }
+        }
+    }
 
-                if (!this.field_72995_K && (p_180501_3_ & 1) != 0)
+    // Split off from original setBlockState(BlockPos, IBlockState, int) method in order to directly send client and physic updates
+    public void markAndNotifyBlock(BlockPos pos, @Nullable Chunk chunk, IBlockState iblockstate, IBlockState newState, int flags)
+    {
+        Block block = newState.getBlock();
+        {
+            {
+                if ((flags & 2) != 0 && (!this.isRemote || (flags & 4) == 0) && (chunk == null || chunk.isPopulated()))
                 {
-                    this.func_175722_b(p_180501_1_, iblockstate.func_177230_c(), true);
+                    this.notifyBlockUpdate(pos, iblockstate, newState, flags);
+                }
 
-                    if (p_180501_2_.func_185912_n())
+                if (!this.isRemote && (flags & 1) != 0)
+                {
+                    this.notifyNeighborsRespectDebug(pos, iblockstate.getBlock(), true);
+
+                    if (newState.hasComparatorInputOverride())
                     {
-                        this.func_175666_e(p_180501_1_, block);
+                        this.updateComparatorOutputLevel(pos, block);
                     }
                 }
-                else if (!this.field_72995_K && (p_180501_3_ & 16) == 0)
+                else if (!this.isRemote && (flags & 16) == 0)
                 {
-                    this.func_190522_c(p_180501_1_, block);
+                    this.updateObservingBlocksAt(pos, block);
                 }
-
-                return true;
             }
         }
     }
 
-    public boolean func_175698_g(BlockPos p_175698_1_)
+    public boolean setBlockToAir(BlockPos pos)
     {
-        return this.func_180501_a(p_175698_1_, Blocks.field_150350_a.func_176223_P(), 3);
+        return this.setBlockState(pos, Blocks.AIR.getDefaultState(), 3);
     }
 
-    public boolean func_175655_b(BlockPos p_175655_1_, boolean p_175655_2_)
+    public boolean destroyBlock(BlockPos pos, boolean dropBlock)
     {
-        IBlockState iblockstate = this.func_180495_p(p_175655_1_);
-        Block block = iblockstate.func_177230_c();
+        IBlockState iblockstate = this.getBlockState(pos);
+        Block block = iblockstate.getBlock();
 
-        if (iblockstate.func_185904_a() == Material.field_151579_a)
+        if (block.isAir(iblockstate, this, pos))
         {
             return false;
         }
         else
         {
-            this.func_175718_b(2001, p_175655_1_, Block.func_176210_f(iblockstate));
+            this.playEvent(2001, pos, Block.getStateId(iblockstate));
 
-            if (p_175655_2_)
+            if (dropBlock)
             {
-                block.func_176226_b(this, p_175655_1_, iblockstate, 0);
+                block.dropBlockAsItem(this, pos, iblockstate, 0);
             }
 
-            return this.func_180501_a(p_175655_1_, Blocks.field_150350_a.func_176223_P(), 3);
+            return this.setBlockState(pos, Blocks.AIR.getDefaultState(), 3);
         }
     }
 
-    public boolean func_175656_a(BlockPos p_175656_1_, IBlockState p_175656_2_)
+    public boolean setBlockState(BlockPos pos, IBlockState state)
     {
-        return this.func_180501_a(p_175656_1_, p_175656_2_, 3);
+        return this.setBlockState(pos, state, 3);
     }
 
-    public void func_184138_a(BlockPos p_184138_1_, IBlockState p_184138_2_, IBlockState p_184138_3_, int p_184138_4_)
+    public void notifyBlockUpdate(BlockPos pos, IBlockState oldState, IBlockState newState, int flags)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_184376_a(this, p_184138_1_, p_184138_2_, p_184138_3_, p_184138_4_);
+            ((IWorldEventListener)this.eventListeners.get(i)).notifyBlockUpdate(this, pos, oldState, newState, flags);
         }
     }
 
-    public void func_175722_b(BlockPos p_175722_1_, Block p_175722_2_, boolean p_175722_3_)
+    public void notifyNeighborsRespectDebug(BlockPos pos, Block blockType, boolean p_175722_3_)
     {
-        if (this.field_72986_A.func_76067_t() != WorldType.field_180272_g)
+        if (this.worldInfo.getTerrainType() != WorldType.DEBUG_WORLD)
         {
-            this.func_175685_c(p_175722_1_, p_175722_2_, p_175722_3_);
+            this.notifyNeighborsOfStateChange(pos, blockType, p_175722_3_);
         }
     }
 
-    public void func_72975_g(int p_72975_1_, int p_72975_2_, int p_72975_3_, int p_72975_4_)
+    public void markBlocksDirtyVertical(int x1, int z1, int x2, int z2)
     {
-        if (p_72975_3_ > p_72975_4_)
+        if (x2 > z2)
         {
-            int i = p_72975_4_;
-            p_72975_4_ = p_72975_3_;
-            p_72975_3_ = i;
+            int i = z2;
+            z2 = x2;
+            x2 = i;
         }
 
-        if (this.field_73011_w.func_191066_m())
+        if (this.provider.hasSkyLight())
         {
-            for (int j = p_72975_3_; j <= p_72975_4_; ++j)
+            for (int j = x2; j <= z2; ++j)
             {
-                this.func_180500_c(EnumSkyBlock.SKY, new BlockPos(p_72975_1_, j, p_72975_2_));
+                this.checkLightFor(EnumSkyBlock.SKY, new BlockPos(x1, j, z1));
             }
         }
 
-        this.func_147458_c(p_72975_1_, p_72975_3_, p_72975_2_, p_72975_1_, p_72975_4_, p_72975_2_);
+        this.markBlockRangeForRenderUpdate(x1, x2, z1, x1, z2, z1);
     }
 
-    public void func_175704_b(BlockPos p_175704_1_, BlockPos p_175704_2_)
+    public void markBlockRangeForRenderUpdate(BlockPos rangeMin, BlockPos rangeMax)
     {
-        this.func_147458_c(p_175704_1_.func_177958_n(), p_175704_1_.func_177956_o(), p_175704_1_.func_177952_p(), p_175704_2_.func_177958_n(), p_175704_2_.func_177956_o(), p_175704_2_.func_177952_p());
+        this.markBlockRangeForRenderUpdate(rangeMin.getX(), rangeMin.getY(), rangeMin.getZ(), rangeMax.getX(), rangeMax.getY(), rangeMax.getZ());
     }
 
-    public void func_147458_c(int p_147458_1_, int p_147458_2_, int p_147458_3_, int p_147458_4_, int p_147458_5_, int p_147458_6_)
+    public void markBlockRangeForRenderUpdate(int x1, int y1, int z1, int x2, int y2, int z2)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_147585_a(p_147458_1_, p_147458_2_, p_147458_3_, p_147458_4_, p_147458_5_, p_147458_6_);
+            ((IWorldEventListener)this.eventListeners.get(i)).markBlockRangeForRenderUpdate(x1, y1, z1, x2, y2, z2);
         }
     }
 
-    public void func_190522_c(BlockPos p_190522_1_, Block p_190522_2_)
+    public void updateObservingBlocksAt(BlockPos pos, Block blockType)
     {
-        this.func_190529_b(p_190522_1_.func_177976_e(), p_190522_2_, p_190522_1_);
-        this.func_190529_b(p_190522_1_.func_177974_f(), p_190522_2_, p_190522_1_);
-        this.func_190529_b(p_190522_1_.func_177977_b(), p_190522_2_, p_190522_1_);
-        this.func_190529_b(p_190522_1_.func_177984_a(), p_190522_2_, p_190522_1_);
-        this.func_190529_b(p_190522_1_.func_177978_c(), p_190522_2_, p_190522_1_);
-        this.func_190529_b(p_190522_1_.func_177968_d(), p_190522_2_, p_190522_1_);
+        this.observedNeighborChanged(pos.west(), blockType, pos);
+        this.observedNeighborChanged(pos.east(), blockType, pos);
+        this.observedNeighborChanged(pos.down(), blockType, pos);
+        this.observedNeighborChanged(pos.up(), blockType, pos);
+        this.observedNeighborChanged(pos.north(), blockType, pos);
+        this.observedNeighborChanged(pos.south(), blockType, pos);
     }
 
-    public void func_175685_c(BlockPos p_175685_1_, Block p_175685_2_, boolean p_175685_3_)
+    public void notifyNeighborsOfStateChange(BlockPos pos, Block blockType, boolean updateObservers)
     {
-        this.func_190524_a(p_175685_1_.func_177976_e(), p_175685_2_, p_175685_1_);
-        this.func_190524_a(p_175685_1_.func_177974_f(), p_175685_2_, p_175685_1_);
-        this.func_190524_a(p_175685_1_.func_177977_b(), p_175685_2_, p_175685_1_);
-        this.func_190524_a(p_175685_1_.func_177984_a(), p_175685_2_, p_175685_1_);
-        this.func_190524_a(p_175685_1_.func_177978_c(), p_175685_2_, p_175685_1_);
-        this.func_190524_a(p_175685_1_.func_177968_d(), p_175685_2_, p_175685_1_);
+        if(net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(this, pos, this.getBlockState(pos), java.util.EnumSet.allOf(EnumFacing.class), updateObservers).isCanceled())
+            return;
 
-        if (p_175685_3_)
+        this.neighborChanged(pos.west(), blockType, pos);
+        this.neighborChanged(pos.east(), blockType, pos);
+        this.neighborChanged(pos.down(), blockType, pos);
+        this.neighborChanged(pos.up(), blockType, pos);
+        this.neighborChanged(pos.north(), blockType, pos);
+        this.neighborChanged(pos.south(), blockType, pos);
+
+        if (updateObservers)
         {
-            this.func_190522_c(p_175685_1_, p_175685_2_);
+            this.updateObservingBlocksAt(pos, blockType);
         }
     }
 
-    public void func_175695_a(BlockPos p_175695_1_, Block p_175695_2_, EnumFacing p_175695_3_)
+    public void notifyNeighborsOfStateExcept(BlockPos pos, Block blockType, EnumFacing skipSide)
     {
-        if (p_175695_3_ != EnumFacing.WEST)
+        java.util.EnumSet<EnumFacing> directions = java.util.EnumSet.allOf(EnumFacing.class);
+        directions.remove(skipSide);
+        if(net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(this, pos, this.getBlockState(pos), directions, false).isCanceled())
+            return;
+
+        if (skipSide != EnumFacing.WEST)
         {
-            this.func_190524_a(p_175695_1_.func_177976_e(), p_175695_2_, p_175695_1_);
+            this.neighborChanged(pos.west(), blockType, pos);
         }
 
-        if (p_175695_3_ != EnumFacing.EAST)
+        if (skipSide != EnumFacing.EAST)
         {
-            this.func_190524_a(p_175695_1_.func_177974_f(), p_175695_2_, p_175695_1_);
+            this.neighborChanged(pos.east(), blockType, pos);
         }
 
-        if (p_175695_3_ != EnumFacing.DOWN)
+        if (skipSide != EnumFacing.DOWN)
         {
-            this.func_190524_a(p_175695_1_.func_177977_b(), p_175695_2_, p_175695_1_);
+            this.neighborChanged(pos.down(), blockType, pos);
         }
 
-        if (p_175695_3_ != EnumFacing.UP)
+        if (skipSide != EnumFacing.UP)
         {
-            this.func_190524_a(p_175695_1_.func_177984_a(), p_175695_2_, p_175695_1_);
+            this.neighborChanged(pos.up(), blockType, pos);
         }
 
-        if (p_175695_3_ != EnumFacing.NORTH)
+        if (skipSide != EnumFacing.NORTH)
         {
-            this.func_190524_a(p_175695_1_.func_177978_c(), p_175695_2_, p_175695_1_);
+            this.neighborChanged(pos.north(), blockType, pos);
         }
 
-        if (p_175695_3_ != EnumFacing.SOUTH)
+        if (skipSide != EnumFacing.SOUTH)
         {
-            this.func_190524_a(p_175695_1_.func_177968_d(), p_175695_2_, p_175695_1_);
+            this.neighborChanged(pos.south(), blockType, pos);
         }
     }
 
-    public void func_190524_a(BlockPos p_190524_1_, final Block p_190524_2_, BlockPos p_190524_3_)
+    public void neighborChanged(BlockPos pos, final Block p_190524_2_, BlockPos p_190524_3_)
     {
-        if (!this.field_72995_K)
+        if (!this.isRemote)
         {
-            IBlockState iblockstate = this.func_180495_p(p_190524_1_);
+            IBlockState iblockstate = this.getBlockState(pos);
 
             try
             {
-                iblockstate.func_189546_a(this, p_190524_1_, p_190524_2_, p_190524_3_);
+                iblockstate.neighborChanged(this, pos, p_190524_2_, p_190524_3_);
             }
             catch (Throwable throwable)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Exception while updating neighbours");
-                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being updated");
-                crashreportcategory.func_189529_a("Source block type", new ICrashReportDetail<String>()
+                CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Exception while updating neighbours");
+                CrashReportCategory crashreportcategory = crashreport.makeCategory("Block being updated");
+                crashreportcategory.setDetail("Source block type", new ICrashReportDetail<String>()
                 {
                     public String call() throws Exception
                     {
                         try
                         {
-                            return String.format("ID #%d (%s // %s)", new Object[] {Integer.valueOf(Block.func_149682_b(p_190524_2_)), p_190524_2_.func_149739_a(), p_190524_2_.getClass().getCanonicalName()});
+                            return String.format("ID #%d (%s // %s)", new Object[] {Integer.valueOf(Block.getIdFromBlock(p_190524_2_)), p_190524_2_.getUnlocalizedName(), p_190524_2_.getClass().getCanonicalName()});
                         }
                         catch (Throwable var2)
                         {
-                            return "ID #" + Block.func_149682_b(p_190524_2_);
+                            return "ID #" + Block.getIdFromBlock(p_190524_2_);
                         }
                     }
                 });
-                CrashReportCategory.func_175750_a(crashreportcategory, p_190524_1_, iblockstate);
+                CrashReportCategory.addBlockInfo(crashreportcategory, pos, iblockstate);
                 throw new ReportedException(crashreport);
             }
         }
     }
 
-    public void func_190529_b(BlockPos p_190529_1_, final Block p_190529_2_, BlockPos p_190529_3_)
+    public void observedNeighborChanged(BlockPos pos, final Block p_190529_2_, BlockPos p_190529_3_)
     {
-        if (!this.field_72995_K)
+        if (!this.isRemote)
         {
-            IBlockState iblockstate = this.func_180495_p(p_190529_1_);
+            IBlockState iblockstate = this.getBlockState(pos);
 
-            if (iblockstate.func_177230_c() == Blocks.field_190976_dk)
+            if (true)
             {
                 try
                 {
-                    ((BlockObserver)iblockstate.func_177230_c()).func_190962_b(iblockstate, this, p_190529_1_, p_190529_2_, p_190529_3_);
+                    iblockstate.getBlock().observedNeighborChange(iblockstate, this, pos, p_190529_2_, p_190529_3_);
                 }
                 catch (Throwable throwable)
                 {
-                    CrashReport crashreport = CrashReport.func_85055_a(throwable, "Exception while updating neighbours");
-                    CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being updated");
-                    crashreportcategory.func_189529_a("Source block type", new ICrashReportDetail<String>()
+                    CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Exception while updating neighbours");
+                    CrashReportCategory crashreportcategory = crashreport.makeCategory("Block being updated");
+                    crashreportcategory.setDetail("Source block type", new ICrashReportDetail<String>()
                     {
                         public String call() throws Exception
                         {
                             try
                             {
-                                return String.format("ID #%d (%s // %s)", new Object[] {Integer.valueOf(Block.func_149682_b(p_190529_2_)), p_190529_2_.func_149739_a(), p_190529_2_.getClass().getCanonicalName()});
+                                return String.format("ID #%d (%s // %s)", new Object[] {Integer.valueOf(Block.getIdFromBlock(p_190529_2_)), p_190529_2_.getUnlocalizedName(), p_190529_2_.getClass().getCanonicalName()});
                             }
                             catch (Throwable var2)
                             {
-                                return "ID #" + Block.func_149682_b(p_190529_2_);
+                                return "ID #" + Block.getIdFromBlock(p_190529_2_);
                             }
                         }
                     });
-                    CrashReportCategory.func_175750_a(crashreportcategory, p_190529_1_, iblockstate);
+                    CrashReportCategory.addBlockInfo(crashreportcategory, pos, iblockstate);
                     throw new ReportedException(crashreport);
                 }
             }
         }
     }
 
-    public boolean func_175691_a(BlockPos p_175691_1_, Block p_175691_2_)
+    public boolean isBlockTickPending(BlockPos pos, Block blockType)
     {
         return false;
     }
 
-    public boolean func_175678_i(BlockPos p_175678_1_)
+    public boolean canSeeSky(BlockPos pos)
     {
-        return this.func_175726_f(p_175678_1_).func_177444_d(p_175678_1_);
+        return this.getChunkFromBlockCoords(pos).canSeeSky(pos);
     }
 
-    public boolean func_175710_j(BlockPos p_175710_1_)
+    public boolean canBlockSeeSky(BlockPos pos)
     {
-        if (p_175710_1_.func_177956_o() >= this.func_181545_F())
+        if (pos.getY() >= this.getSeaLevel())
         {
-            return this.func_175678_i(p_175710_1_);
+            return this.canSeeSky(pos);
         }
         else
         {
-            BlockPos blockpos = new BlockPos(p_175710_1_.func_177958_n(), this.func_181545_F(), p_175710_1_.func_177952_p());
+            BlockPos blockpos = new BlockPos(pos.getX(), this.getSeaLevel(), pos.getZ());
 
-            if (!this.func_175678_i(blockpos))
+            if (!this.canSeeSky(blockpos))
             {
                 return false;
             }
             else
             {
-                for (blockpos = blockpos.func_177977_b(); blockpos.func_177956_o() > p_175710_1_.func_177956_o(); blockpos = blockpos.func_177977_b())
+                for (blockpos = blockpos.down(); blockpos.getY() > pos.getY(); blockpos = blockpos.down())
                 {
-                    IBlockState iblockstate = this.func_180495_p(blockpos);
+                    IBlockState iblockstate = this.getBlockState(blockpos);
 
-                    if (iblockstate.func_185891_c() > 0 && !iblockstate.func_185904_a().func_76224_d())
+                    if (iblockstate.getBlock().getLightOpacity(iblockstate, this, blockpos) > 0 && !iblockstate.getMaterial().isLiquid())
                     {
                         return false;
                     }
@@ -593,39 +765,39 @@
         }
     }
 
-    public int func_175699_k(BlockPos p_175699_1_)
+    public int getLight(BlockPos pos)
     {
-        if (p_175699_1_.func_177956_o() < 0)
+        if (pos.getY() < 0)
         {
             return 0;
         }
         else
         {
-            if (p_175699_1_.func_177956_o() >= 256)
+            if (pos.getY() >= 256)
             {
-                p_175699_1_ = new BlockPos(p_175699_1_.func_177958_n(), 255, p_175699_1_.func_177952_p());
+                pos = new BlockPos(pos.getX(), 255, pos.getZ());
             }
 
-            return this.func_175726_f(p_175699_1_).func_177443_a(p_175699_1_, 0);
+            return this.getChunkFromBlockCoords(pos).getLightSubtracted(pos, 0);
         }
     }
 
-    public int func_175671_l(BlockPos p_175671_1_)
+    public int getLightFromNeighbors(BlockPos pos)
     {
-        return this.func_175721_c(p_175671_1_, true);
+        return this.getLight(pos, true);
     }
 
-    public int func_175721_c(BlockPos p_175721_1_, boolean p_175721_2_)
+    public int getLight(BlockPos pos, boolean checkNeighbors)
     {
-        if (p_175721_1_.func_177958_n() >= -30000000 && p_175721_1_.func_177952_p() >= -30000000 && p_175721_1_.func_177958_n() < 30000000 && p_175721_1_.func_177952_p() < 30000000)
+        if (pos.getX() >= -30000000 && pos.getZ() >= -30000000 && pos.getX() < 30000000 && pos.getZ() < 30000000)
         {
-            if (p_175721_2_ && this.func_180495_p(p_175721_1_).func_185916_f())
+            if (checkNeighbors && this.getBlockState(pos).useNeighborBrightness())
             {
-                int i1 = this.func_175721_c(p_175721_1_.func_177984_a(), false);
-                int i = this.func_175721_c(p_175721_1_.func_177974_f(), false);
-                int j = this.func_175721_c(p_175721_1_.func_177976_e(), false);
-                int k = this.func_175721_c(p_175721_1_.func_177968_d(), false);
-                int l = this.func_175721_c(p_175721_1_.func_177978_c(), false);
+                int i1 = this.getLight(pos.up(), false);
+                int i = this.getLight(pos.east(), false);
+                int j = this.getLight(pos.west(), false);
+                int k = this.getLight(pos.south(), false);
+                int l = this.getLight(pos.north(), false);
 
                 if (i > i1)
                 {
@@ -649,19 +821,19 @@
 
                 return i1;
             }
-            else if (p_175721_1_.func_177956_o() < 0)
+            else if (pos.getY() < 0)
             {
                 return 0;
             }
             else
             {
-                if (p_175721_1_.func_177956_o() >= 256)
+                if (pos.getY() >= 256)
                 {
-                    p_175721_1_ = new BlockPos(p_175721_1_.func_177958_n(), 255, p_175721_1_.func_177952_p());
+                    pos = new BlockPos(pos.getX(), 255, pos.getZ());
                 }
 
-                Chunk chunk = this.func_175726_f(p_175721_1_);
-                return chunk.func_177443_a(p_175721_1_, this.field_73008_k);
+                Chunk chunk = this.getChunkFromBlockCoords(pos);
+                return chunk.getLightSubtracted(pos, this.skylightSubtracted);
             }
         }
         else
@@ -670,20 +842,20 @@
         }
     }
 
-    public BlockPos func_175645_m(BlockPos p_175645_1_)
+    public BlockPos getHeight(BlockPos pos)
     {
-        return new BlockPos(p_175645_1_.func_177958_n(), this.func_189649_b(p_175645_1_.func_177958_n(), p_175645_1_.func_177952_p()), p_175645_1_.func_177952_p());
+        return new BlockPos(pos.getX(), this.getHeight(pos.getX(), pos.getZ()), pos.getZ());
     }
 
-    public int func_189649_b(int p_189649_1_, int p_189649_2_)
+    public int getHeight(int x, int z)
     {
         int i;
 
-        if (p_189649_1_ >= -30000000 && p_189649_2_ >= -30000000 && p_189649_1_ < 30000000 && p_189649_2_ < 30000000)
+        if (x >= -30000000 && z >= -30000000 && x < 30000000 && z < 30000000)
         {
-            if (this.func_175680_a(p_189649_1_ >> 4, p_189649_2_ >> 4, true))
+            if (this.isChunkLoaded(x >> 4, z >> 4, true))
             {
-                i = this.func_72964_e(p_189649_1_ >> 4, p_189649_2_ >> 4).func_76611_b(p_189649_1_ & 15, p_189649_2_ & 15);
+                i = this.getChunkFromChunkCoords(x >> 4, z >> 4).getHeightValue(x & 15, z & 15);
             }
             else
             {
@@ -692,62 +864,62 @@
         }
         else
         {
-            i = this.func_181545_F() + 1;
+            i = this.getSeaLevel() + 1;
         }
 
         return i;
     }
 
     @Deprecated
-    public int func_82734_g(int p_82734_1_, int p_82734_2_)
+    public int getChunksLowestHorizon(int x, int z)
     {
-        if (p_82734_1_ >= -30000000 && p_82734_2_ >= -30000000 && p_82734_1_ < 30000000 && p_82734_2_ < 30000000)
+        if (x >= -30000000 && z >= -30000000 && x < 30000000 && z < 30000000)
         {
-            if (!this.func_175680_a(p_82734_1_ >> 4, p_82734_2_ >> 4, true))
+            if (!this.isChunkLoaded(x >> 4, z >> 4, true))
             {
                 return 0;
             }
             else
             {
-                Chunk chunk = this.func_72964_e(p_82734_1_ >> 4, p_82734_2_ >> 4);
-                return chunk.func_177442_v();
+                Chunk chunk = this.getChunkFromChunkCoords(x >> 4, z >> 4);
+                return chunk.getLowestHeight();
             }
         }
         else
         {
-            return this.func_181545_F() + 1;
+            return this.getSeaLevel() + 1;
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_175705_a(EnumSkyBlock p_175705_1_, BlockPos p_175705_2_)
+    public int getLightFromNeighborsFor(EnumSkyBlock type, BlockPos pos)
     {
-        if (!this.field_73011_w.func_191066_m() && p_175705_1_ == EnumSkyBlock.SKY)
+        if (!this.provider.hasSkyLight() && type == EnumSkyBlock.SKY)
         {
             return 0;
         }
         else
         {
-            if (p_175705_2_.func_177956_o() < 0)
+            if (pos.getY() < 0)
             {
-                p_175705_2_ = new BlockPos(p_175705_2_.func_177958_n(), 0, p_175705_2_.func_177952_p());
+                pos = new BlockPos(pos.getX(), 0, pos.getZ());
             }
 
-            if (!this.func_175701_a(p_175705_2_))
+            if (!this.isValid(pos))
             {
-                return p_175705_1_.field_77198_c;
+                return type.defaultLightValue;
             }
-            else if (!this.func_175667_e(p_175705_2_))
+            else if (!this.isBlockLoaded(pos))
             {
-                return p_175705_1_.field_77198_c;
+                return type.defaultLightValue;
             }
-            else if (this.func_180495_p(p_175705_2_).func_185916_f())
+            else if (this.getBlockState(pos).useNeighborBrightness())
             {
-                int i1 = this.func_175642_b(p_175705_1_, p_175705_2_.func_177984_a());
-                int i = this.func_175642_b(p_175705_1_, p_175705_2_.func_177974_f());
-                int j = this.func_175642_b(p_175705_1_, p_175705_2_.func_177976_e());
-                int k = this.func_175642_b(p_175705_1_, p_175705_2_.func_177968_d());
-                int l = this.func_175642_b(p_175705_1_, p_175705_2_.func_177978_c());
+                int i1 = this.getLightFor(type, pos.up());
+                int i = this.getLightFor(type, pos.east());
+                int j = this.getLightFor(type, pos.west());
+                int k = this.getLightFor(type, pos.south());
+                int l = this.getLightFor(type, pos.north());
 
                 if (i > i1)
                 {
@@ -773,124 +945,124 @@
             }
             else
             {
-                Chunk chunk = this.func_175726_f(p_175705_2_);
-                return chunk.func_177413_a(p_175705_1_, p_175705_2_);
+                Chunk chunk = this.getChunkFromBlockCoords(pos);
+                return chunk.getLightFor(type, pos);
             }
         }
     }
 
-    public int func_175642_b(EnumSkyBlock p_175642_1_, BlockPos p_175642_2_)
+    public int getLightFor(EnumSkyBlock type, BlockPos pos)
     {
-        if (p_175642_2_.func_177956_o() < 0)
+        if (pos.getY() < 0)
         {
-            p_175642_2_ = new BlockPos(p_175642_2_.func_177958_n(), 0, p_175642_2_.func_177952_p());
+            pos = new BlockPos(pos.getX(), 0, pos.getZ());
         }
 
-        if (!this.func_175701_a(p_175642_2_))
+        if (!this.isValid(pos))
         {
-            return p_175642_1_.field_77198_c;
+            return type.defaultLightValue;
         }
-        else if (!this.func_175667_e(p_175642_2_))
+        else if (!this.isBlockLoaded(pos))
         {
-            return p_175642_1_.field_77198_c;
+            return type.defaultLightValue;
         }
         else
         {
-            Chunk chunk = this.func_175726_f(p_175642_2_);
-            return chunk.func_177413_a(p_175642_1_, p_175642_2_);
+            Chunk chunk = this.getChunkFromBlockCoords(pos);
+            return chunk.getLightFor(type, pos);
         }
     }
 
-    public void func_175653_a(EnumSkyBlock p_175653_1_, BlockPos p_175653_2_, int p_175653_3_)
+    public void setLightFor(EnumSkyBlock type, BlockPos pos, int lightValue)
     {
-        if (this.func_175701_a(p_175653_2_))
+        if (this.isValid(pos))
         {
-            if (this.func_175667_e(p_175653_2_))
+            if (this.isBlockLoaded(pos))
             {
-                Chunk chunk = this.func_175726_f(p_175653_2_);
-                chunk.func_177431_a(p_175653_1_, p_175653_2_, p_175653_3_);
-                this.func_175679_n(p_175653_2_);
+                Chunk chunk = this.getChunkFromBlockCoords(pos);
+                chunk.setLightFor(type, pos, lightValue);
+                this.notifyLightSet(pos);
             }
         }
     }
 
-    public void func_175679_n(BlockPos p_175679_1_)
+    public void notifyLightSet(BlockPos pos)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_174959_b(p_175679_1_);
+            ((IWorldEventListener)this.eventListeners.get(i)).notifyLightSet(pos);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_175626_b(BlockPos p_175626_1_, int p_175626_2_)
+    public int getCombinedLight(BlockPos pos, int lightValue)
     {
-        int i = this.func_175705_a(EnumSkyBlock.SKY, p_175626_1_);
-        int j = this.func_175705_a(EnumSkyBlock.BLOCK, p_175626_1_);
+        int i = this.getLightFromNeighborsFor(EnumSkyBlock.SKY, pos);
+        int j = this.getLightFromNeighborsFor(EnumSkyBlock.BLOCK, pos);
 
-        if (j < p_175626_2_)
+        if (j < lightValue)
         {
-            j = p_175626_2_;
+            j = lightValue;
         }
 
         return i << 20 | j << 4;
     }
 
-    public float func_175724_o(BlockPos p_175724_1_)
+    public float getLightBrightness(BlockPos pos)
     {
-        return this.field_73011_w.func_177497_p()[this.func_175671_l(p_175724_1_)];
+        return this.provider.getLightBrightnessTable()[this.getLightFromNeighbors(pos)];
     }
 
-    public IBlockState func_180495_p(BlockPos p_180495_1_)
+    public IBlockState getBlockState(BlockPos pos)
     {
-        if (this.func_189509_E(p_180495_1_))
+        if (this.isOutsideBuildHeight(pos))
         {
-            return Blocks.field_150350_a.func_176223_P();
+            return Blocks.AIR.getDefaultState();
         }
         else
         {
-            Chunk chunk = this.func_175726_f(p_180495_1_);
-            return chunk.func_177435_g(p_180495_1_);
+            Chunk chunk = this.getChunkFromBlockCoords(pos);
+            return chunk.getBlockState(pos);
         }
     }
 
-    public boolean func_72935_r()
+    public boolean isDaytime()
     {
-        return this.field_73008_k < 4;
+        return this.provider.isDaytime();
     }
 
     @Nullable
-    public RayTraceResult func_72933_a(Vec3d p_72933_1_, Vec3d p_72933_2_)
+    public RayTraceResult rayTraceBlocks(Vec3d start, Vec3d end)
     {
-        return this.func_147447_a(p_72933_1_, p_72933_2_, false, false, false);
+        return this.rayTraceBlocks(start, end, false, false, false);
     }
 
     @Nullable
-    public RayTraceResult func_72901_a(Vec3d p_72901_1_, Vec3d p_72901_2_, boolean p_72901_3_)
+    public RayTraceResult rayTraceBlocks(Vec3d start, Vec3d end, boolean stopOnLiquid)
     {
-        return this.func_147447_a(p_72901_1_, p_72901_2_, p_72901_3_, false, false);
+        return this.rayTraceBlocks(start, end, stopOnLiquid, false, false);
     }
 
     @Nullable
-    public RayTraceResult func_147447_a(Vec3d p_147447_1_, Vec3d p_147447_2_, boolean p_147447_3_, boolean p_147447_4_, boolean p_147447_5_)
+    public RayTraceResult rayTraceBlocks(Vec3d vec31, Vec3d vec32, boolean stopOnLiquid, boolean ignoreBlockWithoutBoundingBox, boolean returnLastUncollidableBlock)
     {
-        if (!Double.isNaN(p_147447_1_.field_72450_a) && !Double.isNaN(p_147447_1_.field_72448_b) && !Double.isNaN(p_147447_1_.field_72449_c))
+        if (!Double.isNaN(vec31.xCoord) && !Double.isNaN(vec31.yCoord) && !Double.isNaN(vec31.zCoord))
         {
-            if (!Double.isNaN(p_147447_2_.field_72450_a) && !Double.isNaN(p_147447_2_.field_72448_b) && !Double.isNaN(p_147447_2_.field_72449_c))
+            if (!Double.isNaN(vec32.xCoord) && !Double.isNaN(vec32.yCoord) && !Double.isNaN(vec32.zCoord))
             {
-                int i = MathHelper.func_76128_c(p_147447_2_.field_72450_a);
-                int j = MathHelper.func_76128_c(p_147447_2_.field_72448_b);
-                int k = MathHelper.func_76128_c(p_147447_2_.field_72449_c);
-                int l = MathHelper.func_76128_c(p_147447_1_.field_72450_a);
-                int i1 = MathHelper.func_76128_c(p_147447_1_.field_72448_b);
-                int j1 = MathHelper.func_76128_c(p_147447_1_.field_72449_c);
+                int i = MathHelper.floor(vec32.xCoord);
+                int j = MathHelper.floor(vec32.yCoord);
+                int k = MathHelper.floor(vec32.zCoord);
+                int l = MathHelper.floor(vec31.xCoord);
+                int i1 = MathHelper.floor(vec31.yCoord);
+                int j1 = MathHelper.floor(vec31.zCoord);
                 BlockPos blockpos = new BlockPos(l, i1, j1);
-                IBlockState iblockstate = this.func_180495_p(blockpos);
-                Block block = iblockstate.func_177230_c();
+                IBlockState iblockstate = this.getBlockState(blockpos);
+                Block block = iblockstate.getBlock();
 
-                if ((!p_147447_4_ || iblockstate.func_185890_d(this, blockpos) != Block.field_185506_k) && block.func_176209_a(iblockstate, p_147447_3_))
+                if ((!ignoreBlockWithoutBoundingBox || iblockstate.getCollisionBoundingBox(this, blockpos) != Block.NULL_AABB) && block.canCollideCheck(iblockstate, stopOnLiquid))
                 {
-                    RayTraceResult raytraceresult = iblockstate.func_185910_a(this, blockpos, p_147447_1_, p_147447_2_);
+                    RayTraceResult raytraceresult = iblockstate.collisionRayTrace(this, blockpos, vec31, vec32);
 
                     if (raytraceresult != null)
                     {
@@ -903,14 +1075,14 @@
 
                 while (k1-- >= 0)
                 {
-                    if (Double.isNaN(p_147447_1_.field_72450_a) || Double.isNaN(p_147447_1_.field_72448_b) || Double.isNaN(p_147447_1_.field_72449_c))
+                    if (Double.isNaN(vec31.xCoord) || Double.isNaN(vec31.yCoord) || Double.isNaN(vec31.zCoord))
                     {
                         return null;
                     }
 
                     if (l == i && i1 == j && j1 == k)
                     {
-                        return p_147447_5_ ? raytraceresult2 : null;
+                        return returnLastUncollidableBlock ? raytraceresult2 : null;
                     }
 
                     boolean flag2 = true;
@@ -962,23 +1134,23 @@
                     double d3 = 999.0D;
                     double d4 = 999.0D;
                     double d5 = 999.0D;
-                    double d6 = p_147447_2_.field_72450_a - p_147447_1_.field_72450_a;
-                    double d7 = p_147447_2_.field_72448_b - p_147447_1_.field_72448_b;
-                    double d8 = p_147447_2_.field_72449_c - p_147447_1_.field_72449_c;
+                    double d6 = vec32.xCoord - vec31.xCoord;
+                    double d7 = vec32.yCoord - vec31.yCoord;
+                    double d8 = vec32.zCoord - vec31.zCoord;
 
                     if (flag2)
                     {
-                        d3 = (d0 - p_147447_1_.field_72450_a) / d6;
+                        d3 = (d0 - vec31.xCoord) / d6;
                     }
 
                     if (flag)
                     {
-                        d4 = (d1 - p_147447_1_.field_72448_b) / d7;
+                        d4 = (d1 - vec31.yCoord) / d7;
                     }
 
                     if (flag1)
                     {
-                        d5 = (d2 - p_147447_1_.field_72449_c) / d8;
+                        d5 = (d2 - vec31.zCoord) / d8;
                     }
 
                     if (d3 == -0.0D)
@@ -1001,31 +1173,31 @@
                     if (d3 < d4 && d3 < d5)
                     {
                         enumfacing = i > l ? EnumFacing.WEST : EnumFacing.EAST;
-                        p_147447_1_ = new Vec3d(d0, p_147447_1_.field_72448_b + d7 * d3, p_147447_1_.field_72449_c + d8 * d3);
+                        vec31 = new Vec3d(d0, vec31.yCoord + d7 * d3, vec31.zCoord + d8 * d3);
                     }
                     else if (d4 < d5)
                     {
                         enumfacing = j > i1 ? EnumFacing.DOWN : EnumFacing.UP;
-                        p_147447_1_ = new Vec3d(p_147447_1_.field_72450_a + d6 * d4, d1, p_147447_1_.field_72449_c + d8 * d4);
+                        vec31 = new Vec3d(vec31.xCoord + d6 * d4, d1, vec31.zCoord + d8 * d4);
                     }
                     else
                     {
                         enumfacing = k > j1 ? EnumFacing.NORTH : EnumFacing.SOUTH;
-                        p_147447_1_ = new Vec3d(p_147447_1_.field_72450_a + d6 * d5, p_147447_1_.field_72448_b + d7 * d5, d2);
+                        vec31 = new Vec3d(vec31.xCoord + d6 * d5, vec31.yCoord + d7 * d5, d2);
                     }
 
-                    l = MathHelper.func_76128_c(p_147447_1_.field_72450_a) - (enumfacing == EnumFacing.EAST ? 1 : 0);
-                    i1 = MathHelper.func_76128_c(p_147447_1_.field_72448_b) - (enumfacing == EnumFacing.UP ? 1 : 0);
-                    j1 = MathHelper.func_76128_c(p_147447_1_.field_72449_c) - (enumfacing == EnumFacing.SOUTH ? 1 : 0);
+                    l = MathHelper.floor(vec31.xCoord) - (enumfacing == EnumFacing.EAST ? 1 : 0);
+                    i1 = MathHelper.floor(vec31.yCoord) - (enumfacing == EnumFacing.UP ? 1 : 0);
+                    j1 = MathHelper.floor(vec31.zCoord) - (enumfacing == EnumFacing.SOUTH ? 1 : 0);
                     blockpos = new BlockPos(l, i1, j1);
-                    IBlockState iblockstate1 = this.func_180495_p(blockpos);
-                    Block block1 = iblockstate1.func_177230_c();
+                    IBlockState iblockstate1 = this.getBlockState(blockpos);
+                    Block block1 = iblockstate1.getBlock();
 
-                    if (!p_147447_4_ || iblockstate1.func_185904_a() == Material.field_151567_E || iblockstate1.func_185890_d(this, blockpos) != Block.field_185506_k)
+                    if (!ignoreBlockWithoutBoundingBox || iblockstate1.getMaterial() == Material.PORTAL || iblockstate1.getCollisionBoundingBox(this, blockpos) != Block.NULL_AABB)
                     {
-                        if (block1.func_176209_a(iblockstate1, p_147447_3_))
+                        if (block1.canCollideCheck(iblockstate1, stopOnLiquid))
                         {
-                            RayTraceResult raytraceresult1 = iblockstate1.func_185910_a(this, blockpos, p_147447_1_, p_147447_2_);
+                            RayTraceResult raytraceresult1 = iblockstate1.collisionRayTrace(this, blockpos, vec31, vec32);
 
                             if (raytraceresult1 != null)
                             {
@@ -1034,12 +1206,12 @@
                         }
                         else
                         {
-                            raytraceresult2 = new RayTraceResult(RayTraceResult.Type.MISS, p_147447_1_, enumfacing, blockpos);
+                            raytraceresult2 = new RayTraceResult(RayTraceResult.Type.MISS, vec31, enumfacing, blockpos);
                         }
                     }
                 }
 
-                return p_147447_5_ ? raytraceresult2 : null;
+                return returnLastUncollidableBlock ? raytraceresult2 : null;
             }
             else
             {
@@ -1052,174 +1224,243 @@
         }
     }
 
-    public void func_184133_a(@Nullable EntityPlayer p_184133_1_, BlockPos p_184133_2_, SoundEvent p_184133_3_, SoundCategory p_184133_4_, float p_184133_5_, float p_184133_6_)
+    public void playSound(@Nullable EntityPlayer player, BlockPos pos, SoundEvent soundIn, SoundCategory category, float volume, float pitch)
     {
-        this.func_184148_a(p_184133_1_, (double)p_184133_2_.func_177958_n() + 0.5D, (double)p_184133_2_.func_177956_o() + 0.5D, (double)p_184133_2_.func_177952_p() + 0.5D, p_184133_3_, p_184133_4_, p_184133_5_, p_184133_6_);
+        this.playSound(player, (double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D, soundIn, category, volume, pitch);
     }
 
-    public void func_184148_a(@Nullable EntityPlayer p_184148_1_, double p_184148_2_, double p_184148_4_, double p_184148_6_, SoundEvent p_184148_8_, SoundCategory p_184148_9_, float p_184148_10_, float p_184148_11_)
+    public void playSound(@Nullable EntityPlayer player, double x, double y, double z, SoundEvent soundIn, SoundCategory category, float volume, float pitch)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        net.minecraftforge.event.entity.PlaySoundAtEntityEvent event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(player, soundIn, category, volume, pitch);
+        if (event.isCanceled() || event.getSound() == null) return;
+        soundIn = event.getSound();
+        category = event.getCategory();
+        volume = event.getVolume();
+        pitch = event.getPitch();
+
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_184375_a(p_184148_1_, p_184148_8_, p_184148_9_, p_184148_2_, p_184148_4_, p_184148_6_, p_184148_10_, p_184148_11_);
+            ((IWorldEventListener)this.eventListeners.get(i)).playSoundToAllNearExcept(player, soundIn, category, x, y, z, volume, pitch);
         }
     }
 
-    public void func_184134_a(double p_184134_1_, double p_184134_3_, double p_184134_5_, SoundEvent p_184134_7_, SoundCategory p_184134_8_, float p_184134_9_, float p_184134_10_, boolean p_184134_11_)
+    public void playSound(double x, double y, double z, SoundEvent soundIn, SoundCategory category, float volume, float pitch, boolean distanceDelay)
     {
     }
 
-    public void func_184149_a(BlockPos p_184149_1_, @Nullable SoundEvent p_184149_2_)
+    public void playRecord(BlockPos blockPositionIn, @Nullable SoundEvent soundEventIn)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_184377_a(p_184149_2_, p_184149_1_);
+            ((IWorldEventListener)this.eventListeners.get(i)).playRecord(soundEventIn, blockPositionIn);
         }
     }
 
-    public void func_175688_a(EnumParticleTypes p_175688_1_, double p_175688_2_, double p_175688_4_, double p_175688_6_, double p_175688_8_, double p_175688_10_, double p_175688_12_, int... p_175688_14_)
+    public void spawnParticle(EnumParticleTypes particleType, double xCoord, double yCoord, double zCoord, double xSpeed, double ySpeed, double zSpeed, int... parameters)
     {
-        this.func_175720_a(p_175688_1_.func_179348_c(), p_175688_1_.func_179344_e(), p_175688_2_, p_175688_4_, p_175688_6_, p_175688_8_, p_175688_10_, p_175688_12_, p_175688_14_);
+        this.spawnParticle(particleType.getParticleID(), particleType.getShouldIgnoreRange(), xCoord, yCoord, zCoord, xSpeed, ySpeed, zSpeed, parameters);
     }
 
-    public void func_190523_a(int p_190523_1_, double p_190523_2_, double p_190523_4_, double p_190523_6_, double p_190523_8_, double p_190523_10_, double p_190523_12_, int... p_190523_14_)
+    public void spawnAlwaysVisibleParticle(int p_190523_1_, double p_190523_2_, double p_190523_4_, double p_190523_6_, double p_190523_8_, double p_190523_10_, double p_190523_12_, int... p_190523_14_)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_190570_a(p_190523_1_, false, true, p_190523_2_, p_190523_4_, p_190523_6_, p_190523_8_, p_190523_10_, p_190523_12_, p_190523_14_);
+            ((IWorldEventListener)this.eventListeners.get(i)).spawnParticle(p_190523_1_, false, true, p_190523_2_, p_190523_4_, p_190523_6_, p_190523_8_, p_190523_10_, p_190523_12_, p_190523_14_);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_175682_a(EnumParticleTypes p_175682_1_, boolean p_175682_2_, double p_175682_3_, double p_175682_5_, double p_175682_7_, double p_175682_9_, double p_175682_11_, double p_175682_13_, int... p_175682_15_)
+    public void spawnParticle(EnumParticleTypes particleType, boolean ignoreRange, double xCoord, double yCoord, double zCoord, double xSpeed, double ySpeed, double zSpeed, int... parameters)
     {
-        this.func_175720_a(p_175682_1_.func_179348_c(), p_175682_1_.func_179344_e() || p_175682_2_, p_175682_3_, p_175682_5_, p_175682_7_, p_175682_9_, p_175682_11_, p_175682_13_, p_175682_15_);
+        this.spawnParticle(particleType.getParticleID(), particleType.getShouldIgnoreRange() || ignoreRange, xCoord, yCoord, zCoord, xSpeed, ySpeed, zSpeed, parameters);
     }
 
-    private void func_175720_a(int p_175720_1_, boolean p_175720_2_, double p_175720_3_, double p_175720_5_, double p_175720_7_, double p_175720_9_, double p_175720_11_, double p_175720_13_, int... p_175720_15_)
+    private void spawnParticle(int particleID, boolean ignoreRange, double xCood, double yCoord, double zCoord, double xSpeed, double ySpeed, double zSpeed, int... parameters)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_180442_a(p_175720_1_, p_175720_2_, p_175720_3_, p_175720_5_, p_175720_7_, p_175720_9_, p_175720_11_, p_175720_13_, p_175720_15_);
+            ((IWorldEventListener)this.eventListeners.get(i)).spawnParticle(particleID, ignoreRange, xCood, yCoord, zCoord, xSpeed, ySpeed, zSpeed, parameters);
         }
     }
 
-    public boolean func_72942_c(Entity p_72942_1_)
+    public boolean addWeatherEffect(Entity entityIn)
     {
-        this.field_73007_j.add(p_72942_1_);
+        this.weatherEffects.add(entityIn);
         return true;
     }
 
-    public boolean func_72838_d(Entity p_72838_1_)
+    public boolean spawnEntity(Entity entityIn)
     {
-        int i = MathHelper.func_76128_c(p_72838_1_.field_70165_t / 16.0D);
-        int j = MathHelper.func_76128_c(p_72838_1_.field_70161_v / 16.0D);
-        boolean flag = p_72838_1_.field_98038_p;
+        // do not drop any items while restoring blocksnapshots. Prevents dupes
+        if (!this.isRemote && (entityIn == null || (entityIn instanceof net.minecraft.entity.item.EntityItem && this.restoringBlockSnapshots))) return false;
 
-        if (p_72838_1_ instanceof EntityPlayer)
+        int i = MathHelper.floor(entityIn.posX / 16.0D);
+        int j = MathHelper.floor(entityIn.posZ / 16.0D);
+        boolean flag = entityIn.forceSpawn;
+
+        if (entityIn instanceof EntityPlayer)
         {
             flag = true;
         }
 
-        if (!flag && !this.func_175680_a(i, j, false))
+        if (!flag && !this.isChunkLoaded(i, j, false))
         {
             return false;
         }
         else
         {
-            if (p_72838_1_ instanceof EntityPlayer)
+            if (entityIn instanceof EntityPlayer)
             {
-                EntityPlayer entityplayer = (EntityPlayer)p_72838_1_;
-                this.field_73010_i.add(entityplayer);
-                this.func_72854_c();
+                EntityPlayer entityplayer = (EntityPlayer)entityIn;
+                this.playerEntities.add(entityplayer);
+                this.updateAllPlayersSleepingFlag();
             }
 
-            this.func_72964_e(i, j).func_76612_a(p_72838_1_);
-            this.field_72996_f.add(p_72838_1_);
-            this.func_72923_a(p_72838_1_);
+            if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entityIn, this)) && !flag) return false;
+
+            this.getChunkFromChunkCoords(i, j).addEntity(entityIn);
+            this.loadedEntityList.add(entityIn);
+            this.onEntityAdded(entityIn);
             return true;
         }
     }
+    public boolean addEntity(Entity entity, CreatureSpawnEvent.SpawnReason spawnReason) { // Changed signature, added SpawnReason
+        if (entity == null) return false;
+        // CraftBukkit end
+        int i = MathHelper.floor(entity.posX / 16.0D);
+        int j = MathHelper.floor(entity.posZ / 16.0D);
+        boolean flag = entity.forceSpawn;
 
-    public void func_72923_a(Entity p_72923_1_)
+        if (entity instanceof EntityPlayer) {
+            flag = true;
+        }
+
+        // CraftBukkit start
+        org.bukkit.event.Cancellable event = null;
+        if (entity instanceof EntityLivingBase && !(entity instanceof EntityPlayerMP)) {
+            boolean isAnimal = entity instanceof EntityAnimal || entity instanceof EntityWaterMob || entity instanceof EntityGolem;
+            boolean isMonster = entity instanceof EntityMob || entity instanceof EntityGhast || entity instanceof EntitySlime;
+            boolean isNpc = entity instanceof INpc;
+
+            if (spawnReason != CreatureSpawnEvent.SpawnReason.CUSTOM) {
+                if (isAnimal && !spawnPeacefulMobs || isMonster && !spawnHostileMobs || isNpc && !getServer().getServer().getCanSpawnNPCs()) {
+                    entity.isDead = true;
+                    return false;
+                }
+            }
+
+            event = CraftEventFactory.callCreatureSpawnEvent((EntityLivingBase) entity, spawnReason);
+        } else if (entity instanceof EntityItem) {
+            event = CraftEventFactory.callItemSpawnEvent((EntityItem) entity);
+        } else if (entity.getBukkitEntity() instanceof org.bukkit.entity.Projectile) {
+            // Not all projectiles extend EntityProjectile, so check for Bukkit interface instead
+            event = CraftEventFactory.callProjectileLaunchEvent(entity);
+        } else if (entity.getBukkitEntity() instanceof org.bukkit.entity.Vehicle){
+            event = CraftEventFactory.callVehicleCreateEvent(entity);
+        }
+
+        if (event != null && (event.isCancelled() || entity.isDead)) {
+            entity.isDead = true;
+            return false;
+        }
+        // CraftBukkit end
+
+
+        if (!flag && !this.isChunkLoaded(i, j, false)) {
+            return false;
+        } else {
+            if (entity instanceof EntityPlayer) {
+                EntityPlayer entityhuman = (EntityPlayer) entity;
+
+                this.playerEntities.add(entityhuman);
+                this.updateAllPlayersSleepingFlag();
+            }
+
+            this.getChunkFromChunkCoords(i, j).addEntity(entity);
+            this.loadedEntityList.add(entity);
+            this.onEntityAdded(entity);
+            return true;
+        }
+    }
+    public void onEntityAdded(Entity entityIn)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_72703_a(p_72923_1_);
+            ((IWorldEventListener)this.eventListeners.get(i)).onEntityAdded(entityIn);
         }
     }
 
-    public void func_72847_b(Entity p_72847_1_)
+    public void onEntityRemoved(Entity entityIn)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_72709_b(p_72847_1_);
+            ((IWorldEventListener)this.eventListeners.get(i)).onEntityRemoved(entityIn);
         }
     }
 
-    public void func_72900_e(Entity p_72900_1_)
+    public void removeEntity(Entity entityIn)
     {
-        if (p_72900_1_.func_184207_aI())
+        if (entityIn.isBeingRidden())
         {
-            p_72900_1_.func_184226_ay();
+            entityIn.removePassengers();
         }
 
-        if (p_72900_1_.func_184218_aH())
+        if (entityIn.isRiding())
         {
-            p_72900_1_.func_184210_p();
+            entityIn.dismountRidingEntity();
         }
 
-        p_72900_1_.func_70106_y();
+        entityIn.setDead();
 
-        if (p_72900_1_ instanceof EntityPlayer)
+        if (entityIn instanceof EntityPlayer)
         {
-            this.field_73010_i.remove(p_72900_1_);
-            this.func_72854_c();
-            this.func_72847_b(p_72900_1_);
+            this.playerEntities.remove(entityIn);
+            this.updateAllPlayersSleepingFlag();
+            this.onEntityRemoved(entityIn);
         }
     }
 
-    public void func_72973_f(Entity p_72973_1_)
+    public void removeEntityDangerously(Entity entityIn)
     {
-        p_72973_1_.func_184174_b(false);
-        p_72973_1_.func_70106_y();
+        entityIn.setDropItemsWhenDead(false);
+        entityIn.setDead();
 
-        if (p_72973_1_ instanceof EntityPlayer)
+        if (entityIn instanceof EntityPlayer)
         {
-            this.field_73010_i.remove(p_72973_1_);
-            this.func_72854_c();
+            this.playerEntities.remove(entityIn);
+            this.updateAllPlayersSleepingFlag();
         }
 
-        int i = p_72973_1_.field_70176_ah;
-        int j = p_72973_1_.field_70164_aj;
+        int i = entityIn.chunkCoordX;
+        int j = entityIn.chunkCoordZ;
 
-        if (p_72973_1_.field_70175_ag && this.func_175680_a(i, j, true))
+        if (entityIn.addedToChunk && this.isChunkLoaded(i, j, true))
         {
-            this.func_72964_e(i, j).func_76622_b(p_72973_1_);
+            this.getChunkFromChunkCoords(i, j).removeEntity(entityIn);
         }
 
-        this.field_72996_f.remove(p_72973_1_);
-        this.func_72847_b(p_72973_1_);
+        this.loadedEntityList.remove(entityIn);
+        this.onEntityRemoved(entityIn);
     }
 
-    public void func_72954_a(IWorldEventListener p_72954_1_)
+    public void addEventListener(IWorldEventListener listener)
     {
-        this.field_73021_x.add(p_72954_1_);
+        this.eventListeners.add(listener);
     }
 
     private boolean func_191504_a(@Nullable Entity p_191504_1_, AxisAlignedBB p_191504_2_, boolean p_191504_3_, @Nullable List<AxisAlignedBB> p_191504_4_)
     {
-        int i = MathHelper.func_76128_c(p_191504_2_.field_72340_a) - 1;
-        int j = MathHelper.func_76143_f(p_191504_2_.field_72336_d) + 1;
-        int k = MathHelper.func_76128_c(p_191504_2_.field_72338_b) - 1;
-        int l = MathHelper.func_76143_f(p_191504_2_.field_72337_e) + 1;
-        int i1 = MathHelper.func_76128_c(p_191504_2_.field_72339_c) - 1;
-        int j1 = MathHelper.func_76143_f(p_191504_2_.field_72334_f) + 1;
-        WorldBorder worldborder = this.func_175723_af();
-        boolean flag = p_191504_1_ != null && p_191504_1_.func_174832_aS();
+        int i = MathHelper.floor(p_191504_2_.minX) - 1;
+        int j = MathHelper.ceil(p_191504_2_.maxX) + 1;
+        int k = MathHelper.floor(p_191504_2_.minY) - 1;
+        int l = MathHelper.ceil(p_191504_2_.maxY) + 1;
+        int i1 = MathHelper.floor(p_191504_2_.minZ) - 1;
+        int j1 = MathHelper.ceil(p_191504_2_.maxZ) + 1;
+        WorldBorder worldborder = this.getWorldBorder();
+        boolean flag = p_191504_1_ != null && p_191504_1_.isOutsideBorder();
         boolean flag1 = p_191504_1_ != null && this.func_191503_g(p_191504_1_);
-        IBlockState iblockstate = Blocks.field_150348_b.func_176223_P();
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+        IBlockState iblockstate = Blocks.STONE.getDefaultState();
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
         try
         {
@@ -1230,7 +1471,7 @@
                     boolean flag2 = k1 == i || k1 == j - 1;
                     boolean flag3 = l1 == i1 || l1 == j1 - 1;
 
-                    if ((!flag2 || !flag3) && this.func_175667_e(blockpos$pooledmutableblockpos.func_181079_c(k1, 64, l1)))
+                    if ((!flag2 || !flag3) && this.isBlockLoaded(blockpos$pooledmutableblockpos.setPos(k1, 64, l1)))
                     {
                         for (int i2 = k; i2 < l; ++i2)
                         {
@@ -1246,22 +1487,23 @@
                                 }
                                 else if (p_191504_1_ != null && flag == flag1)
                                 {
-                                    p_191504_1_.func_174821_h(!flag1);
+                                    p_191504_1_.setOutsideBorder(!flag1);
                                 }
 
-                                blockpos$pooledmutableblockpos.func_181079_c(k1, i2, l1);
+                                blockpos$pooledmutableblockpos.setPos(k1, i2, l1);
                                 IBlockState iblockstate1;
 
-                                if (!p_191504_3_ && !worldborder.func_177746_a(blockpos$pooledmutableblockpos) && flag1)
+                                if (!p_191504_3_ && !worldborder.contains(blockpos$pooledmutableblockpos) && flag1)
                                 {
                                     iblockstate1 = iblockstate;
                                 }
                                 else
                                 {
-                                    iblockstate1 = this.func_180495_p(blockpos$pooledmutableblockpos);
+                                    iblockstate1 = this.getBlockState(blockpos$pooledmutableblockpos);
                                 }
 
-                                iblockstate1.func_185908_a(this, blockpos$pooledmutableblockpos, p_191504_2_, p_191504_4_, p_191504_1_, false);
+                                iblockstate1.addCollisionBoxToList(this, blockpos$pooledmutableblockpos, p_191504_2_, p_191504_4_, p_191504_1_, false);
+                                net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.GetCollisionBoxesEvent(this, null, p_191504_2_, p_191504_4_));
 
                                 if (p_191504_3_ && !p_191504_4_.isEmpty())
                                 {
@@ -1276,61 +1518,60 @@
         }
         finally
         {
-            blockpos$pooledmutableblockpos.func_185344_t();
+            blockpos$pooledmutableblockpos.release();
         }
 
         return !p_191504_4_.isEmpty();
     }
 
-    public List<AxisAlignedBB> func_184144_a(@Nullable Entity p_184144_1_, AxisAlignedBB p_184144_2_)
+    public List<AxisAlignedBB> getCollisionBoxes(@Nullable Entity entityIn, AxisAlignedBB aabb)
     {
         List<AxisAlignedBB> list = Lists.<AxisAlignedBB>newArrayList();
-        this.func_191504_a(p_184144_1_, p_184144_2_, false, list);
+        this.func_191504_a(entityIn, aabb, false, list);
 
-        if (p_184144_1_ != null)
+        if (entityIn != null)
         {
-            List<Entity> list1 = this.func_72839_b(p_184144_1_, p_184144_2_.func_186662_g(0.25D));
+            List<Entity> list1 = this.getEntitiesWithinAABBExcludingEntity(entityIn, aabb.expandXyz(0.25D));
 
             for (int i = 0; i < list1.size(); ++i)
             {
                 Entity entity = (Entity)list1.get(i);
 
-                if (!p_184144_1_.func_184223_x(entity))
+                if (!entityIn.isRidingSameEntity(entity))
                 {
-                    AxisAlignedBB axisalignedbb = entity.func_70046_E();
+                    AxisAlignedBB axisalignedbb = entity.getCollisionBoundingBox();
 
-                    if (axisalignedbb != null && axisalignedbb.func_72326_a(p_184144_2_))
+                    if (axisalignedbb != null && axisalignedbb.intersectsWith(aabb))
                     {
                         list.add(axisalignedbb);
                     }
 
-                    axisalignedbb = p_184144_1_.func_70114_g(entity);
+                    axisalignedbb = entityIn.getCollisionBox(entity);
 
-                    if (axisalignedbb != null && axisalignedbb.func_72326_a(p_184144_2_))
+                    if (axisalignedbb != null && axisalignedbb.intersectsWith(aabb))
                     {
                         list.add(axisalignedbb);
                     }
                 }
             }
         }
-
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.GetCollisionBoxesEvent(this, entityIn, aabb, list));
         return list;
     }
 
-    @SideOnly(Side.CLIENT)
-    public void func_72848_b(IWorldEventListener p_72848_1_)
+    public void removeEventListener(IWorldEventListener listener)
     {
-        this.field_73021_x.remove(p_72848_1_);
+        this.eventListeners.remove(listener);
     }
 
     public boolean func_191503_g(Entity p_191503_1_)
     {
-        double d0 = this.field_175728_M.func_177726_b();
-        double d1 = this.field_175728_M.func_177736_c();
-        double d2 = this.field_175728_M.func_177728_d();
-        double d3 = this.field_175728_M.func_177733_e();
+        double d0 = this.worldBorder.minX();
+        double d1 = this.worldBorder.minZ();
+        double d2 = this.worldBorder.maxX();
+        double d3 = this.worldBorder.maxZ();
 
-        if (p_191503_1_.func_174832_aS())
+        if (p_191503_1_.isOutsideBorder())
         {
             ++d0;
             ++d1;
@@ -1345,58 +1586,81 @@
             ++d3;
         }
 
-        return p_191503_1_.field_70165_t > d0 && p_191503_1_.field_70165_t < d2 && p_191503_1_.field_70161_v > d1 && p_191503_1_.field_70161_v < d3;
+        return p_191503_1_.posX > d0 && p_191503_1_.posX < d2 && p_191503_1_.posZ > d1 && p_191503_1_.posZ < d3;
     }
 
-    public boolean func_184143_b(AxisAlignedBB p_184143_1_)
+    public boolean collidesWithAnyBlock(AxisAlignedBB bbox)
     {
-        return this.func_191504_a((Entity)null, p_184143_1_, true, Lists.<AxisAlignedBB>newArrayList());
+        return this.func_191504_a((Entity)null, bbox, true, Lists.<AxisAlignedBB>newArrayList());
     }
 
-    public int func_72967_a(float p_72967_1_)
+    public int calculateSkylightSubtracted(float partialTicks)
     {
-        float f = this.func_72826_c(p_72967_1_);
-        float f1 = 1.0F - (MathHelper.func_76134_b(f * ((float)Math.PI * 2F)) * 2.0F + 0.5F);
-        f1 = MathHelper.func_76131_a(f1, 0.0F, 1.0F);
+        float f = provider.getSunBrightnessFactor(partialTicks);
+        f = 1 - f;
+        return (int)(f * 11);
+    }
+
+    /**
+     * The current sun brightness factor for this dimension.
+     * 0.0f means no light at all, and 1.0f means maximum sunlight.
+     * Highly recommended for sunlight detection like solar panel.
+     *
+     * @return The current brightness factor
+     * */
+    public float getSunBrightnessFactor(float partialTicks)
+    {
+        float f = this.getCelestialAngle(partialTicks);
+        float f1 = 1.0F - (MathHelper.cos(f * ((float)Math.PI * 2F)) * 2.0F + 0.5F);
+        f1 = MathHelper.clamp(f1, 0.0F, 1.0F);
         f1 = 1.0F - f1;
-        f1 = (float)((double)f1 * (1.0D - (double)(this.func_72867_j(p_72967_1_) * 5.0F) / 16.0D));
-        f1 = (float)((double)f1 * (1.0D - (double)(this.func_72819_i(p_72967_1_) * 5.0F) / 16.0D));
-        f1 = 1.0F - f1;
-        return (int)(f1 * 11.0F);
+        f1 = (float)((double)f1 * (1.0D - (double)(this.getRainStrength(partialTicks) * 5.0F) / 16.0D));
+        f1 = (float)((double)f1 * (1.0D - (double)(this.getThunderStrength(partialTicks) * 5.0F) / 16.0D));
+        return f1;
     }
 
     @SideOnly(Side.CLIENT)
-    public float func_72971_b(float p_72971_1_)
+    public float getSunBrightness(float partialTicks)
     {
-        float f = this.func_72826_c(p_72971_1_);
-        float f1 = 1.0F - (MathHelper.func_76134_b(f * ((float)Math.PI * 2F)) * 2.0F + 0.2F);
-        f1 = MathHelper.func_76131_a(f1, 0.0F, 1.0F);
+        return this.provider.getSunBrightness(partialTicks);
+    }
+
+    @SideOnly(Side.CLIENT)
+    public float getSunBrightnessBody(float partialTicks)
+    {
+        float f = this.getCelestialAngle(partialTicks);
+        float f1 = 1.0F - (MathHelper.cos(f * ((float)Math.PI * 2F)) * 2.0F + 0.2F);
+        f1 = MathHelper.clamp(f1, 0.0F, 1.0F);
         f1 = 1.0F - f1;
-        f1 = (float)((double)f1 * (1.0D - (double)(this.func_72867_j(p_72971_1_) * 5.0F) / 16.0D));
-        f1 = (float)((double)f1 * (1.0D - (double)(this.func_72819_i(p_72971_1_) * 5.0F) / 16.0D));
+        f1 = (float)((double)f1 * (1.0D - (double)(this.getRainStrength(partialTicks) * 5.0F) / 16.0D));
+        f1 = (float)((double)f1 * (1.0D - (double)(this.getThunderStrength(partialTicks) * 5.0F) / 16.0D));
         return f1 * 0.8F + 0.2F;
     }
 
     @SideOnly(Side.CLIENT)
-    public Vec3d func_72833_a(Entity p_72833_1_, float p_72833_2_)
+    public Vec3d getSkyColor(Entity entityIn, float partialTicks)
     {
-        float f = this.func_72826_c(p_72833_2_);
-        float f1 = MathHelper.func_76134_b(f * ((float)Math.PI * 2F)) * 2.0F + 0.5F;
-        f1 = MathHelper.func_76131_a(f1, 0.0F, 1.0F);
-        int i = MathHelper.func_76128_c(p_72833_1_.field_70165_t);
-        int j = MathHelper.func_76128_c(p_72833_1_.field_70163_u);
-        int k = MathHelper.func_76128_c(p_72833_1_.field_70161_v);
+        return this.provider.getSkyColor(entityIn, partialTicks);
+    }
+
+    @SideOnly(Side.CLIENT)
+    public Vec3d getSkyColorBody(Entity entityIn, float partialTicks)
+    {
+        float f = this.getCelestialAngle(partialTicks);
+        float f1 = MathHelper.cos(f * ((float)Math.PI * 2F)) * 2.0F + 0.5F;
+        f1 = MathHelper.clamp(f1, 0.0F, 1.0F);
+        int i = MathHelper.floor(entityIn.posX);
+        int j = MathHelper.floor(entityIn.posY);
+        int k = MathHelper.floor(entityIn.posZ);
         BlockPos blockpos = new BlockPos(i, j, k);
-        Biome biome = this.func_180494_b(blockpos);
-        float f2 = biome.func_180626_a(blockpos);
-        int l = biome.func_76731_a(f2);
+        int l = net.minecraftforge.client.ForgeHooksClient.getSkyBlendColour(this, blockpos);
         float f3 = (float)(l >> 16 & 255) / 255.0F;
         float f4 = (float)(l >> 8 & 255) / 255.0F;
         float f5 = (float)(l & 255) / 255.0F;
         f3 = f3 * f1;
         f4 = f4 * f1;
         f5 = f5 * f1;
-        float f6 = this.func_72867_j(p_72833_2_);
+        float f6 = this.getRainStrength(partialTicks);
 
         if (f6 > 0.0F)
         {
@@ -1407,7 +1671,7 @@
             f5 = f5 * f8 + f7 * (1.0F - f8);
         }
 
-        float f10 = this.func_72819_i(p_72833_2_);
+        float f10 = this.getThunderStrength(partialTicks);
 
         if (f10 > 0.0F)
         {
@@ -1418,9 +1682,9 @@
             f5 = f5 * f9 + f11 * (1.0F - f9);
         }
 
-        if (this.field_73016_r > 0)
+        if (this.lastLightningBolt > 0)
         {
-            float f12 = (float)this.field_73016_r - p_72833_2_;
+            float f12 = (float)this.lastLightningBolt - partialTicks;
 
             if (f12 > 1.0F)
             {
@@ -1436,38 +1700,49 @@
         return new Vec3d((double)f3, (double)f4, (double)f5);
     }
 
-    public float func_72826_c(float p_72826_1_)
+    public float getCelestialAngle(float partialTicks)
     {
-        return this.field_73011_w.func_76563_a(this.field_72986_A.func_76073_f(), p_72826_1_);
+        return this.provider.calculateCelestialAngle(this.getWorldTime(), partialTicks);
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_72853_d()
+    public int getMoonPhase()
     {
-        return this.field_73011_w.func_76559_b(this.field_72986_A.func_76073_f());
+        return this.provider.getMoonPhase(this.getWorldTime());
     }
 
-    public float func_130001_d()
+    public float getCurrentMoonPhaseFactor()
     {
-        return WorldProvider.field_111203_a[this.field_73011_w.func_76559_b(this.field_72986_A.func_76073_f())];
+        return provider.getCurrentMoonPhaseFactor();
     }
 
-    public float func_72929_e(float p_72929_1_)
+    public float getCurrentMoonPhaseFactorBody()
     {
-        float f = this.func_72826_c(p_72929_1_);
+        return WorldProvider.MOON_PHASE_FACTORS[this.provider.getMoonPhase(this.getWorldTime())];
+    }
+
+    public float getCelestialAngleRadians(float partialTicks)
+    {
+        float f = this.getCelestialAngle(partialTicks);
         return f * ((float)Math.PI * 2F);
     }
 
     @SideOnly(Side.CLIENT)
-    public Vec3d func_72824_f(float p_72824_1_)
+    public Vec3d getCloudColour(float partialTicks)
     {
-        float f = this.func_72826_c(p_72824_1_);
-        float f1 = MathHelper.func_76134_b(f * ((float)Math.PI * 2F)) * 2.0F + 0.5F;
-        f1 = MathHelper.func_76131_a(f1, 0.0F, 1.0F);
+        return this.provider.getCloudColor(partialTicks);
+    }
+
+    @SideOnly(Side.CLIENT)
+    public Vec3d getCloudColorBody(float partialTicks)
+    {
+        float f = this.getCelestialAngle(partialTicks);
+        float f1 = MathHelper.cos(f * ((float)Math.PI * 2F)) * 2.0F + 0.5F;
+        f1 = MathHelper.clamp(f1, 0.0F, 1.0F);
         float f2 = 1.0F;
         float f3 = 1.0F;
         float f4 = 1.0F;
-        float f5 = this.func_72867_j(p_72824_1_);
+        float f5 = this.getRainStrength(partialTicks);
 
         if (f5 > 0.0F)
         {
@@ -1481,7 +1756,7 @@
         f2 = f2 * (f1 * 0.9F + 0.1F);
         f3 = f3 * (f1 * 0.9F + 0.1F);
         f4 = f4 * (f1 * 0.85F + 0.15F);
-        float f9 = this.func_72819_i(p_72824_1_);
+        float f9 = this.getThunderStrength(partialTicks);
 
         if (f9 > 0.0F)
         {
@@ -1496,29 +1771,29 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public Vec3d func_72948_g(float p_72948_1_)
+    public Vec3d getFogColor(float partialTicks)
     {
-        float f = this.func_72826_c(p_72948_1_);
-        return this.field_73011_w.func_76562_b(f, p_72948_1_);
+        float f = this.getCelestialAngle(partialTicks);
+        return this.provider.getFogColor(f, partialTicks);
     }
 
-    public BlockPos func_175725_q(BlockPos p_175725_1_)
+    public BlockPos getPrecipitationHeight(BlockPos pos)
     {
-        return this.func_175726_f(p_175725_1_).func_177440_h(p_175725_1_);
+        return this.getChunkFromBlockCoords(pos).getPrecipitationHeight(pos);
     }
 
-    public BlockPos func_175672_r(BlockPos p_175672_1_)
+    public BlockPos getTopSolidOrLiquidBlock(BlockPos pos)
     {
-        Chunk chunk = this.func_175726_f(p_175672_1_);
+        Chunk chunk = this.getChunkFromBlockCoords(pos);
         BlockPos blockpos;
         BlockPos blockpos1;
 
-        for (blockpos = new BlockPos(p_175672_1_.func_177958_n(), chunk.func_76625_h() + 16, p_175672_1_.func_177952_p()); blockpos.func_177956_o() >= 0; blockpos = blockpos1)
+        for (blockpos = new BlockPos(pos.getX(), chunk.getTopFilledSegment() + 16, pos.getZ()); blockpos.getY() >= 0; blockpos = blockpos1)
         {
-            blockpos1 = blockpos.func_177977_b();
-            Material material = chunk.func_177435_g(blockpos1).func_185904_a();
+            blockpos1 = blockpos.down();
+            IBlockState state = chunk.getBlockState(blockpos1);
 
-            if (material.func_76230_c() && material != Material.field_151584_j)
+            if (state.getMaterial().blocksMovement() && !state.getBlock().isLeaves(state, this, blockpos1) && !state.getBlock().isFoliage(this, blockpos1))
             {
                 break;
             }
@@ -1528,379 +1803,428 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public float func_72880_h(float p_72880_1_)
+    public float getStarBrightness(float partialTicks)
     {
-        float f = this.func_72826_c(p_72880_1_);
-        float f1 = 1.0F - (MathHelper.func_76134_b(f * ((float)Math.PI * 2F)) * 2.0F + 0.25F);
-        f1 = MathHelper.func_76131_a(f1, 0.0F, 1.0F);
+        return this.provider.getStarBrightness(partialTicks);
+    }
+
+    @SideOnly(Side.CLIENT)
+    public float getStarBrightnessBody(float partialTicks)
+    {
+        float f = this.getCelestialAngle(partialTicks);
+        float f1 = 1.0F - (MathHelper.cos(f * ((float)Math.PI * 2F)) * 2.0F + 0.25F);
+        f1 = MathHelper.clamp(f1, 0.0F, 1.0F);
         return f1 * f1 * 0.5F;
     }
 
-    public boolean func_184145_b(BlockPos p_184145_1_, Block p_184145_2_)
+    public boolean isUpdateScheduled(BlockPos pos, Block blk)
     {
         return true;
     }
 
-    public void func_175684_a(BlockPos p_175684_1_, Block p_175684_2_, int p_175684_3_)
+    public void scheduleUpdate(BlockPos pos, Block blockIn, int delay)
     {
     }
 
-    public void func_175654_a(BlockPos p_175654_1_, Block p_175654_2_, int p_175654_3_, int p_175654_4_)
+    public void updateBlockTick(BlockPos pos, Block blockIn, int delay, int priority)
     {
     }
 
-    public void func_180497_b(BlockPos p_180497_1_, Block p_180497_2_, int p_180497_3_, int p_180497_4_)
+    public void scheduleBlockUpdate(BlockPos pos, Block blockIn, int delay, int priority)
     {
     }
 
-    public void func_72939_s()
+    public void updateEntities()
     {
-        this.field_72984_F.func_76320_a("entities");
-        this.field_72984_F.func_76320_a("global");
+        this.theProfiler.startSection("entities");
+        this.theProfiler.startSection("global");
 
-        for (int i = 0; i < this.field_73007_j.size(); ++i)
+        for (int i = 0; i < this.weatherEffects.size(); ++i)
         {
-            Entity entity = (Entity)this.field_73007_j.get(i);
+            Entity entity = (Entity)this.weatherEffects.get(i);
 
             try
             {
-                ++entity.field_70173_aa;
-                entity.func_70071_h_();
+                if(entity.updateBlocked) continue;
+                ++entity.ticksExisted;
+                entity.onUpdate();
             }
             catch (Throwable throwable2)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable2, "Ticking entity");
-                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Entity being ticked");
+                CrashReport crashreport = CrashReport.makeCrashReport(throwable2, "Ticking entity");
+                CrashReportCategory crashreportcategory = crashreport.makeCategory("Entity being ticked");
 
                 if (entity == null)
                 {
-                    crashreportcategory.func_71507_a("Entity", "~~NULL~~");
+                    crashreportcategory.addCrashSection("Entity", "~~NULL~~");
                 }
                 else
                 {
-                    entity.func_85029_a(crashreportcategory);
+                    entity.addEntityCrashInfo(crashreportcategory);
                 }
 
+                if (net.minecraftforge.common.ForgeModContainer.removeErroringEntities)
+                {
+                    net.minecraftforge.fml.common.FMLLog.log.fatal(crashreport.getCompleteReport());
+                    removeEntity(entity);
+                }
+                else
                 throw new ReportedException(crashreport);
             }
 
-            if (entity.field_70128_L)
+            if (entity.isDead)
             {
-                this.field_73007_j.remove(i--);
+                this.weatherEffects.remove(i--);
             }
         }
 
-        this.field_72984_F.func_76318_c("remove");
-        this.field_72996_f.removeAll(this.field_72997_g);
+        this.theProfiler.endStartSection("remove");
+        this.loadedEntityList.removeAll(this.unloadedEntityList);
 
-        for (int k = 0; k < this.field_72997_g.size(); ++k)
+        for (int k = 0; k < this.unloadedEntityList.size(); ++k)
         {
-            Entity entity1 = (Entity)this.field_72997_g.get(k);
-            int j = entity1.field_70176_ah;
-            int k1 = entity1.field_70164_aj;
+            Entity entity1 = (Entity)this.unloadedEntityList.get(k);
+            int j = entity1.chunkCoordX;
+            int k1 = entity1.chunkCoordZ;
 
-            if (entity1.field_70175_ag && this.func_175680_a(j, k1, true))
+            if (entity1.addedToChunk && this.isChunkLoaded(j, k1, true))
             {
-                this.func_72964_e(j, k1).func_76622_b(entity1);
+                this.getChunkFromChunkCoords(j, k1).removeEntity(entity1);
             }
         }
 
-        for (int l = 0; l < this.field_72997_g.size(); ++l)
+        for (int l = 0; l < this.unloadedEntityList.size(); ++l)
         {
-            this.func_72847_b((Entity)this.field_72997_g.get(l));
+            this.onEntityRemoved((Entity)this.unloadedEntityList.get(l));
         }
 
-        this.field_72997_g.clear();
-        this.func_184147_l();
-        this.field_72984_F.func_76318_c("regular");
+        this.unloadedEntityList.clear();
+        this.tickPlayers();
+        this.theProfiler.endStartSection("regular");
 
-        for (int i1 = 0; i1 < this.field_72996_f.size(); ++i1)
+        for (int i1 = 0; i1 < this.loadedEntityList.size(); ++i1)
         {
-            Entity entity2 = (Entity)this.field_72996_f.get(i1);
-            Entity entity3 = entity2.func_184187_bx();
+            Entity entity2 = (Entity)this.loadedEntityList.get(i1);
+            Entity entity3 = entity2.getRidingEntity();
 
             if (entity3 != null)
             {
-                if (!entity3.field_70128_L && entity3.func_184196_w(entity2))
+                if (!entity3.isDead && entity3.isPassenger(entity2))
                 {
                     continue;
                 }
 
-                entity2.func_184210_p();
+                entity2.dismountRidingEntity();
             }
 
-            this.field_72984_F.func_76320_a("tick");
+            this.theProfiler.startSection("tick");
 
-            if (!entity2.field_70128_L && !(entity2 instanceof EntityPlayerMP))
+            if (!entity2.isDead && !(entity2 instanceof EntityPlayerMP))
             {
                 try
                 {
-                    this.func_72870_g(entity2);
+                    this.updateEntity(entity2);
                 }
                 catch (Throwable throwable1)
                 {
-                    CrashReport crashreport1 = CrashReport.func_85055_a(throwable1, "Ticking entity");
-                    CrashReportCategory crashreportcategory1 = crashreport1.func_85058_a("Entity being ticked");
-                    entity2.func_85029_a(crashreportcategory1);
+                    CrashReport crashreport1 = CrashReport.makeCrashReport(throwable1, "Ticking entity");
+                    CrashReportCategory crashreportcategory1 = crashreport1.makeCategory("Entity being ticked");
+                    entity2.addEntityCrashInfo(crashreportcategory1);
+                    if (net.minecraftforge.common.ForgeModContainer.removeErroringEntities)
+                    {
+                        net.minecraftforge.fml.common.FMLLog.log.fatal(crashreport1.getCompleteReport());
+                        removeEntity(entity2);
+                    }
+                    else
                     throw new ReportedException(crashreport1);
                 }
             }
 
-            this.field_72984_F.func_76319_b();
-            this.field_72984_F.func_76320_a("remove");
+            this.theProfiler.endSection();
+            this.theProfiler.startSection("remove");
 
-            if (entity2.field_70128_L)
+            if (entity2.isDead)
             {
-                int l1 = entity2.field_70176_ah;
-                int i2 = entity2.field_70164_aj;
+                int l1 = entity2.chunkCoordX;
+                int i2 = entity2.chunkCoordZ;
 
-                if (entity2.field_70175_ag && this.func_175680_a(l1, i2, true))
+                if (entity2.addedToChunk && this.isChunkLoaded(l1, i2, true))
                 {
-                    this.func_72964_e(l1, i2).func_76622_b(entity2);
+                    this.getChunkFromChunkCoords(l1, i2).removeEntity(entity2);
                 }
 
-                this.field_72996_f.remove(i1--);
-                this.func_72847_b(entity2);
+                this.loadedEntityList.remove(i1--);
+                this.onEntityRemoved(entity2);
             }
 
-            this.field_72984_F.func_76319_b();
+            this.theProfiler.endSection();
         }
 
-        this.field_72984_F.func_76318_c("blockEntities");
-        this.field_147481_N = true;
-        Iterator<TileEntity> iterator = this.field_175730_i.iterator();
+        this.theProfiler.endStartSection("blockEntities");
+        this.processingLoadedTiles = true;
+        Iterator<TileEntity> iterator = this.tickableTileEntities.iterator();
 
         while (iterator.hasNext())
         {
             TileEntity tileentity = (TileEntity)iterator.next();
 
-            if (!tileentity.func_145837_r() && tileentity.func_145830_o())
+            if (!tileentity.isInvalid() && tileentity.hasWorld())
             {
-                BlockPos blockpos = tileentity.func_174877_v();
+                BlockPos blockpos = tileentity.getPos();
 
-                if (this.func_175667_e(blockpos) && this.field_175728_M.func_177746_a(blockpos))
+                if (this.isBlockLoaded(blockpos, false) && this.worldBorder.contains(blockpos)) //Forge: Fix TE's getting an extra tick on the client side....
                 {
                     try
                     {
-                        this.field_72984_F.func_76320_a(tileentity.getClass().getSimpleName());
-                        ((ITickable)tileentity).func_73660_a();
-                        this.field_72984_F.func_76319_b();
+                        this.theProfiler.startSection(tileentity.getClass()); // Fix for MC-117087
+                        ((ITickable)tileentity).update();
+                        this.theProfiler.endSection();
                     }
                     catch (Throwable throwable)
                     {
-                        CrashReport crashreport2 = CrashReport.func_85055_a(throwable, "Ticking block entity");
-                        CrashReportCategory crashreportcategory2 = crashreport2.func_85058_a("Block entity being ticked");
-                        tileentity.func_145828_a(crashreportcategory2);
+                        CrashReport crashreport2 = CrashReport.makeCrashReport(throwable, "Ticking block entity");
+                        CrashReportCategory crashreportcategory2 = crashreport2.makeCategory("Block entity being ticked");
+                        tileentity.addInfoToCrashReport(crashreportcategory2);
+                        if (net.minecraftforge.common.ForgeModContainer.removeErroringTileEntities)
+                        {
+                            net.minecraftforge.fml.common.FMLLog.log.fatal(crashreport2.getCompleteReport());
+                            tileentity.invalidate();
+                            this.removeTileEntity(tileentity.getPos());
+                        }
+                        else
                         throw new ReportedException(crashreport2);
                     }
                 }
             }
 
-            if (tileentity.func_145837_r())
+            if (tileentity.isInvalid())
             {
                 iterator.remove();
-                this.field_147482_g.remove(tileentity);
+                this.loadedTileEntityList.remove(tileentity);
 
-                if (this.func_175667_e(tileentity.func_174877_v()))
+                if (this.isBlockLoaded(tileentity.getPos()))
                 {
-                    this.func_175726_f(tileentity.func_174877_v()).func_177425_e(tileentity.func_174877_v());
+                    //Forge: Bugfix: If we set the tile entity it immediately sets it in the chunk, so we could be desyned
+                    Chunk chunk = this.getChunkFromBlockCoords(tileentity.getPos());
+                    if (chunk.getTileEntity(tileentity.getPos(), net.minecraft.world.chunk.Chunk.EnumCreateEntityType.CHECK) == tileentity)
+                        chunk.removeTileEntity(tileentity.getPos());
                 }
             }
         }
 
-        this.field_147481_N = false;
-
-        if (!this.field_147483_b.isEmpty())
+        if (!this.tileEntitiesToBeRemoved.isEmpty())
         {
-            this.field_175730_i.removeAll(this.field_147483_b);
-            this.field_147482_g.removeAll(this.field_147483_b);
-            this.field_147483_b.clear();
+            for (Object tile : tileEntitiesToBeRemoved)
+            {
+               ((TileEntity)tile).onChunkUnload();
+            }
+
+            this.tickableTileEntities.removeAll(this.tileEntitiesToBeRemoved);
+            this.loadedTileEntityList.removeAll(this.tileEntitiesToBeRemoved);
+            this.tileEntitiesToBeRemoved.clear();
         }
 
-        this.field_72984_F.func_76318_c("pendingBlockEntities");
+        this.processingLoadedTiles = false;  //FML Move below remove to prevent CMEs
 
-        if (!this.field_147484_a.isEmpty())
+        this.theProfiler.endStartSection("pendingBlockEntities");
+
+        if (!this.addedTileEntityList.isEmpty())
         {
-            for (int j1 = 0; j1 < this.field_147484_a.size(); ++j1)
+            for (int j1 = 0; j1 < this.addedTileEntityList.size(); ++j1)
             {
-                TileEntity tileentity1 = (TileEntity)this.field_147484_a.get(j1);
+                TileEntity tileentity1 = (TileEntity)this.addedTileEntityList.get(j1);
 
-                if (!tileentity1.func_145837_r())
+                if (!tileentity1.isInvalid())
                 {
-                    if (!this.field_147482_g.contains(tileentity1))
+                    if (!this.loadedTileEntityList.contains(tileentity1))
                     {
-                        this.func_175700_a(tileentity1);
+                        this.addTileEntity(tileentity1);
                     }
 
-                    if (this.func_175667_e(tileentity1.func_174877_v()))
+                    if (this.isBlockLoaded(tileentity1.getPos()))
                     {
-                        Chunk chunk = this.func_175726_f(tileentity1.func_174877_v());
-                        IBlockState iblockstate = chunk.func_177435_g(tileentity1.func_174877_v());
-                        chunk.func_177426_a(tileentity1.func_174877_v(), tileentity1);
-                        this.func_184138_a(tileentity1.func_174877_v(), iblockstate, iblockstate, 3);
+                        Chunk chunk = this.getChunkFromBlockCoords(tileentity1.getPos());
+                        IBlockState iblockstate = chunk.getBlockState(tileentity1.getPos());
+                        chunk.addTileEntity(tileentity1.getPos(), tileentity1);
+                        this.notifyBlockUpdate(tileentity1.getPos(), iblockstate, iblockstate, 3);
                     }
                 }
             }
 
-            this.field_147484_a.clear();
+            this.addedTileEntityList.clear();
         }
 
-        this.field_72984_F.func_76319_b();
-        this.field_72984_F.func_76319_b();
+        this.theProfiler.endSection();
+        this.theProfiler.endSection();
     }
 
-    protected void func_184147_l()
+    protected void tickPlayers()
     {
     }
 
-    public boolean func_175700_a(TileEntity p_175700_1_)
+    public boolean addTileEntity(TileEntity tile)
     {
-        boolean flag = this.field_147482_g.add(p_175700_1_);
+        // Forge - set the world early as vanilla doesn't set it until next tick
+        if (tile.getWorld() != this) tile.setWorld(this);
+        // Forge: wait to add new TE if we're currently processing existing ones
+        if (processingLoadedTiles) return addedTileEntityList.add(tile);
 
-        if (flag && p_175700_1_ instanceof ITickable)
+        boolean flag = this.loadedTileEntityList.add(tile);
+
+        if (flag && tile instanceof ITickable)
         {
-            this.field_175730_i.add(p_175700_1_);
+            this.tickableTileEntities.add(tile);
         }
+        tile.onLoad();
 
-        if (this.field_72995_K)
+        if (this.isRemote)
         {
-            BlockPos blockpos = p_175700_1_.func_174877_v();
-            IBlockState iblockstate = this.func_180495_p(blockpos);
-            this.func_184138_a(blockpos, iblockstate, iblockstate, 2);
+            BlockPos blockpos = tile.getPos();
+            IBlockState iblockstate = this.getBlockState(blockpos);
+            this.notifyBlockUpdate(blockpos, iblockstate, iblockstate, 2);
         }
 
         return flag;
     }
 
-    public void func_147448_a(Collection<TileEntity> p_147448_1_)
+    public void addTileEntities(Collection<TileEntity> tileEntityCollection)
     {
-        if (this.field_147481_N)
+        if (this.processingLoadedTiles)
         {
-            this.field_147484_a.addAll(p_147448_1_);
+            for (TileEntity te : tileEntityCollection)
+            {
+                if (te.getWorld() != this) // Forge - set the world early as vanilla doesn't set it until next tick
+                    te.setWorld(this);
+            }
+            this.addedTileEntityList.addAll(tileEntityCollection);
         }
         else
         {
-            for (TileEntity tileentity : p_147448_1_)
+            for (TileEntity tileentity : tileEntityCollection)
             {
-                this.func_175700_a(tileentity);
+                this.addTileEntity(tileentity);
             }
         }
     }
 
-    public void func_72870_g(Entity p_72870_1_)
+    public void updateEntity(Entity ent)
     {
-        this.func_72866_a(p_72870_1_, true);
+        this.updateEntityWithOptionalForce(ent, true);
     }
 
-    public void func_72866_a(Entity p_72866_1_, boolean p_72866_2_)
+    public void updateEntityWithOptionalForce(Entity entityIn, boolean forceUpdate)
     {
-        int i = MathHelper.func_76128_c(p_72866_1_.field_70165_t);
-        int j = MathHelper.func_76128_c(p_72866_1_.field_70161_v);
-        int k = 32;
+        int i = MathHelper.floor(entityIn.posX);
+        int j = MathHelper.floor(entityIn.posZ);
+        boolean isForced = getPersistentChunks().containsKey(new net.minecraft.util.math.ChunkPos(i >> 4, j >> 4));
+        int k = isForced ? 0 : 32;
+        boolean canUpdate = !forceUpdate || this.isAreaLoaded(i - k, 0, j - k, i + k, 0, j + k, true);
+        if (!canUpdate) canUpdate = net.minecraftforge.event.ForgeEventFactory.canEntityUpdate(entityIn);
 
-        if (!p_72866_2_ || this.func_175663_a(i - 32, 0, j - 32, i + 32, 0, j + 32, true))
+        if (canUpdate)
         {
-            p_72866_1_.field_70142_S = p_72866_1_.field_70165_t;
-            p_72866_1_.field_70137_T = p_72866_1_.field_70163_u;
-            p_72866_1_.field_70136_U = p_72866_1_.field_70161_v;
-            p_72866_1_.field_70126_B = p_72866_1_.field_70177_z;
-            p_72866_1_.field_70127_C = p_72866_1_.field_70125_A;
+            entityIn.lastTickPosX = entityIn.posX;
+            entityIn.lastTickPosY = entityIn.posY;
+            entityIn.lastTickPosZ = entityIn.posZ;
+            entityIn.prevRotationYaw = entityIn.rotationYaw;
+            entityIn.prevRotationPitch = entityIn.rotationPitch;
 
-            if (p_72866_2_ && p_72866_1_.field_70175_ag)
+            if (forceUpdate && entityIn.addedToChunk)
             {
-                ++p_72866_1_.field_70173_aa;
+                ++entityIn.ticksExisted;
 
-                if (p_72866_1_.func_184218_aH())
+                if (entityIn.isRiding())
                 {
-                    p_72866_1_.func_70098_U();
+                    entityIn.updateRidden();
                 }
                 else
                 {
-                    p_72866_1_.func_70071_h_();
+                    if(!entityIn.updateBlocked)
+                    entityIn.onUpdate();
                 }
             }
 
-            this.field_72984_F.func_76320_a("chunkCheck");
+            this.theProfiler.startSection("chunkCheck");
 
-            if (Double.isNaN(p_72866_1_.field_70165_t) || Double.isInfinite(p_72866_1_.field_70165_t))
+            if (Double.isNaN(entityIn.posX) || Double.isInfinite(entityIn.posX))
             {
-                p_72866_1_.field_70165_t = p_72866_1_.field_70142_S;
+                entityIn.posX = entityIn.lastTickPosX;
             }
 
-            if (Double.isNaN(p_72866_1_.field_70163_u) || Double.isInfinite(p_72866_1_.field_70163_u))
+            if (Double.isNaN(entityIn.posY) || Double.isInfinite(entityIn.posY))
             {
-                p_72866_1_.field_70163_u = p_72866_1_.field_70137_T;
+                entityIn.posY = entityIn.lastTickPosY;
             }
 
-            if (Double.isNaN(p_72866_1_.field_70161_v) || Double.isInfinite(p_72866_1_.field_70161_v))
+            if (Double.isNaN(entityIn.posZ) || Double.isInfinite(entityIn.posZ))
             {
-                p_72866_1_.field_70161_v = p_72866_1_.field_70136_U;
+                entityIn.posZ = entityIn.lastTickPosZ;
             }
 
-            if (Double.isNaN((double)p_72866_1_.field_70125_A) || Double.isInfinite((double)p_72866_1_.field_70125_A))
+            if (Double.isNaN((double)entityIn.rotationPitch) || Double.isInfinite((double)entityIn.rotationPitch))
             {
-                p_72866_1_.field_70125_A = p_72866_1_.field_70127_C;
+                entityIn.rotationPitch = entityIn.prevRotationPitch;
             }
 
-            if (Double.isNaN((double)p_72866_1_.field_70177_z) || Double.isInfinite((double)p_72866_1_.field_70177_z))
+            if (Double.isNaN((double)entityIn.rotationYaw) || Double.isInfinite((double)entityIn.rotationYaw))
             {
-                p_72866_1_.field_70177_z = p_72866_1_.field_70126_B;
+                entityIn.rotationYaw = entityIn.prevRotationYaw;
             }
 
-            int l = MathHelper.func_76128_c(p_72866_1_.field_70165_t / 16.0D);
-            int i1 = MathHelper.func_76128_c(p_72866_1_.field_70163_u / 16.0D);
-            int j1 = MathHelper.func_76128_c(p_72866_1_.field_70161_v / 16.0D);
+            int l = MathHelper.floor(entityIn.posX / 16.0D);
+            int i1 = MathHelper.floor(entityIn.posY / 16.0D);
+            int j1 = MathHelper.floor(entityIn.posZ / 16.0D);
 
-            if (!p_72866_1_.field_70175_ag || p_72866_1_.field_70176_ah != l || p_72866_1_.field_70162_ai != i1 || p_72866_1_.field_70164_aj != j1)
+            if (!entityIn.addedToChunk || entityIn.chunkCoordX != l || entityIn.chunkCoordY != i1 || entityIn.chunkCoordZ != j1)
             {
-                if (p_72866_1_.field_70175_ag && this.func_175680_a(p_72866_1_.field_70176_ah, p_72866_1_.field_70164_aj, true))
+                if (entityIn.addedToChunk && this.isChunkLoaded(entityIn.chunkCoordX, entityIn.chunkCoordZ, true))
                 {
-                    this.func_72964_e(p_72866_1_.field_70176_ah, p_72866_1_.field_70164_aj).func_76608_a(p_72866_1_, p_72866_1_.field_70162_ai);
+                    this.getChunkFromChunkCoords(entityIn.chunkCoordX, entityIn.chunkCoordZ).removeEntityAtIndex(entityIn, entityIn.chunkCoordY);
                 }
 
-                if (!p_72866_1_.func_184189_br() && !this.func_175680_a(l, j1, true))
+                if (!entityIn.setPositionNonDirty() && !this.isChunkLoaded(l, j1, true))
                 {
-                    p_72866_1_.field_70175_ag = false;
+                    entityIn.addedToChunk = false;
                 }
                 else
                 {
-                    this.func_72964_e(l, j1).func_76612_a(p_72866_1_);
+                    this.getChunkFromChunkCoords(l, j1).addEntity(entityIn);
                 }
             }
 
-            this.field_72984_F.func_76319_b();
+            this.theProfiler.endSection();
 
-            if (p_72866_2_ && p_72866_1_.field_70175_ag)
+            if (forceUpdate && entityIn.addedToChunk)
             {
-                for (Entity entity : p_72866_1_.func_184188_bt())
+                for (Entity entity : entityIn.getPassengers())
                 {
-                    if (!entity.field_70128_L && entity.func_184187_bx() == p_72866_1_)
+                    if (!entity.isDead && entity.getRidingEntity() == entityIn)
                     {
-                        this.func_72870_g(entity);
+                        this.updateEntity(entity);
                     }
                     else
                     {
-                        entity.func_184210_p();
+                        entity.dismountRidingEntity();
                     }
                 }
             }
         }
     }
 
-    public boolean func_72855_b(AxisAlignedBB p_72855_1_)
+    public boolean checkNoEntityCollision(AxisAlignedBB bb)
     {
-        return this.func_72917_a(p_72855_1_, (Entity)null);
+        return this.checkNoEntityCollision(bb, (Entity)null);
     }
 
-    public boolean func_72917_a(AxisAlignedBB p_72917_1_, @Nullable Entity p_72917_2_)
+    public boolean checkNoEntityCollision(AxisAlignedBB bb, @Nullable Entity entityIn)
     {
-        List<Entity> list = this.func_72839_b((Entity)null, p_72917_1_);
+        List<Entity> list = this.getEntitiesWithinAABBExcludingEntity((Entity)null, bb);
 
         for (int i = 0; i < list.size(); ++i)
         {
             Entity entity = (Entity)list.get(i);
 
-            if (!entity.field_70128_L && entity.field_70156_m && entity != p_72917_2_ && (p_72917_2_ == null || entity.func_184223_x(p_72917_2_)))
+            if (!entity.isDead && entity.preventEntitySpawning && entity != entityIn && (entityIn == null || entity.isRidingSameEntity(entityIn)))
             {
                 return false;
             }
@@ -1909,15 +2233,15 @@
         return true;
     }
 
-    public boolean func_72829_c(AxisAlignedBB p_72829_1_)
+    public boolean checkBlockCollision(AxisAlignedBB bb)
     {
-        int i = MathHelper.func_76128_c(p_72829_1_.field_72340_a);
-        int j = MathHelper.func_76143_f(p_72829_1_.field_72336_d);
-        int k = MathHelper.func_76128_c(p_72829_1_.field_72338_b);
-        int l = MathHelper.func_76143_f(p_72829_1_.field_72337_e);
-        int i1 = MathHelper.func_76128_c(p_72829_1_.field_72339_c);
-        int j1 = MathHelper.func_76143_f(p_72829_1_.field_72334_f);
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+        int i = MathHelper.floor(bb.minX);
+        int j = MathHelper.ceil(bb.maxX);
+        int k = MathHelper.floor(bb.minY);
+        int l = MathHelper.ceil(bb.maxY);
+        int i1 = MathHelper.floor(bb.minZ);
+        int j1 = MathHelper.ceil(bb.maxZ);
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
         for (int k1 = i; k1 < j; ++k1)
         {
@@ -1925,30 +2249,30 @@
             {
                 for (int i2 = i1; i2 < j1; ++i2)
                 {
-                    IBlockState iblockstate = this.func_180495_p(blockpos$pooledmutableblockpos.func_181079_c(k1, l1, i2));
+                    IBlockState iblockstate = this.getBlockState(blockpos$pooledmutableblockpos.setPos(k1, l1, i2));
 
-                    if (iblockstate.func_185904_a() != Material.field_151579_a)
+                    if (iblockstate.getMaterial() != Material.AIR)
                     {
-                        blockpos$pooledmutableblockpos.func_185344_t();
+                        blockpos$pooledmutableblockpos.release();
                         return true;
                     }
                 }
             }
         }
 
-        blockpos$pooledmutableblockpos.func_185344_t();
+        blockpos$pooledmutableblockpos.release();
         return false;
     }
 
-    public boolean func_72953_d(AxisAlignedBB p_72953_1_)
+    public boolean containsAnyLiquid(AxisAlignedBB bb)
     {
-        int i = MathHelper.func_76128_c(p_72953_1_.field_72340_a);
-        int j = MathHelper.func_76143_f(p_72953_1_.field_72336_d);
-        int k = MathHelper.func_76128_c(p_72953_1_.field_72338_b);
-        int l = MathHelper.func_76143_f(p_72953_1_.field_72337_e);
-        int i1 = MathHelper.func_76128_c(p_72953_1_.field_72339_c);
-        int j1 = MathHelper.func_76143_f(p_72953_1_.field_72334_f);
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+        int i = MathHelper.floor(bb.minX);
+        int j = MathHelper.ceil(bb.maxX);
+        int k = MathHelper.floor(bb.minY);
+        int l = MathHelper.ceil(bb.maxY);
+        int i1 = MathHelper.floor(bb.minZ);
+        int j1 = MathHelper.ceil(bb.maxZ);
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
         for (int k1 = i; k1 < j; ++k1)
         {
@@ -1956,33 +2280,33 @@
             {
                 for (int i2 = i1; i2 < j1; ++i2)
                 {
-                    IBlockState iblockstate = this.func_180495_p(blockpos$pooledmutableblockpos.func_181079_c(k1, l1, i2));
+                    IBlockState iblockstate = this.getBlockState(blockpos$pooledmutableblockpos.setPos(k1, l1, i2));
 
-                    if (iblockstate.func_185904_a().func_76224_d())
+                    if (iblockstate.getMaterial().isLiquid())
                     {
-                        blockpos$pooledmutableblockpos.func_185344_t();
+                        blockpos$pooledmutableblockpos.release();
                         return true;
                     }
                 }
             }
         }
 
-        blockpos$pooledmutableblockpos.func_185344_t();
+        blockpos$pooledmutableblockpos.release();
         return false;
     }
 
-    public boolean func_147470_e(AxisAlignedBB p_147470_1_)
+    public boolean isFlammableWithin(AxisAlignedBB bb)
     {
-        int i = MathHelper.func_76128_c(p_147470_1_.field_72340_a);
-        int j = MathHelper.func_76143_f(p_147470_1_.field_72336_d);
-        int k = MathHelper.func_76128_c(p_147470_1_.field_72338_b);
-        int l = MathHelper.func_76143_f(p_147470_1_.field_72337_e);
-        int i1 = MathHelper.func_76128_c(p_147470_1_.field_72339_c);
-        int j1 = MathHelper.func_76143_f(p_147470_1_.field_72334_f);
+        int i = MathHelper.floor(bb.minX);
+        int j = MathHelper.ceil(bb.maxX);
+        int k = MathHelper.floor(bb.minY);
+        int l = MathHelper.ceil(bb.maxY);
+        int i1 = MathHelper.floor(bb.minZ);
+        int j1 = MathHelper.ceil(bb.maxZ);
 
-        if (this.func_175663_a(i, k, i1, j, l, j1, true))
+        if (this.isAreaLoaded(i, k, i1, j, l, j1, true))
         {
-            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
             for (int k1 = i; k1 < j; ++k1)
             {
@@ -1990,41 +2314,46 @@
                 {
                     for (int i2 = i1; i2 < j1; ++i2)
                     {
-                        Block block = this.func_180495_p(blockpos$pooledmutableblockpos.func_181079_c(k1, l1, i2)).func_177230_c();
+                        Block block = this.getBlockState(blockpos$pooledmutableblockpos.setPos(k1, l1, i2)).getBlock();
 
-                        if (block == Blocks.field_150480_ab || block == Blocks.field_150356_k || block == Blocks.field_150353_l)
+                        if (block == Blocks.FIRE || block == Blocks.FLOWING_LAVA || block == Blocks.LAVA)
                         {
-                            blockpos$pooledmutableblockpos.func_185344_t();
+                            blockpos$pooledmutableblockpos.release();
                             return true;
                         }
+                        else if (block.isBurning(this, new BlockPos(k1, l1, i2)))
+                        {
+                            blockpos$pooledmutableblockpos.release();
+                            return true;
+                        }
                     }
                 }
             }
 
-            blockpos$pooledmutableblockpos.func_185344_t();
+            blockpos$pooledmutableblockpos.release();
         }
 
         return false;
     }
 
-    public boolean func_72918_a(AxisAlignedBB p_72918_1_, Material p_72918_2_, Entity p_72918_3_)
+    public boolean handleMaterialAcceleration(AxisAlignedBB bb, Material materialIn, Entity entityIn)
     {
-        int i = MathHelper.func_76128_c(p_72918_1_.field_72340_a);
-        int j = MathHelper.func_76143_f(p_72918_1_.field_72336_d);
-        int k = MathHelper.func_76128_c(p_72918_1_.field_72338_b);
-        int l = MathHelper.func_76143_f(p_72918_1_.field_72337_e);
-        int i1 = MathHelper.func_76128_c(p_72918_1_.field_72339_c);
-        int j1 = MathHelper.func_76143_f(p_72918_1_.field_72334_f);
+        int i = MathHelper.floor(bb.minX);
+        int j = MathHelper.ceil(bb.maxX);
+        int k = MathHelper.floor(bb.minY);
+        int l = MathHelper.ceil(bb.maxY);
+        int i1 = MathHelper.floor(bb.minZ);
+        int j1 = MathHelper.ceil(bb.maxZ);
 
-        if (!this.func_175663_a(i, k, i1, j, l, j1, true))
+        if (!this.isAreaLoaded(i, k, i1, j, l, j1, true))
         {
             return false;
         }
         else
         {
             boolean flag = false;
-            Vec3d vec3d = Vec3d.field_186680_a;
-            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+            Vec3d vec3d = Vec3d.ZERO;
+            BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
             for (int k1 = i; k1 < j; ++k1)
             {
@@ -2032,48 +2361,58 @@
                 {
                     for (int i2 = i1; i2 < j1; ++i2)
                     {
-                        blockpos$pooledmutableblockpos.func_181079_c(k1, l1, i2);
-                        IBlockState iblockstate = this.func_180495_p(blockpos$pooledmutableblockpos);
-                        Block block = iblockstate.func_177230_c();
+                        blockpos$pooledmutableblockpos.setPos(k1, l1, i2);
+                        IBlockState iblockstate = this.getBlockState(blockpos$pooledmutableblockpos);
+                        Block block = iblockstate.getBlock();
 
-                        if (iblockstate.func_185904_a() == p_72918_2_)
+                        Boolean result = block.isEntityInsideMaterial(this, blockpos$pooledmutableblockpos, iblockstate, entityIn, (double)l, materialIn, false);
+                        if (result != null && result == true)
                         {
-                            double d0 = (double)((float)(l1 + 1) - BlockLiquid.func_149801_b(((Integer)iblockstate.func_177229_b(BlockLiquid.field_176367_b)).intValue()));
+                            // Forge: When requested call blocks modifyAcceleration method, and more importantly cause this method to return true, which results in an entity being "inWater"
+                            flag = true;
+                            vec3d = block.modifyAcceleration(this, blockpos$pooledmutableblockpos, entityIn, vec3d);
+                            continue;
+                        }
+                        else if (result != null && result == false) continue;
 
+                        if (iblockstate.getMaterial() == materialIn)
+                        {
+                            double d0 = (double)((float)(l1 + 1) - BlockLiquid.getLiquidHeightPercent(((Integer)iblockstate.getValue(BlockLiquid.LEVEL)).intValue()));
+
                             if ((double)l >= d0)
                             {
                                 flag = true;
-                                vec3d = block.func_176197_a(this, blockpos$pooledmutableblockpos, p_72918_3_, vec3d);
+                                vec3d = block.modifyAcceleration(this, blockpos$pooledmutableblockpos, entityIn, vec3d);
                             }
                         }
                     }
                 }
             }
 
-            blockpos$pooledmutableblockpos.func_185344_t();
+            blockpos$pooledmutableblockpos.release();
 
-            if (vec3d.func_72433_c() > 0.0D && p_72918_3_.func_96092_aw())
+            if (vec3d.lengthVector() > 0.0D && entityIn.isPushedByWater())
             {
-                vec3d = vec3d.func_72432_b();
+                vec3d = vec3d.normalize();
                 double d1 = 0.014D;
-                p_72918_3_.field_70159_w += vec3d.field_72450_a * 0.014D;
-                p_72918_3_.field_70181_x += vec3d.field_72448_b * 0.014D;
-                p_72918_3_.field_70179_y += vec3d.field_72449_c * 0.014D;
+                entityIn.motionX += vec3d.xCoord * 0.014D;
+                entityIn.motionY += vec3d.yCoord * 0.014D;
+                entityIn.motionZ += vec3d.zCoord * 0.014D;
             }
 
             return flag;
         }
     }
 
-    public boolean func_72875_a(AxisAlignedBB p_72875_1_, Material p_72875_2_)
+    public boolean isMaterialInBB(AxisAlignedBB bb, Material materialIn)
     {
-        int i = MathHelper.func_76128_c(p_72875_1_.field_72340_a);
-        int j = MathHelper.func_76143_f(p_72875_1_.field_72336_d);
-        int k = MathHelper.func_76128_c(p_72875_1_.field_72338_b);
-        int l = MathHelper.func_76143_f(p_72875_1_.field_72337_e);
-        int i1 = MathHelper.func_76128_c(p_72875_1_.field_72339_c);
-        int j1 = MathHelper.func_76143_f(p_72875_1_.field_72334_f);
-        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+        int i = MathHelper.floor(bb.minX);
+        int j = MathHelper.ceil(bb.maxX);
+        int k = MathHelper.floor(bb.minY);
+        int l = MathHelper.ceil(bb.maxY);
+        int i1 = MathHelper.floor(bb.minZ);
+        int j1 = MathHelper.ceil(bb.maxZ);
+        BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
         for (int k1 = i; k1 < j; ++k1)
         {
@@ -2081,37 +2420,47 @@
             {
                 for (int i2 = i1; i2 < j1; ++i2)
                 {
-                    if (this.func_180495_p(blockpos$pooledmutableblockpos.func_181079_c(k1, l1, i2)).func_185904_a() == p_72875_2_)
+                    if (this.getBlockState(blockpos$pooledmutableblockpos.setPos(k1, l1, i2)).getMaterial() == materialIn)
                     {
-                        blockpos$pooledmutableblockpos.func_185344_t();
+                        blockpos$pooledmutableblockpos.release();
                         return true;
                     }
                 }
             }
         }
 
-        blockpos$pooledmutableblockpos.func_185344_t();
+        blockpos$pooledmutableblockpos.release();
         return false;
     }
 
-    public Explosion func_72876_a(@Nullable Entity p_72876_1_, double p_72876_2_, double p_72876_4_, double p_72876_6_, float p_72876_8_, boolean p_72876_9_)
+    public Explosion createExplosion(@Nullable Entity entityIn, double x, double y, double z, float strength, boolean isSmoking)
     {
-        return this.func_72885_a(p_72876_1_, p_72876_2_, p_72876_4_, p_72876_6_, p_72876_8_, false, p_72876_9_);
+        return this.newExplosion(entityIn, x, y, z, strength, false, isSmoking);
     }
 
-    public Explosion func_72885_a(@Nullable Entity p_72885_1_, double p_72885_2_, double p_72885_4_, double p_72885_6_, float p_72885_8_, boolean p_72885_9_, boolean p_72885_10_)
+    public Explosion newExplosion(@Nullable Entity entityIn, double x, double y, double z, float strength, boolean isFlaming, boolean isSmoking)
     {
-        Explosion explosion = new Explosion(this, p_72885_1_, p_72885_2_, p_72885_4_, p_72885_6_, p_72885_8_, p_72885_9_, p_72885_10_);
-        explosion.func_77278_a();
-        explosion.func_77279_a(true);
+        Explosion explosion = new Explosion(this, entityIn, x, y, z, strength, isFlaming, isSmoking);
+        Explosive exp = entityIn instanceof Explosive ? (Explosive)entityIn.getBukkitEntity() : new CraftCustomExplosive(entityIn.getEntityWorld().getServer(),entityIn,entityIn.getClass(),strength);
+        ExplosionPrimeEvent event = new ExplosionPrimeEvent(exp);
+        CraftEventFactory.callEvent(event);
+        if(event.isCancelled())
+        {
+            explosion.isCanceled = true;
+            return explosion;
+        }
+        explosion.explosionSize = event.getRadius();
+        if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
+        explosion.doExplosionA();
+        explosion.doExplosionB(true);
         return explosion;
     }
 
-    public float func_72842_a(Vec3d p_72842_1_, AxisAlignedBB p_72842_2_)
+    public float getBlockDensity(Vec3d vec, AxisAlignedBB bb)
     {
-        double d0 = 1.0D / ((p_72842_2_.field_72336_d - p_72842_2_.field_72340_a) * 2.0D + 1.0D);
-        double d1 = 1.0D / ((p_72842_2_.field_72337_e - p_72842_2_.field_72338_b) * 2.0D + 1.0D);
-        double d2 = 1.0D / ((p_72842_2_.field_72334_f - p_72842_2_.field_72339_c) * 2.0D + 1.0D);
+        double d0 = 1.0D / ((bb.maxX - bb.minX) * 2.0D + 1.0D);
+        double d1 = 1.0D / ((bb.maxY - bb.minY) * 2.0D + 1.0D);
+        double d2 = 1.0D / ((bb.maxZ - bb.minZ) * 2.0D + 1.0D);
         double d3 = (1.0D - Math.floor(1.0D / d0) * d0) / 2.0D;
         double d4 = (1.0D - Math.floor(1.0D / d2) * d2) / 2.0D;
 
@@ -2126,11 +2475,11 @@
                 {
                     for (float f2 = 0.0F; f2 <= 1.0F; f2 = (float)((double)f2 + d2))
                     {
-                        double d5 = p_72842_2_.field_72340_a + (p_72842_2_.field_72336_d - p_72842_2_.field_72340_a) * (double)f;
-                        double d6 = p_72842_2_.field_72338_b + (p_72842_2_.field_72337_e - p_72842_2_.field_72338_b) * (double)f1;
-                        double d7 = p_72842_2_.field_72339_c + (p_72842_2_.field_72334_f - p_72842_2_.field_72339_c) * (double)f2;
+                        double d5 = bb.minX + (bb.maxX - bb.minX) * (double)f;
+                        double d6 = bb.minY + (bb.maxY - bb.minY) * (double)f1;
+                        double d7 = bb.minZ + (bb.maxZ - bb.minZ) * (double)f2;
 
-                        if (this.func_72933_a(new Vec3d(d5 + d3, d6, d7 + d4), p_72842_1_) == null)
+                        if (this.rayTraceBlocks(new Vec3d(d5 + d3, d6, d7 + d4), vec) == null)
                         {
                             ++i;
                         }
@@ -2148,14 +2497,14 @@
         }
     }
 
-    public boolean func_175719_a(@Nullable EntityPlayer p_175719_1_, BlockPos p_175719_2_, EnumFacing p_175719_3_)
+    public boolean extinguishFire(@Nullable EntityPlayer player, BlockPos pos, EnumFacing side)
     {
-        p_175719_2_ = p_175719_2_.func_177972_a(p_175719_3_);
+        pos = pos.offset(side);
 
-        if (this.func_180495_p(p_175719_2_).func_177230_c() == Blocks.field_150480_ab)
+        if (this.getBlockState(pos).getBlock() == Blocks.FIRE)
         {
-            this.func_180498_a(p_175719_1_, 1009, p_175719_2_, 0);
-            this.func_175698_g(p_175719_2_);
+            this.playEvent(player, 1009, pos, 0);
+            this.setBlockToAir(pos);
             return true;
         }
         else
@@ -2165,21 +2514,21 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public String func_72981_t()
+    public String getDebugLoadedEntities()
     {
-        return "All: " + this.field_72996_f.size();
+        return "All: " + this.loadedEntityList.size();
     }
 
     @SideOnly(Side.CLIENT)
-    public String func_72827_u()
+    public String getProviderName()
     {
-        return this.field_73020_y.func_73148_d();
+        return this.chunkProvider.makeString();
     }
 
     @Nullable
-    public TileEntity func_175625_s(BlockPos p_175625_1_)
+    public TileEntity getTileEntity(BlockPos pos)
     {
-        if (this.func_189509_E(p_175625_1_))
+        if (this.isOutsideBuildHeight(pos))
         {
             return null;
         }
@@ -2187,19 +2536,19 @@
         {
             TileEntity tileentity = null;
 
-            if (this.field_147481_N)
+            if (this.processingLoadedTiles)
             {
-                tileentity = this.func_189508_F(p_175625_1_);
+                tileentity = this.getPendingTileEntityAt(pos);
             }
 
             if (tileentity == null)
             {
-                tileentity = this.func_175726_f(p_175625_1_).func_177424_a(p_175625_1_, Chunk.EnumCreateEntityType.IMMEDIATE);
+                tileentity = this.getChunkFromBlockCoords(pos).getTileEntity(pos, Chunk.EnumCreateEntityType.IMMEDIATE);
             }
 
             if (tileentity == null)
             {
-                tileentity = this.func_189508_F(p_175625_1_);
+                tileentity = this.getPendingTileEntityAt(pos);
             }
 
             return tileentity;
@@ -2207,13 +2556,13 @@
     }
 
     @Nullable
-    private TileEntity func_189508_F(BlockPos p_189508_1_)
+    private TileEntity getPendingTileEntityAt(BlockPos p_189508_1_)
     {
-        for (int i = 0; i < this.field_147484_a.size(); ++i)
+        for (int i = 0; i < this.addedTileEntityList.size(); ++i)
         {
-            TileEntity tileentity = (TileEntity)this.field_147484_a.get(i);
+            TileEntity tileentity = (TileEntity)this.addedTileEntityList.get(i);
 
-            if (!tileentity.func_145837_r() && tileentity.func_174877_v().equals(p_189508_1_))
+            if (!tileentity.isInvalid() && tileentity.getPos().equals(p_189508_1_))
             {
                 return tileentity;
             }
@@ -2222,276 +2571,299 @@
         return null;
     }
 
-    public void func_175690_a(BlockPos p_175690_1_, @Nullable TileEntity p_175690_2_)
+    public void setTileEntity(BlockPos pos, @Nullable TileEntity tileEntityIn)
     {
-        if (!this.func_189509_E(p_175690_1_))
+        pos = pos.toImmutable(); // Forge - prevent mutable BlockPos leaks
+        if (!this.isOutsideBuildHeight(pos))
         {
-            if (p_175690_2_ != null && !p_175690_2_.func_145837_r())
+            if (tileEntityIn != null && !tileEntityIn.isInvalid())
             {
-                if (this.field_147481_N)
+                if (this.processingLoadedTiles)
                 {
-                    p_175690_2_.func_174878_a(p_175690_1_);
-                    Iterator<TileEntity> iterator = this.field_147484_a.iterator();
+                    tileEntityIn.setPos(pos);
+                    if (tileEntityIn.getWorld() != this)
+                        tileEntityIn.setWorld(this); // Forge - set the world early as vanilla doesn't set it until next tick
+                    Iterator<TileEntity> iterator = this.addedTileEntityList.iterator();
 
                     while (iterator.hasNext())
                     {
                         TileEntity tileentity = (TileEntity)iterator.next();
 
-                        if (tileentity.func_174877_v().equals(p_175690_1_))
+                        if (tileentity.getPos().equals(pos))
                         {
-                            tileentity.func_145843_s();
+                            tileentity.invalidate();
                             iterator.remove();
                         }
                     }
 
-                    this.field_147484_a.add(p_175690_2_);
+                    this.addedTileEntityList.add(tileEntityIn);
                 }
                 else
                 {
-                    this.func_175726_f(p_175690_1_).func_177426_a(p_175690_1_, p_175690_2_);
-                    this.func_175700_a(p_175690_2_);
+                    Chunk chunk = this.getChunkFromBlockCoords(pos);
+                    if (chunk != null) chunk.addTileEntity(pos, tileEntityIn);
+                    this.addTileEntity(tileEntityIn);
                 }
             }
         }
     }
 
-    public void func_175713_t(BlockPos p_175713_1_)
+    public void removeTileEntity(BlockPos pos)
     {
-        TileEntity tileentity = this.func_175625_s(p_175713_1_);
+        TileEntity tileentity = this.getTileEntity(pos);
 
-        if (tileentity != null && this.field_147481_N)
+        if (tileentity != null && this.processingLoadedTiles)
         {
-            tileentity.func_145843_s();
-            this.field_147484_a.remove(tileentity);
+            tileentity.invalidate();
+            this.addedTileEntityList.remove(tileentity);
+            if (!(tileentity instanceof ITickable)) //Forge: If they are not tickable they wont be removed in the update loop.
+                this.loadedTileEntityList.remove(tileentity);
         }
         else
         {
             if (tileentity != null)
             {
-                this.field_147484_a.remove(tileentity);
-                this.field_147482_g.remove(tileentity);
-                this.field_175730_i.remove(tileentity);
+                this.addedTileEntityList.remove(tileentity);
+                this.loadedTileEntityList.remove(tileentity);
+                this.tickableTileEntities.remove(tileentity);
             }
 
-            this.func_175726_f(p_175713_1_).func_177425_e(p_175713_1_);
+            this.getChunkFromBlockCoords(pos).removeTileEntity(pos);
         }
+        this.updateComparatorOutputLevel(pos, getBlockState(pos).getBlock()); //Notify neighbors of changes
     }
 
-    public void func_147457_a(TileEntity p_147457_1_)
+    public void markTileEntityForRemoval(TileEntity tileEntityIn)
     {
-        this.field_147483_b.add(p_147457_1_);
+        this.tileEntitiesToBeRemoved.add(tileEntityIn);
     }
 
-    public boolean func_175665_u(BlockPos p_175665_1_)
+    public boolean isBlockFullCube(BlockPos pos)
     {
-        AxisAlignedBB axisalignedbb = this.func_180495_p(p_175665_1_).func_185890_d(this, p_175665_1_);
-        return axisalignedbb != Block.field_185506_k && axisalignedbb.func_72320_b() >= 1.0D;
+        AxisAlignedBB axisalignedbb = this.getBlockState(pos).getCollisionBoundingBox(this, pos);
+        return axisalignedbb != Block.NULL_AABB && axisalignedbb.getAverageEdgeLength() >= 1.0D;
     }
 
-    public boolean func_175677_d(BlockPos p_175677_1_, boolean p_175677_2_)
+    public boolean isBlockNormalCube(BlockPos pos, boolean _default)
     {
-        if (this.func_189509_E(p_175677_1_))
+        if (this.isOutsideBuildHeight(pos))
         {
             return false;
         }
         else
         {
-            Chunk chunk = this.field_73020_y.func_186026_b(p_175677_1_.func_177958_n() >> 4, p_175677_1_.func_177952_p() >> 4);
+            Chunk chunk = this.chunkProvider.getLoadedChunk(pos.getX() >> 4, pos.getZ() >> 4);
 
-            if (chunk != null && !chunk.func_76621_g())
+            if (chunk != null && !chunk.isEmpty())
             {
-                IBlockState iblockstate = this.func_180495_p(p_175677_1_);
-                return iblockstate.func_185904_a().func_76218_k() && iblockstate.func_185917_h();
+                IBlockState iblockstate = this.getBlockState(pos);
+                return iblockstate.getBlock().isNormalCube(iblockstate, this, pos);
             }
             else
             {
-                return p_175677_2_;
+                return _default;
             }
         }
     }
 
-    public void func_72966_v()
+    public void calculateInitialSkylight()
     {
-        int i = this.func_72967_a(1.0F);
+        int i = this.calculateSkylightSubtracted(1.0F);
 
-        if (i != this.field_73008_k)
+        if (i != this.skylightSubtracted)
         {
-            this.field_73008_k = i;
+            this.skylightSubtracted = i;
         }
     }
 
-    public void func_72891_a(boolean p_72891_1_, boolean p_72891_2_)
+    public void setAllowedSpawnTypes(boolean hostile, boolean peaceful)
     {
-        this.field_72985_G = p_72891_1_;
-        this.field_72992_H = p_72891_2_;
+        this.spawnHostileMobs = hostile;
+        this.spawnPeacefulMobs = peaceful;
+        this.provider.setAllowedSpawnTypes(hostile, peaceful);
     }
 
-    public void func_72835_b()
+    public void tick()
     {
-        this.func_72979_l();
+        this.updateWeather();
     }
 
-    protected void func_72947_a()
+    protected void calculateInitialWeather()
     {
-        if (this.field_72986_A.func_76059_o())
+        this.provider.calculateInitialWeather();
+    }
+
+    public void calculateInitialWeatherBody()
+    {
+        if (this.worldInfo.isRaining())
         {
-            this.field_73004_o = 1.0F;
+            this.rainingStrength = 1.0F;
 
-            if (this.field_72986_A.func_76061_m())
+            if (this.worldInfo.isThundering())
             {
-                this.field_73017_q = 1.0F;
+                this.thunderingStrength = 1.0F;
             }
         }
     }
 
-    protected void func_72979_l()
+    protected void updateWeather()
     {
-        if (this.field_73011_w.func_191066_m())
+        this.provider.updateWeather();
+    }
+
+    public void updateWeatherBody()
+    {
+        if (this.provider.hasSkyLight())
         {
-            if (!this.field_72995_K)
+            if (!this.isRemote)
             {
-                boolean flag = this.func_82736_K().func_82766_b("doWeatherCycle");
+                boolean flag = this.getGameRules().getBoolean("doWeatherCycle");
 
                 if (flag)
                 {
-                    int i = this.field_72986_A.func_176133_A();
+                    int i = this.worldInfo.getCleanWeatherTime();
 
                     if (i > 0)
                     {
                         --i;
-                        this.field_72986_A.func_176142_i(i);
-                        this.field_72986_A.func_76090_f(this.field_72986_A.func_76061_m() ? 1 : 2);
-                        this.field_72986_A.func_76080_g(this.field_72986_A.func_76059_o() ? 1 : 2);
+                        this.worldInfo.setCleanWeatherTime(i);
+                        this.worldInfo.setThunderTime(this.worldInfo.isThundering() ? 1 : 2);
+                        this.worldInfo.setRainTime(this.worldInfo.isRaining() ? 1 : 2);
                     }
 
-                    int j = this.field_72986_A.func_76071_n();
+                    int j = this.worldInfo.getThunderTime();
 
                     if (j <= 0)
                     {
-                        if (this.field_72986_A.func_76061_m())
+                        if (this.worldInfo.isThundering())
                         {
-                            this.field_72986_A.func_76090_f(this.field_73012_v.nextInt(12000) + 3600);
+                            this.worldInfo.setThunderTime(this.rand.nextInt(12000) + 3600);
                         }
                         else
                         {
-                            this.field_72986_A.func_76090_f(this.field_73012_v.nextInt(168000) + 12000);
+                            this.worldInfo.setThunderTime(this.rand.nextInt(168000) + 12000);
                         }
                     }
                     else
                     {
                         --j;
-                        this.field_72986_A.func_76090_f(j);
+                        this.worldInfo.setThunderTime(j);
 
                         if (j <= 0)
                         {
-                            this.field_72986_A.func_76069_a(!this.field_72986_A.func_76061_m());
+                            this.worldInfo.setThundering(!this.worldInfo.isThundering());
                         }
                     }
 
-                    int k = this.field_72986_A.func_76083_p();
+                    int k = this.worldInfo.getRainTime();
 
                     if (k <= 0)
                     {
-                        if (this.field_72986_A.func_76059_o())
+                        if (this.worldInfo.isRaining())
                         {
-                            this.field_72986_A.func_76080_g(this.field_73012_v.nextInt(12000) + 12000);
+                            this.worldInfo.setRainTime(this.rand.nextInt(12000) + 12000);
                         }
                         else
                         {
-                            this.field_72986_A.func_76080_g(this.field_73012_v.nextInt(168000) + 12000);
+                            this.worldInfo.setRainTime(this.rand.nextInt(168000) + 12000);
                         }
                     }
                     else
                     {
                         --k;
-                        this.field_72986_A.func_76080_g(k);
+                        this.worldInfo.setRainTime(k);
 
                         if (k <= 0)
                         {
-                            this.field_72986_A.func_76084_b(!this.field_72986_A.func_76059_o());
+                            this.worldInfo.setRaining(!this.worldInfo.isRaining());
                         }
                     }
                 }
 
-                this.field_73018_p = this.field_73017_q;
+                this.prevThunderingStrength = this.thunderingStrength;
 
-                if (this.field_72986_A.func_76061_m())
+                if (this.worldInfo.isThundering())
                 {
-                    this.field_73017_q = (float)((double)this.field_73017_q + 0.01D);
+                    this.thunderingStrength = (float)((double)this.thunderingStrength + 0.01D);
                 }
                 else
                 {
-                    this.field_73017_q = (float)((double)this.field_73017_q - 0.01D);
+                    this.thunderingStrength = (float)((double)this.thunderingStrength - 0.01D);
                 }
 
-                this.field_73017_q = MathHelper.func_76131_a(this.field_73017_q, 0.0F, 1.0F);
-                this.field_73003_n = this.field_73004_o;
+                this.thunderingStrength = MathHelper.clamp(this.thunderingStrength, 0.0F, 1.0F);
+                this.prevRainingStrength = this.rainingStrength;
 
-                if (this.field_72986_A.func_76059_o())
+                if (this.worldInfo.isRaining())
                 {
-                    this.field_73004_o = (float)((double)this.field_73004_o + 0.01D);
+                    this.rainingStrength = (float)((double)this.rainingStrength + 0.01D);
                 }
                 else
                 {
-                    this.field_73004_o = (float)((double)this.field_73004_o - 0.01D);
+                    this.rainingStrength = (float)((double)this.rainingStrength - 0.01D);
                 }
 
-                this.field_73004_o = MathHelper.func_76131_a(this.field_73004_o, 0.0F, 1.0F);
+                this.rainingStrength = MathHelper.clamp(this.rainingStrength, 0.0F, 1.0F);
             }
         }
     }
 
     @SideOnly(Side.CLIENT)
-    protected void func_147467_a(int p_147467_1_, int p_147467_2_, Chunk p_147467_3_)
+    protected void playMoodSoundAndCheckLight(int p_147467_1_, int p_147467_2_, Chunk chunkIn)
     {
-        p_147467_3_.func_76594_o();
+        chunkIn.enqueueRelightChecks();
     }
 
-    protected void func_147456_g()
+    protected void updateBlocks()
     {
     }
 
-    public void func_189507_a(BlockPos p_189507_1_, IBlockState p_189507_2_, Random p_189507_3_)
+    public void immediateBlockTick(BlockPos pos, IBlockState state, Random random)
     {
-        this.field_72999_e = true;
-        p_189507_2_.func_177230_c().func_180650_b(this, p_189507_1_, p_189507_2_, p_189507_3_);
-        this.field_72999_e = false;
+        this.scheduledUpdatesAreImmediate = true;
+        state.getBlock().updateTick(this, pos, state, random);
+        this.scheduledUpdatesAreImmediate = false;
     }
 
-    public boolean func_175675_v(BlockPos p_175675_1_)
+    public boolean canBlockFreezeWater(BlockPos pos)
     {
-        return this.func_175670_e(p_175675_1_, false);
+        return this.canBlockFreeze(pos, false);
     }
 
-    public boolean func_175662_w(BlockPos p_175662_1_)
+    public boolean canBlockFreezeNoWater(BlockPos pos)
     {
-        return this.func_175670_e(p_175662_1_, true);
+        return this.canBlockFreeze(pos, true);
     }
 
-    public boolean func_175670_e(BlockPos p_175670_1_, boolean p_175670_2_)
+    public boolean canBlockFreeze(BlockPos pos, boolean noWaterAdj)
     {
-        Biome biome = this.func_180494_b(p_175670_1_);
-        float f = biome.func_180626_a(p_175670_1_);
+        return this.provider.canBlockFreeze(pos, noWaterAdj);
+    }
 
+    public boolean canBlockFreezeBody(BlockPos pos, boolean noWaterAdj)
+    {
+        Biome biome = this.getBiome(pos);
+        float f = biome.getFloatTemperature(pos);
+
         if (f >= 0.15F)
         {
             return false;
         }
         else
         {
-            if (p_175670_1_.func_177956_o() >= 0 && p_175670_1_.func_177956_o() < 256 && this.func_175642_b(EnumSkyBlock.BLOCK, p_175670_1_) < 10)
+            if (pos.getY() >= 0 && pos.getY() < 256 && this.getLightFor(EnumSkyBlock.BLOCK, pos) < 10)
             {
-                IBlockState iblockstate = this.func_180495_p(p_175670_1_);
-                Block block = iblockstate.func_177230_c();
+                IBlockState iblockstate = this.getBlockState(pos);
+                Block block = iblockstate.getBlock();
 
-                if ((block == Blocks.field_150355_j || block == Blocks.field_150358_i) && ((Integer)iblockstate.func_177229_b(BlockLiquid.field_176367_b)).intValue() == 0)
+                if ((block == Blocks.WATER || block == Blocks.FLOWING_WATER) && ((Integer)iblockstate.getValue(BlockLiquid.LEVEL)).intValue() == 0)
                 {
-                    if (!p_175670_2_)
+                    if (!noWaterAdj)
                     {
                         return true;
                     }
 
-                    boolean flag = this.func_175696_F(p_175670_1_.func_177976_e()) && this.func_175696_F(p_175670_1_.func_177974_f()) && this.func_175696_F(p_175670_1_.func_177978_c()) && this.func_175696_F(p_175670_1_.func_177968_d());
+                    boolean flag = this.isWater(pos.west()) && this.isWater(pos.east()) && this.isWater(pos.north()) && this.isWater(pos.south());
 
                     if (!flag)
                     {
@@ -2504,31 +2876,36 @@
         }
     }
 
-    private boolean func_175696_F(BlockPos p_175696_1_)
+    private boolean isWater(BlockPos pos)
     {
-        return this.func_180495_p(p_175696_1_).func_185904_a() == Material.field_151586_h;
+        return this.getBlockState(pos).getMaterial() == Material.WATER;
     }
 
-    public boolean func_175708_f(BlockPos p_175708_1_, boolean p_175708_2_)
+    public boolean canSnowAt(BlockPos pos, boolean checkLight)
     {
-        Biome biome = this.func_180494_b(p_175708_1_);
-        float f = biome.func_180626_a(p_175708_1_);
+        return this.provider.canSnowAt(pos, checkLight);
+    }
 
+    public boolean canSnowAtBody(BlockPos pos, boolean checkLight)
+    {
+        Biome biome = this.getBiome(pos);
+        float f = biome.getFloatTemperature(pos);
+
         if (f >= 0.15F)
         {
             return false;
         }
-        else if (!p_175708_2_)
+        else if (!checkLight)
         {
             return true;
         }
         else
         {
-            if (p_175708_1_.func_177956_o() >= 0 && p_175708_1_.func_177956_o() < 256 && this.func_175642_b(EnumSkyBlock.BLOCK, p_175708_1_) < 10)
+            if (pos.getY() >= 0 && pos.getY() < 256 && this.getLightFor(EnumSkyBlock.BLOCK, pos) < 10)
             {
-                IBlockState iblockstate = this.func_180495_p(p_175708_1_);
+                IBlockState iblockstate = this.getBlockState(pos);
 
-                if (iblockstate.func_185904_a() == Material.field_151579_a && Blocks.field_150431_aC.func_176196_c(this, p_175708_1_))
+                if (iblockstate.getBlock().isAir(iblockstate, this, pos) && Blocks.SNOW_LAYER.canPlaceBlockAt(this, pos))
                 {
                     return true;
                 }
@@ -2538,32 +2915,33 @@
         }
     }
 
-    public boolean func_175664_x(BlockPos p_175664_1_)
+    public boolean checkLight(BlockPos pos)
     {
         boolean flag = false;
 
-        if (this.field_73011_w.func_191066_m())
+        if (this.provider.hasSkyLight())
         {
-            flag |= this.func_180500_c(EnumSkyBlock.SKY, p_175664_1_);
+            flag |= this.checkLightFor(EnumSkyBlock.SKY, pos);
         }
 
-        flag = flag | this.func_180500_c(EnumSkyBlock.BLOCK, p_175664_1_);
+        flag = flag | this.checkLightFor(EnumSkyBlock.BLOCK, pos);
         return flag;
     }
 
-    private int func_175638_a(BlockPos p_175638_1_, EnumSkyBlock p_175638_2_)
+    private int getRawLight(BlockPos pos, EnumSkyBlock lightType)
     {
-        if (p_175638_2_ == EnumSkyBlock.SKY && this.func_175678_i(p_175638_1_))
+        if (lightType == EnumSkyBlock.SKY && this.canSeeSky(pos))
         {
             return 15;
         }
         else
         {
-            IBlockState iblockstate = this.func_180495_p(p_175638_1_);
-            int i = p_175638_2_ == EnumSkyBlock.SKY ? 0 : iblockstate.func_185906_d();
-            int j = iblockstate.func_185891_c();
+            IBlockState iblockstate = this.getBlockState(pos);
+            int blockLight = iblockstate.getBlock().getLightValue(iblockstate, this, pos);
+            int i = lightType == EnumSkyBlock.SKY ? 0 : blockLight;
+            int j = iblockstate.getBlock().getLightOpacity(iblockstate, this, pos);
 
-            if (j >= 15 && iblockstate.func_185906_d() > 0)
+            if (j >= 15 && blockLight > 0)
             {
                 j = 1;
             }
@@ -2583,12 +2961,12 @@
             }
             else
             {
-                BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+                BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
                 for (EnumFacing enumfacing : EnumFacing.values())
                 {
-                    blockpos$pooledmutableblockpos.func_189533_g(p_175638_1_).func_189536_c(enumfacing);
-                    int k = this.func_175642_b(p_175638_2_, blockpos$pooledmutableblockpos) - j;
+                    blockpos$pooledmutableblockpos.setPos(pos).move(enumfacing);
+                    int k = this.getLightFor(lightType, blockpos$pooledmutableblockpos) - j;
 
                     if (k > i)
                     {
@@ -2597,19 +2975,20 @@
 
                     if (i >= 14)
                     {
+                        blockpos$pooledmutableblockpos.release(); // Forge fix mutable blockpos leak MC-114281
                         return i;
                     }
                 }
 
-                blockpos$pooledmutableblockpos.func_185344_t();
+                blockpos$pooledmutableblockpos.release();
                 return i;
             }
         }
     }
 
-    public boolean func_180500_c(EnumSkyBlock p_180500_1_, BlockPos p_180500_2_)
+    public boolean checkLightFor(EnumSkyBlock lightType, BlockPos pos)
     {
-        if (!this.func_175648_a(p_180500_2_, 17, false))
+        if (!this.isAreaLoaded(pos, 17, false))
         {
             return false;
         }
@@ -2617,61 +2996,61 @@
         {
             int i = 0;
             int j = 0;
-            this.field_72984_F.func_76320_a("getBrightness");
-            int k = this.func_175642_b(p_180500_1_, p_180500_2_);
-            int l = this.func_175638_a(p_180500_2_, p_180500_1_);
-            int i1 = p_180500_2_.func_177958_n();
-            int j1 = p_180500_2_.func_177956_o();
-            int k1 = p_180500_2_.func_177952_p();
+            this.theProfiler.startSection("getBrightness");
+            int k = this.getLightFor(lightType, pos);
+            int l = this.getRawLight(pos, lightType);
+            int i1 = pos.getX();
+            int j1 = pos.getY();
+            int k1 = pos.getZ();
 
             if (l > k)
             {
-                this.field_72994_J[j++] = 133152;
+                this.lightUpdateBlockList[j++] = 133152;
             }
             else if (l < k)
             {
-                this.field_72994_J[j++] = 133152 | k << 18;
+                this.lightUpdateBlockList[j++] = 133152 | k << 18;
 
                 while (i < j)
                 {
-                    int l1 = this.field_72994_J[i++];
+                    int l1 = this.lightUpdateBlockList[i++];
                     int i2 = (l1 & 63) - 32 + i1;
                     int j2 = (l1 >> 6 & 63) - 32 + j1;
                     int k2 = (l1 >> 12 & 63) - 32 + k1;
                     int l2 = l1 >> 18 & 15;
                     BlockPos blockpos = new BlockPos(i2, j2, k2);
-                    int i3 = this.func_175642_b(p_180500_1_, blockpos);
+                    int i3 = this.getLightFor(lightType, blockpos);
 
                     if (i3 == l2)
                     {
-                        this.func_175653_a(p_180500_1_, blockpos, 0);
+                        this.setLightFor(lightType, blockpos, 0);
 
                         if (l2 > 0)
                         {
-                            int j3 = MathHelper.func_76130_a(i2 - i1);
-                            int k3 = MathHelper.func_76130_a(j2 - j1);
-                            int l3 = MathHelper.func_76130_a(k2 - k1);
+                            int j3 = MathHelper.abs(i2 - i1);
+                            int k3 = MathHelper.abs(j2 - j1);
+                            int l3 = MathHelper.abs(k2 - k1);
 
                             if (j3 + k3 + l3 < 17)
                             {
-                                BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.func_185346_s();
+                                BlockPos.PooledMutableBlockPos blockpos$pooledmutableblockpos = BlockPos.PooledMutableBlockPos.retain();
 
                                 for (EnumFacing enumfacing : EnumFacing.values())
                                 {
-                                    int i4 = i2 + enumfacing.func_82601_c();
-                                    int j4 = j2 + enumfacing.func_96559_d();
-                                    int k4 = k2 + enumfacing.func_82599_e();
-                                    blockpos$pooledmutableblockpos.func_181079_c(i4, j4, k4);
-                                    int l4 = Math.max(1, this.func_180495_p(blockpos$pooledmutableblockpos).func_185891_c());
-                                    i3 = this.func_175642_b(p_180500_1_, blockpos$pooledmutableblockpos);
+                                    int i4 = i2 + enumfacing.getFrontOffsetX();
+                                    int j4 = j2 + enumfacing.getFrontOffsetY();
+                                    int k4 = k2 + enumfacing.getFrontOffsetZ();
+                                    blockpos$pooledmutableblockpos.setPos(i4, j4, k4);
+                                    int l4 = Math.max(1, this.getBlockState(blockpos$pooledmutableblockpos).getBlock().getLightOpacity(this.getBlockState(blockpos$pooledmutableblockpos), this, blockpos$pooledmutableblockpos));
+                                    i3 = this.getLightFor(lightType, blockpos$pooledmutableblockpos);
 
-                                    if (i3 == l2 - l4 && j < this.field_72994_J.length)
+                                    if (i3 == l2 - l4 && j < this.lightUpdateBlockList.length)
                                     {
-                                        this.field_72994_J[j++] = i4 - i1 + 32 | j4 - j1 + 32 << 6 | k4 - k1 + 32 << 12 | l2 - l4 << 18;
+                                        this.lightUpdateBlockList[j++] = i4 - i1 + 32 | j4 - j1 + 32 << 6 | k4 - k1 + 32 << 12 | l2 - l4 << 18;
                                     }
                                 }
 
-                                blockpos$pooledmutableblockpos.func_185344_t();
+                                blockpos$pooledmutableblockpos.release();
                             }
                         }
                     }
@@ -2680,108 +3059,108 @@
                 i = 0;
             }
 
-            this.field_72984_F.func_76319_b();
-            this.field_72984_F.func_76320_a("checkedPosition < toCheckCount");
+            this.theProfiler.endSection();
+            this.theProfiler.startSection("checkedPosition < toCheckCount");
 
             while (i < j)
             {
-                int i5 = this.field_72994_J[i++];
+                int i5 = this.lightUpdateBlockList[i++];
                 int j5 = (i5 & 63) - 32 + i1;
                 int k5 = (i5 >> 6 & 63) - 32 + j1;
                 int l5 = (i5 >> 12 & 63) - 32 + k1;
                 BlockPos blockpos1 = new BlockPos(j5, k5, l5);
-                int i6 = this.func_175642_b(p_180500_1_, blockpos1);
-                int j6 = this.func_175638_a(blockpos1, p_180500_1_);
+                int i6 = this.getLightFor(lightType, blockpos1);
+                int j6 = this.getRawLight(blockpos1, lightType);
 
                 if (j6 != i6)
                 {
-                    this.func_175653_a(p_180500_1_, blockpos1, j6);
+                    this.setLightFor(lightType, blockpos1, j6);
 
                     if (j6 > i6)
                     {
                         int k6 = Math.abs(j5 - i1);
                         int l6 = Math.abs(k5 - j1);
                         int i7 = Math.abs(l5 - k1);
-                        boolean flag = j < this.field_72994_J.length - 6;
+                        boolean flag = j < this.lightUpdateBlockList.length - 6;
 
                         if (k6 + l6 + i7 < 17 && flag)
                         {
-                            if (this.func_175642_b(p_180500_1_, blockpos1.func_177976_e()) < j6)
+                            if (this.getLightFor(lightType, blockpos1.west()) < j6)
                             {
-                                this.field_72994_J[j++] = j5 - 1 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
+                                this.lightUpdateBlockList[j++] = j5 - 1 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
                             }
 
-                            if (this.func_175642_b(p_180500_1_, blockpos1.func_177974_f()) < j6)
+                            if (this.getLightFor(lightType, blockpos1.east()) < j6)
                             {
-                                this.field_72994_J[j++] = j5 + 1 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
+                                this.lightUpdateBlockList[j++] = j5 + 1 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
                             }
 
-                            if (this.func_175642_b(p_180500_1_, blockpos1.func_177977_b()) < j6)
+                            if (this.getLightFor(lightType, blockpos1.down()) < j6)
                             {
-                                this.field_72994_J[j++] = j5 - i1 + 32 + (k5 - 1 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
+                                this.lightUpdateBlockList[j++] = j5 - i1 + 32 + (k5 - 1 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
                             }
 
-                            if (this.func_175642_b(p_180500_1_, blockpos1.func_177984_a()) < j6)
+                            if (this.getLightFor(lightType, blockpos1.up()) < j6)
                             {
-                                this.field_72994_J[j++] = j5 - i1 + 32 + (k5 + 1 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
+                                this.lightUpdateBlockList[j++] = j5 - i1 + 32 + (k5 + 1 - j1 + 32 << 6) + (l5 - k1 + 32 << 12);
                             }
 
-                            if (this.func_175642_b(p_180500_1_, blockpos1.func_177978_c()) < j6)
+                            if (this.getLightFor(lightType, blockpos1.north()) < j6)
                             {
-                                this.field_72994_J[j++] = j5 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 - 1 - k1 + 32 << 12);
+                                this.lightUpdateBlockList[j++] = j5 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 - 1 - k1 + 32 << 12);
                             }
 
-                            if (this.func_175642_b(p_180500_1_, blockpos1.func_177968_d()) < j6)
+                            if (this.getLightFor(lightType, blockpos1.south()) < j6)
                             {
-                                this.field_72994_J[j++] = j5 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 + 1 - k1 + 32 << 12);
+                                this.lightUpdateBlockList[j++] = j5 - i1 + 32 + (k5 - j1 + 32 << 6) + (l5 + 1 - k1 + 32 << 12);
                             }
                         }
                     }
                 }
             }
 
-            this.field_72984_F.func_76319_b();
+            this.theProfiler.endSection();
             return true;
         }
     }
 
-    public boolean func_72955_a(boolean p_72955_1_)
+    public boolean tickUpdates(boolean p_72955_1_)
     {
         return false;
     }
 
     @Nullable
-    public List<NextTickListEntry> func_72920_a(Chunk p_72920_1_, boolean p_72920_2_)
+    public List<NextTickListEntry> getPendingBlockUpdates(Chunk chunkIn, boolean p_72920_2_)
     {
         return null;
     }
 
     @Nullable
-    public List<NextTickListEntry> func_175712_a(StructureBoundingBox p_175712_1_, boolean p_175712_2_)
+    public List<NextTickListEntry> getPendingBlockUpdates(StructureBoundingBox structureBB, boolean p_175712_2_)
     {
         return null;
     }
 
-    public List<Entity> func_72839_b(@Nullable Entity p_72839_1_, AxisAlignedBB p_72839_2_)
+    public List<Entity> getEntitiesWithinAABBExcludingEntity(@Nullable Entity entityIn, AxisAlignedBB bb)
     {
-        return this.func_175674_a(p_72839_1_, p_72839_2_, EntitySelectors.field_180132_d);
+        return this.getEntitiesInAABBexcluding(entityIn, bb, EntitySelectors.NOT_SPECTATING);
     }
 
-    public List<Entity> func_175674_a(@Nullable Entity p_175674_1_, AxisAlignedBB p_175674_2_, @Nullable Predicate <? super Entity > p_175674_3_)
+    public List<Entity> getEntitiesInAABBexcluding(@Nullable Entity entityIn, AxisAlignedBB boundingBox, @Nullable Predicate <? super Entity > predicate)
     {
         List<Entity> list = Lists.<Entity>newArrayList();
-        int i = MathHelper.func_76128_c((p_175674_2_.field_72340_a - 2.0D) / 16.0D);
-        int j = MathHelper.func_76128_c((p_175674_2_.field_72336_d + 2.0D) / 16.0D);
-        int k = MathHelper.func_76128_c((p_175674_2_.field_72339_c - 2.0D) / 16.0D);
-        int l = MathHelper.func_76128_c((p_175674_2_.field_72334_f + 2.0D) / 16.0D);
+        int i = MathHelper.floor((boundingBox.minX - MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.floor((boundingBox.maxX + MAX_ENTITY_RADIUS) / 16.0D);
+        int k = MathHelper.floor((boundingBox.minZ - MAX_ENTITY_RADIUS) / 16.0D);
+        int l = MathHelper.floor((boundingBox.maxZ + MAX_ENTITY_RADIUS) / 16.0D);
 
         for (int i1 = i; i1 <= j; ++i1)
         {
             for (int j1 = k; j1 <= l; ++j1)
             {
-                if (this.func_175680_a(i1, j1, true))
+                if (this.isChunkLoaded(i1, j1, true))
                 {
-                    this.func_72964_e(i1, j1).func_177414_a(p_175674_1_, p_175674_2_, list, p_175674_3_);
+                    this.getChunkFromChunkCoords(i1, j1).getEntitiesWithinAABBForEntity(entityIn, boundingBox, list, predicate);
                 }
             }
         }
@@ -2789,13 +3168,13 @@
         return list;
     }
 
-    public <T extends Entity> List<T> func_175644_a(Class <? extends T > p_175644_1_, Predicate <? super T > p_175644_2_)
+    public <T extends Entity> List<T> getEntities(Class <? extends T > entityType, Predicate <? super T > filter)
     {
         List<T> list = Lists.<T>newArrayList();
 
-        for (Entity entity : this.field_72996_f)
+        for (Entity entity : this.loadedEntityList)
         {
-            if (p_175644_1_.isAssignableFrom(entity.getClass()) && p_175644_2_.apply((T)entity))
+            if (entityType.isAssignableFrom(entity.getClass()) && filter.apply((T)entity))
             {
                 list.add((T)entity);
             }
@@ -2804,13 +3183,13 @@
         return list;
     }
 
-    public <T extends Entity> List<T> func_175661_b(Class <? extends T > p_175661_1_, Predicate <? super T > p_175661_2_)
+    public <T extends Entity> List<T> getPlayers(Class <? extends T > playerType, Predicate <? super T > filter)
     {
         List<T> list = Lists.<T>newArrayList();
 
-        for (Entity entity : this.field_73010_i)
+        for (Entity entity : this.playerEntities)
         {
-            if (p_175661_1_.isAssignableFrom(entity.getClass()) && p_175661_2_.apply((T)entity))
+            if (playerType.isAssignableFrom(entity.getClass()) && filter.apply((T)entity))
             {
                 list.add((T)entity);
             }
@@ -2819,26 +3198,26 @@
         return list;
     }
 
-    public <T extends Entity> List<T> func_72872_a(Class <? extends T > p_72872_1_, AxisAlignedBB p_72872_2_)
+    public <T extends Entity> List<T> getEntitiesWithinAABB(Class <? extends T > classEntity, AxisAlignedBB bb)
     {
-        return this.<T>func_175647_a(p_72872_1_, p_72872_2_, EntitySelectors.field_180132_d);
+        return this.<T>getEntitiesWithinAABB(classEntity, bb, EntitySelectors.NOT_SPECTATING);
     }
 
-    public <T extends Entity> List<T> func_175647_a(Class <? extends T > p_175647_1_, AxisAlignedBB p_175647_2_, @Nullable Predicate <? super T > p_175647_3_)
+    public <T extends Entity> List<T> getEntitiesWithinAABB(Class <? extends T > clazz, AxisAlignedBB aabb, @Nullable Predicate <? super T > filter)
     {
-        int i = MathHelper.func_76128_c((p_175647_2_.field_72340_a - 2.0D) / 16.0D);
-        int j = MathHelper.func_76143_f((p_175647_2_.field_72336_d + 2.0D) / 16.0D);
-        int k = MathHelper.func_76128_c((p_175647_2_.field_72339_c - 2.0D) / 16.0D);
-        int l = MathHelper.func_76143_f((p_175647_2_.field_72334_f + 2.0D) / 16.0D);
+        int i = MathHelper.floor((aabb.minX - MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.ceil((aabb.maxX + MAX_ENTITY_RADIUS) / 16.0D);
+        int k = MathHelper.floor((aabb.minZ - MAX_ENTITY_RADIUS) / 16.0D);
+        int l = MathHelper.ceil((aabb.maxZ + MAX_ENTITY_RADIUS) / 16.0D);
         List<T> list = Lists.<T>newArrayList();
 
         for (int i1 = i; i1 < j; ++i1)
         {
             for (int j1 = k; j1 < l; ++j1)
             {
-                if (this.func_175680_a(i1, j1, true))
+                if (this.isChunkLoaded(i1, j1, true))
                 {
-                    this.func_72964_e(i1, j1).func_177430_a(p_175647_1_, p_175647_2_, list, p_175647_3_);
+                    this.getChunkFromChunkCoords(i1, j1).getEntitiesOfTypeWithinAAAB(clazz, aabb, list, filter);
                 }
             }
         }
@@ -2847,9 +3226,9 @@
     }
 
     @Nullable
-    public <T extends Entity> T func_72857_a(Class <? extends T > p_72857_1_, AxisAlignedBB p_72857_2_, T p_72857_3_)
+    public <T extends Entity> T findNearestEntityWithinAABB(Class <? extends T > entityType, AxisAlignedBB aabb, T closestTo)
     {
-        List<T> list = this.<T>func_72872_a(p_72857_1_, p_72857_2_);
+        List<T> list = this.<T>getEntitiesWithinAABB(entityType, aabb);
         T t = null;
         double d0 = Double.MAX_VALUE;
 
@@ -2857,9 +3236,9 @@
         {
             T t1 = list.get(i);
 
-            if (t1 != p_72857_3_ && EntitySelectors.field_180132_d.apply(t1))
+            if (t1 != closestTo && EntitySelectors.NOT_SPECTATING.apply(t1))
             {
-                double d1 = p_72857_3_.func_70068_e(t1);
+                double d1 = closestTo.getDistanceSqToEntity(t1);
 
                 if (d1 <= d0)
                 {
@@ -2873,32 +3252,32 @@
     }
 
     @Nullable
-    public Entity func_73045_a(int p_73045_1_)
+    public Entity getEntityByID(int id)
     {
-        return (Entity)this.field_175729_l.func_76041_a(p_73045_1_);
+        return (Entity)this.entitiesById.lookup(id);
     }
 
     @SideOnly(Side.CLIENT)
-    public List<Entity> func_72910_y()
+    public List<Entity> getLoadedEntityList()
     {
-        return this.field_72996_f;
+        return this.loadedEntityList;
     }
 
-    public void func_175646_b(BlockPos p_175646_1_, TileEntity p_175646_2_)
+    public void markChunkDirty(BlockPos pos, TileEntity unusedTileEntity)
     {
-        if (this.func_175667_e(p_175646_1_))
+        if (this.isBlockLoaded(pos))
         {
-            this.func_175726_f(p_175646_1_).func_76630_e();
+            this.getChunkFromBlockCoords(pos).setChunkModified();
         }
     }
 
-    public int func_72907_a(Class<?> p_72907_1_)
+    public int countEntities(Class<?> entityType)
     {
         int i = 0;
 
-        for (Entity entity : this.field_72996_f)
+        for (Entity entity : this.loadedEntityList)
         {
-            if ((!(entity instanceof EntityLiving) || !((EntityLiving)entity).func_104002_bU()) && p_72907_1_.isAssignableFrom(entity.getClass()))
+            if ((!(entity instanceof EntityLiving) || !((EntityLiving)entity).isNoDespawnRequired()) && entityType.isAssignableFrom(entity.getClass()))
             {
                 ++i;
             }
@@ -2907,52 +3286,54 @@
         return i;
     }
 
-    public void func_175650_b(Collection<Entity> p_175650_1_)
+    public void loadEntities(Collection<Entity> entityCollection)
     {
-        this.field_72996_f.addAll(p_175650_1_);
-
-        for (Entity entity : p_175650_1_)
+        for (Entity entity : entityCollection)
         {
-            this.func_72923_a(entity);
+            if (!net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entity, this)))
+            {
+                loadedEntityList.add(entity);
+                this.onEntityAdded(entity);
+            }
         }
     }
 
-    public void func_175681_c(Collection<Entity> p_175681_1_)
+    public void unloadEntities(Collection<Entity> entityCollection)
     {
-        this.field_72997_g.addAll(p_175681_1_);
+        this.unloadedEntityList.addAll(entityCollection);
     }
 
-    public boolean func_190527_a(Block p_190527_1_, BlockPos p_190527_2_, boolean p_190527_3_, EnumFacing p_190527_4_, @Nullable Entity p_190527_5_)
+    public boolean mayPlace(Block p_190527_1_, BlockPos p_190527_2_, boolean p_190527_3_, EnumFacing p_190527_4_, @Nullable Entity p_190527_5_)
     {
-        IBlockState iblockstate = this.func_180495_p(p_190527_2_);
-        AxisAlignedBB axisalignedbb = p_190527_3_ ? null : p_190527_1_.func_176223_P().func_185890_d(this, p_190527_2_);
-        return axisalignedbb != Block.field_185506_k && !this.func_72917_a(axisalignedbb.func_186670_a(p_190527_2_), p_190527_5_) ? false : (iblockstate.func_185904_a() == Material.field_151594_q && p_190527_1_ == Blocks.field_150467_bQ ? true : iblockstate.func_185904_a().func_76222_j() && p_190527_1_.func_176198_a(this, p_190527_2_, p_190527_4_));
+        IBlockState iblockstate = this.getBlockState(p_190527_2_);
+        AxisAlignedBB axisalignedbb = p_190527_3_ ? null : p_190527_1_.getDefaultState().getCollisionBoundingBox(this, p_190527_2_);
+        return axisalignedbb != Block.NULL_AABB && !this.checkNoEntityCollision(axisalignedbb.offset(p_190527_2_), p_190527_5_) ? false : (iblockstate.getMaterial() == Material.CIRCUITS && p_190527_1_ == Blocks.ANVIL ? true : iblockstate.getBlock().isReplaceable(this, p_190527_2_) && p_190527_1_.canPlaceBlockOnSide(this, p_190527_2_, p_190527_4_));
     }
 
-    public int func_181545_F()
+    public int getSeaLevel()
     {
-        return this.field_181546_a;
+        return this.seaLevel;
     }
 
-    public void func_181544_b(int p_181544_1_)
+    public void setSeaLevel(int seaLevelIn)
     {
-        this.field_181546_a = p_181544_1_;
+        this.seaLevel = seaLevelIn;
     }
 
-    public int func_175627_a(BlockPos p_175627_1_, EnumFacing p_175627_2_)
+    public int getStrongPower(BlockPos pos, EnumFacing direction)
     {
-        return this.func_180495_p(p_175627_1_).func_185893_b(this, p_175627_1_, p_175627_2_);
+        return this.getBlockState(pos).getStrongPower(this, pos, direction);
     }
 
-    public WorldType func_175624_G()
+    public WorldType getWorldType()
     {
-        return this.field_72986_A.func_76067_t();
+        return this.worldInfo.getTerrainType();
     }
 
-    public int func_175676_y(BlockPos p_175676_1_)
+    public int getStrongPower(BlockPos pos)
     {
         int i = 0;
-        i = Math.max(i, this.func_175627_a(p_175676_1_.func_177977_b(), EnumFacing.DOWN));
+        i = Math.max(i, this.getStrongPower(pos.down(), EnumFacing.DOWN));
 
         if (i >= 15)
         {
@@ -2960,7 +3341,7 @@
         }
         else
         {
-            i = Math.max(i, this.func_175627_a(p_175676_1_.func_177984_a(), EnumFacing.UP));
+            i = Math.max(i, this.getStrongPower(pos.up(), EnumFacing.UP));
 
             if (i >= 15)
             {
@@ -2968,7 +3349,7 @@
             }
             else
             {
-                i = Math.max(i, this.func_175627_a(p_175676_1_.func_177978_c(), EnumFacing.NORTH));
+                i = Math.max(i, this.getStrongPower(pos.north(), EnumFacing.NORTH));
 
                 if (i >= 15)
                 {
@@ -2976,7 +3357,7 @@
                 }
                 else
                 {
-                    i = Math.max(i, this.func_175627_a(p_175676_1_.func_177968_d(), EnumFacing.SOUTH));
+                    i = Math.max(i, this.getStrongPower(pos.south(), EnumFacing.SOUTH));
 
                     if (i >= 15)
                     {
@@ -2984,7 +3365,7 @@
                     }
                     else
                     {
-                        i = Math.max(i, this.func_175627_a(p_175676_1_.func_177976_e(), EnumFacing.WEST));
+                        i = Math.max(i, this.getStrongPower(pos.west(), EnumFacing.WEST));
 
                         if (i >= 15)
                         {
@@ -2992,7 +3373,7 @@
                         }
                         else
                         {
-                            i = Math.max(i, this.func_175627_a(p_175676_1_.func_177974_f(), EnumFacing.EAST));
+                            i = Math.max(i, this.getStrongPower(pos.east(), EnumFacing.EAST));
                             return i >= 15 ? i : i;
                         }
                     }
@@ -3001,29 +3382,29 @@
         }
     }
 
-    public boolean func_175709_b(BlockPos p_175709_1_, EnumFacing p_175709_2_)
+    public boolean isSidePowered(BlockPos pos, EnumFacing side)
     {
-        return this.func_175651_c(p_175709_1_, p_175709_2_) > 0;
+        return this.getRedstonePower(pos, side) > 0;
     }
 
-    public int func_175651_c(BlockPos p_175651_1_, EnumFacing p_175651_2_)
+    public int getRedstonePower(BlockPos pos, EnumFacing facing)
     {
-        IBlockState iblockstate = this.func_180495_p(p_175651_1_);
-        return iblockstate.func_185915_l() ? this.func_175676_y(p_175651_1_) : iblockstate.func_185911_a(this, p_175651_1_, p_175651_2_);
+        IBlockState iblockstate = this.getBlockState(pos);
+        return iblockstate.getBlock().shouldCheckWeakPower(iblockstate, this, pos, facing) ? this.getStrongPower(pos) : iblockstate.getWeakPower(this, pos, facing);
     }
 
-    public boolean func_175640_z(BlockPos p_175640_1_)
+    public boolean isBlockPowered(BlockPos pos)
     {
-        return this.func_175651_c(p_175640_1_.func_177977_b(), EnumFacing.DOWN) > 0 ? true : (this.func_175651_c(p_175640_1_.func_177984_a(), EnumFacing.UP) > 0 ? true : (this.func_175651_c(p_175640_1_.func_177978_c(), EnumFacing.NORTH) > 0 ? true : (this.func_175651_c(p_175640_1_.func_177968_d(), EnumFacing.SOUTH) > 0 ? true : (this.func_175651_c(p_175640_1_.func_177976_e(), EnumFacing.WEST) > 0 ? true : this.func_175651_c(p_175640_1_.func_177974_f(), EnumFacing.EAST) > 0))));
+        return this.getRedstonePower(pos.down(), EnumFacing.DOWN) > 0 ? true : (this.getRedstonePower(pos.up(), EnumFacing.UP) > 0 ? true : (this.getRedstonePower(pos.north(), EnumFacing.NORTH) > 0 ? true : (this.getRedstonePower(pos.south(), EnumFacing.SOUTH) > 0 ? true : (this.getRedstonePower(pos.west(), EnumFacing.WEST) > 0 ? true : this.getRedstonePower(pos.east(), EnumFacing.EAST) > 0))));
     }
 
-    public int func_175687_A(BlockPos p_175687_1_)
+    public int isBlockIndirectlyGettingPowered(BlockPos pos)
     {
         int i = 0;
 
         for (EnumFacing enumfacing : EnumFacing.values())
         {
-            int j = this.func_175651_c(p_175687_1_.func_177972_a(enumfacing), enumfacing);
+            int j = this.getRedstonePower(pos.offset(enumfacing), enumfacing);
 
             if (j >= 15)
             {
@@ -3040,37 +3421,37 @@
     }
 
     @Nullable
-    public EntityPlayer func_72890_a(Entity p_72890_1_, double p_72890_2_)
+    public EntityPlayer getClosestPlayerToEntity(Entity entityIn, double distance)
     {
-        return this.func_184137_a(p_72890_1_.field_70165_t, p_72890_1_.field_70163_u, p_72890_1_.field_70161_v, p_72890_2_, false);
+        return this.getClosestPlayer(entityIn.posX, entityIn.posY, entityIn.posZ, distance, false);
     }
 
     @Nullable
-    public EntityPlayer func_184136_b(Entity p_184136_1_, double p_184136_2_)
+    public EntityPlayer getNearestPlayerNotCreative(Entity entityIn, double distance)
     {
-        return this.func_184137_a(p_184136_1_.field_70165_t, p_184136_1_.field_70163_u, p_184136_1_.field_70161_v, p_184136_2_, true);
+        return this.getClosestPlayer(entityIn.posX, entityIn.posY, entityIn.posZ, distance, true);
     }
 
     @Nullable
-    public EntityPlayer func_184137_a(double p_184137_1_, double p_184137_3_, double p_184137_5_, double p_184137_7_, boolean p_184137_9_)
+    public EntityPlayer getClosestPlayer(double posX, double posY, double posZ, double distance, boolean spectator)
     {
-        Predicate<Entity> predicate = p_184137_9_ ? EntitySelectors.field_188444_d : EntitySelectors.field_180132_d;
-        return this.func_190525_a(p_184137_1_, p_184137_3_, p_184137_5_, p_184137_7_, predicate);
+        Predicate<Entity> predicate = spectator ? EntitySelectors.CAN_AI_TARGET : EntitySelectors.NOT_SPECTATING;
+        return this.getClosestPlayer(posX, posY, posZ, distance, predicate);
     }
 
     @Nullable
-    public EntityPlayer func_190525_a(double p_190525_1_, double p_190525_3_, double p_190525_5_, double p_190525_7_, Predicate<Entity> p_190525_9_)
+    public EntityPlayer getClosestPlayer(double x, double y, double z, double p_190525_7_, Predicate<Entity> p_190525_9_)
     {
         double d0 = -1.0D;
         EntityPlayer entityplayer = null;
 
-        for (int i = 0; i < this.field_73010_i.size(); ++i)
+        for (int i = 0; i < this.playerEntities.size(); ++i)
         {
-            EntityPlayer entityplayer1 = (EntityPlayer)this.field_73010_i.get(i);
+            EntityPlayer entityplayer1 = (EntityPlayer)this.playerEntities.get(i);
 
             if (p_190525_9_.apply(entityplayer1))
             {
-                double d1 = entityplayer1.func_70092_e(p_190525_1_, p_190525_3_, p_190525_5_);
+                double d1 = entityplayer1.getDistanceSq(x, y, z);
 
                 if ((p_190525_7_ < 0.0D || d1 < p_190525_7_ * p_190525_7_) && (d0 == -1.0D || d1 < d0))
                 {
@@ -3083,17 +3464,17 @@
         return entityplayer;
     }
 
-    public boolean func_175636_b(double p_175636_1_, double p_175636_3_, double p_175636_5_, double p_175636_7_)
+    public boolean isAnyPlayerWithinRangeAt(double x, double y, double z, double range)
     {
-        for (int i = 0; i < this.field_73010_i.size(); ++i)
+        for (int i = 0; i < this.playerEntities.size(); ++i)
         {
-            EntityPlayer entityplayer = (EntityPlayer)this.field_73010_i.get(i);
+            EntityPlayer entityplayer = (EntityPlayer)this.playerEntities.get(i);
 
-            if (EntitySelectors.field_180132_d.apply(entityplayer))
+            if (EntitySelectors.NOT_SPECTATING.apply(entityplayer))
             {
-                double d0 = entityplayer.func_70092_e(p_175636_1_, p_175636_3_, p_175636_5_);
+                double d0 = entityplayer.getDistanceSq(x, y, z);
 
-                if (p_175636_7_ < 0.0D || d0 < p_175636_7_ * p_175636_7_)
+                if (range < 0.0D || d0 < range * range)
                 {
                     return true;
                 }
@@ -3104,40 +3485,40 @@
     }
 
     @Nullable
-    public EntityPlayer func_184142_a(Entity p_184142_1_, double p_184142_2_, double p_184142_4_)
+    public EntityPlayer getNearestAttackablePlayer(Entity entityIn, double maxXZDistance, double maxYDistance)
     {
-        return this.func_184150_a(p_184142_1_.field_70165_t, p_184142_1_.field_70163_u, p_184142_1_.field_70161_v, p_184142_2_, p_184142_4_, (Function<EntityPlayer, Double>)null, (Predicate<EntityPlayer>)null);
+        return this.getNearestAttackablePlayer(entityIn.posX, entityIn.posY, entityIn.posZ, maxXZDistance, maxYDistance, (Function<EntityPlayer, Double>)null, (Predicate<EntityPlayer>)null);
     }
 
     @Nullable
-    public EntityPlayer func_184139_a(BlockPos p_184139_1_, double p_184139_2_, double p_184139_4_)
+    public EntityPlayer getNearestAttackablePlayer(BlockPos pos, double maxXZDistance, double maxYDistance)
     {
-        return this.func_184150_a((double)((float)p_184139_1_.func_177958_n() + 0.5F), (double)((float)p_184139_1_.func_177956_o() + 0.5F), (double)((float)p_184139_1_.func_177952_p() + 0.5F), p_184139_2_, p_184139_4_, (Function<EntityPlayer, Double>)null, (Predicate<EntityPlayer>)null);
+        return this.getNearestAttackablePlayer((double)((float)pos.getX() + 0.5F), (double)((float)pos.getY() + 0.5F), (double)((float)pos.getZ() + 0.5F), maxXZDistance, maxYDistance, (Function<EntityPlayer, Double>)null, (Predicate<EntityPlayer>)null);
     }
 
     @Nullable
-    public EntityPlayer func_184150_a(double p_184150_1_, double p_184150_3_, double p_184150_5_, double p_184150_7_, double p_184150_9_, @Nullable Function<EntityPlayer, Double> p_184150_11_, @Nullable Predicate<EntityPlayer> p_184150_12_)
+    public EntityPlayer getNearestAttackablePlayer(double posX, double posY, double posZ, double maxXZDistance, double maxYDistance, @Nullable Function<EntityPlayer, Double> playerToDouble, @Nullable Predicate<EntityPlayer> p_184150_12_)
     {
         double d0 = -1.0D;
         EntityPlayer entityplayer = null;
 
-        for (int i = 0; i < this.field_73010_i.size(); ++i)
+        for (int i = 0; i < this.playerEntities.size(); ++i)
         {
-            EntityPlayer entityplayer1 = (EntityPlayer)this.field_73010_i.get(i);
+            EntityPlayer entityplayer1 = (EntityPlayer)this.playerEntities.get(i);
 
-            if (!entityplayer1.field_71075_bZ.field_75102_a && entityplayer1.func_70089_S() && !entityplayer1.func_175149_v() && (p_184150_12_ == null || p_184150_12_.apply(entityplayer1)))
+            if (!entityplayer1.capabilities.disableDamage && entityplayer1.isEntityAlive() && !entityplayer1.isSpectator() && (p_184150_12_ == null || p_184150_12_.apply(entityplayer1)))
             {
-                double d1 = entityplayer1.func_70092_e(p_184150_1_, entityplayer1.field_70163_u, p_184150_5_);
-                double d2 = p_184150_7_;
+                double d1 = entityplayer1.getDistanceSq(posX, entityplayer1.posY, posZ);
+                double d2 = maxXZDistance;
 
-                if (entityplayer1.func_70093_af())
+                if (entityplayer1.isSneaking())
                 {
-                    d2 = p_184150_7_ * 0.800000011920929D;
+                    d2 = maxXZDistance * 0.800000011920929D;
                 }
 
-                if (entityplayer1.func_82150_aj())
+                if (entityplayer1.isInvisible())
                 {
-                    float f = entityplayer1.func_82243_bO();
+                    float f = entityplayer1.getArmorVisibility();
 
                     if (f < 0.1F)
                     {
@@ -3147,12 +3528,14 @@
                     d2 *= (double)(0.7F * f);
                 }
 
-                if (p_184150_11_ != null)
+                if (playerToDouble != null)
                 {
-                    d2 *= ((Double)Objects.firstNonNull(p_184150_11_.apply(entityplayer1), Double.valueOf(1.0D))).doubleValue();
+                    d2 *= ((Double)Objects.firstNonNull(playerToDouble.apply(entityplayer1), Double.valueOf(1.0D))).doubleValue();
                 }
 
-                if ((p_184150_9_ < 0.0D || Math.abs(entityplayer1.field_70163_u - p_184150_3_) < p_184150_9_ * p_184150_9_) && (p_184150_7_ < 0.0D || d1 < d2 * d2) && (d0 == -1.0D || d1 < d0))
+                d2 = net.minecraftforge.common.ForgeHooks.getPlayerVisibilityDistance(entityplayer1, d2, maxYDistance);
+
+                if ((maxYDistance < 0.0D || Math.abs(entityplayer1.posY - posY) < maxYDistance * maxYDistance) && (maxXZDistance < 0.0D || d1 < d2 * d2) && (d0 == -1.0D || d1 < d0))
                 {
                     d0 = d1;
                     entityplayer = entityplayer1;
@@ -3164,13 +3547,13 @@
     }
 
     @Nullable
-    public EntityPlayer func_72924_a(String p_72924_1_)
+    public EntityPlayer getPlayerEntityByName(String name)
     {
-        for (int i = 0; i < this.field_73010_i.size(); ++i)
+        for (int i = 0; i < this.playerEntities.size(); ++i)
         {
-            EntityPlayer entityplayer = (EntityPlayer)this.field_73010_i.get(i);
+            EntityPlayer entityplayer = (EntityPlayer)this.playerEntities.get(i);
 
-            if (p_72924_1_.equals(entityplayer.func_70005_c_()))
+            if (name.equals(entityplayer.getName()))
             {
                 return entityplayer;
             }
@@ -3180,13 +3563,13 @@
     }
 
     @Nullable
-    public EntityPlayer func_152378_a(UUID p_152378_1_)
+    public EntityPlayer getPlayerEntityByUUID(UUID uuid)
     {
-        for (int i = 0; i < this.field_73010_i.size(); ++i)
+        for (int i = 0; i < this.playerEntities.size(); ++i)
         {
-            EntityPlayer entityplayer = (EntityPlayer)this.field_73010_i.get(i);
+            EntityPlayer entityplayer = (EntityPlayer)this.playerEntities.get(i);
 
-            if (p_152378_1_.equals(entityplayer.func_110124_au()))
+            if (uuid.equals(entityplayer.getUniqueID()))
             {
                 return entityplayer;
             }
@@ -3196,416 +3579,526 @@
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_72882_A()
+    public void sendQuittingDisconnectingPacket()
     {
     }
 
-    public void func_72906_B() throws MinecraftException
+    public void checkSessionLock() throws MinecraftException
     {
-        this.field_73019_z.func_75762_c();
+        this.saveHandler.checkSessionLock();
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_82738_a(long p_82738_1_)
+    public void setTotalWorldTime(long worldTime)
     {
-        this.field_72986_A.func_82572_b(p_82738_1_);
+        this.worldInfo.setWorldTotalTime(worldTime);
     }
 
-    public long func_72905_C()
+    public long getSeed()
     {
-        return this.field_72986_A.func_76063_b();
+        return this.provider.getSeed();
     }
 
-    public long func_82737_E()
+    public long getTotalWorldTime()
     {
-        return this.field_72986_A.func_82573_f();
+        return this.worldInfo.getWorldTotalTime();
     }
 
-    public long func_72820_D()
+    public long getWorldTime()
     {
-        return this.field_72986_A.func_76073_f();
+        return this.provider.getWorldTime();
     }
 
-    public void func_72877_b(long p_72877_1_)
+    public void setWorldTime(long time)
     {
-        this.field_72986_A.func_76068_b(p_72877_1_);
+        this.provider.setWorldTime(time);
     }
 
-    public BlockPos func_175694_M()
+    public BlockPos getSpawnPoint()
     {
-        BlockPos blockpos = new BlockPos(this.field_72986_A.func_76079_c(), this.field_72986_A.func_76075_d(), this.field_72986_A.func_76074_e());
+        BlockPos blockpos = this.provider.getSpawnPoint();
 
-        if (!this.func_175723_af().func_177746_a(blockpos))
+        if (!this.getWorldBorder().contains(blockpos))
         {
-            blockpos = this.func_175645_m(new BlockPos(this.func_175723_af().func_177731_f(), 0.0D, this.func_175723_af().func_177721_g()));
+            blockpos = this.getHeight(new BlockPos(this.getWorldBorder().getCenterX(), 0.0D, this.getWorldBorder().getCenterZ()));
         }
 
         return blockpos;
     }
 
-    public void func_175652_B(BlockPos p_175652_1_)
+    public void setSpawnPoint(BlockPos pos)
     {
-        this.field_72986_A.func_176143_a(p_175652_1_);
+        this.provider.setSpawnPoint(pos);
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_72897_h(Entity p_72897_1_)
+    public void joinEntityInSurroundings(Entity entityIn)
     {
-        int i = MathHelper.func_76128_c(p_72897_1_.field_70165_t / 16.0D);
-        int j = MathHelper.func_76128_c(p_72897_1_.field_70161_v / 16.0D);
+        int i = MathHelper.floor(entityIn.posX / 16.0D);
+        int j = MathHelper.floor(entityIn.posZ / 16.0D);
         int k = 2;
 
         for (int l = -2; l <= 2; ++l)
         {
             for (int i1 = -2; i1 <= 2; ++i1)
             {
-                this.func_72964_e(i + l, j + i1);
+                this.getChunkFromChunkCoords(i + l, j + i1);
             }
         }
 
-        if (!this.field_72996_f.contains(p_72897_1_))
+        if (!this.loadedEntityList.contains(entityIn))
         {
-            this.field_72996_f.add(p_72897_1_);
+            if (!net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entityIn, this)))
+            this.loadedEntityList.add(entityIn);
         }
     }
 
-    public boolean func_175660_a(EntityPlayer p_175660_1_, BlockPos p_175660_2_)
+    public boolean isBlockModifiable(EntityPlayer player, BlockPos pos)
     {
+        return this.provider.canMineBlock(player, pos);
+    }
+
+    public boolean canMineBlockBody(EntityPlayer player, BlockPos pos)
+    {
         return true;
     }
 
-    public void func_72960_a(Entity p_72960_1_, byte p_72960_2_)
+    public void setEntityState(Entity entityIn, byte state)
     {
     }
 
-    public IChunkProvider func_72863_F()
+    public IChunkProvider getChunkProvider()
     {
-        return this.field_73020_y;
+        return this.chunkProvider;
     }
 
-    public void func_175641_c(BlockPos p_175641_1_, Block p_175641_2_, int p_175641_3_, int p_175641_4_)
+    public void addBlockEvent(BlockPos pos, Block blockIn, int eventID, int eventParam)
     {
-        this.func_180495_p(p_175641_1_).func_189547_a(this, p_175641_1_, p_175641_3_, p_175641_4_);
+        this.getBlockState(pos).onBlockEventReceived(this, pos, eventID, eventParam);
     }
 
-    public ISaveHandler func_72860_G()
+    public ISaveHandler getSaveHandler()
     {
-        return this.field_73019_z;
+        return this.saveHandler;
     }
 
-    public WorldInfo func_72912_H()
+    public WorldInfo getWorldInfo()
     {
-        return this.field_72986_A;
+        return this.worldInfo;
     }
 
-    public GameRules func_82736_K()
+    public GameRules getGameRules()
     {
-        return this.field_72986_A.func_82574_x();
+        return this.worldInfo.getGameRulesInstance();
     }
 
-    public void func_72854_c()
+    public void updateAllPlayersSleepingFlag()
     {
     }
 
-    public float func_72819_i(float p_72819_1_)
+    public float getThunderStrength(float delta)
     {
-        return (this.field_73018_p + (this.field_73017_q - this.field_73018_p) * p_72819_1_) * this.func_72867_j(p_72819_1_);
+        return (this.prevThunderingStrength + (this.thunderingStrength - this.prevThunderingStrength) * delta) * this.getRainStrength(delta);
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_147442_i(float p_147442_1_)
+    public void setThunderStrength(float strength)
     {
-        this.field_73018_p = p_147442_1_;
-        this.field_73017_q = p_147442_1_;
+        this.prevThunderingStrength = strength;
+        this.thunderingStrength = strength;
     }
 
-    public float func_72867_j(float p_72867_1_)
+    public float getRainStrength(float delta)
     {
-        return this.field_73003_n + (this.field_73004_o - this.field_73003_n) * p_72867_1_;
+        return this.prevRainingStrength + (this.rainingStrength - this.prevRainingStrength) * delta;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_72894_k(float p_72894_1_)
+    public void setRainStrength(float strength)
     {
-        this.field_73003_n = p_72894_1_;
-        this.field_73004_o = p_72894_1_;
+        this.prevRainingStrength = strength;
+        this.rainingStrength = strength;
     }
 
-    public boolean func_72911_I()
+    public boolean isThundering()
     {
-        return (double)this.func_72819_i(1.0F) > 0.9D;
+        return (double)this.getThunderStrength(1.0F) > 0.9D;
     }
 
-    public boolean func_72896_J()
+    public boolean isRaining()
     {
-        return (double)this.func_72867_j(1.0F) > 0.2D;
+        return (double)this.getRainStrength(1.0F) > 0.2D;
     }
 
-    public boolean func_175727_C(BlockPos p_175727_1_)
+    public boolean isRainingAt(BlockPos strikePosition)
     {
-        if (!this.func_72896_J())
+        if (!this.isRaining())
         {
             return false;
         }
-        else if (!this.func_175678_i(p_175727_1_))
+        else if (!this.canSeeSky(strikePosition))
         {
             return false;
         }
-        else if (this.func_175725_q(p_175727_1_).func_177956_o() > p_175727_1_.func_177956_o())
+        else if (this.getPrecipitationHeight(strikePosition).getY() > strikePosition.getY())
         {
             return false;
         }
         else
         {
-            Biome biome = this.func_180494_b(p_175727_1_);
-            return biome.func_76746_c() ? false : (this.func_175708_f(p_175727_1_, false) ? false : biome.func_76738_d());
+            Biome biome = this.getBiome(strikePosition);
+            return biome.getEnableSnow() ? false : (this.canSnowAt(strikePosition, false) ? false : biome.canRain());
         }
     }
 
-    public boolean func_180502_D(BlockPos p_180502_1_)
+    public boolean isBlockinHighHumidity(BlockPos pos)
     {
-        Biome biome = this.func_180494_b(p_180502_1_);
-        return biome.func_76736_e();
+        return this.provider.isBlockHighHumidity(pos);
     }
 
     @Nullable
-    public MapStorage func_175693_T()
+    public MapStorage getMapStorage()
     {
-        return this.field_72988_C;
+        return this.mapStorage;
     }
 
-    public void func_72823_a(String p_72823_1_, WorldSavedData p_72823_2_)
+    public void setData(String dataID, WorldSavedData worldSavedDataIn)
     {
-        this.field_72988_C.func_75745_a(p_72823_1_, p_72823_2_);
+        this.mapStorage.setData(dataID, worldSavedDataIn);
     }
 
     @Nullable
-    public WorldSavedData func_72943_a(Class <? extends WorldSavedData > p_72943_1_, String p_72943_2_)
+    public WorldSavedData loadData(Class <? extends WorldSavedData > clazz, String dataID)
     {
-        return this.field_72988_C.func_75742_a(p_72943_1_, p_72943_2_);
+        return this.mapStorage.getOrLoadData(clazz, dataID);
     }
 
-    public int func_72841_b(String p_72841_1_)
+    public int getUniqueDataId(String key)
     {
-        return this.field_72988_C.func_75743_a(p_72841_1_);
+        return this.mapStorage.getUniqueDataId(key);
     }
 
-    public void func_175669_a(int p_175669_1_, BlockPos p_175669_2_, int p_175669_3_)
+    public void playBroadcastSound(int id, BlockPos pos, int data)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            ((IWorldEventListener)this.field_73021_x.get(i)).func_180440_a(p_175669_1_, p_175669_2_, p_175669_3_);
+            ((IWorldEventListener)this.eventListeners.get(i)).broadcastSound(id, pos, data);
         }
     }
 
-    public void func_175718_b(int p_175718_1_, BlockPos p_175718_2_, int p_175718_3_)
+    public void playEvent(int type, BlockPos pos, int data)
     {
-        this.func_180498_a((EntityPlayer)null, p_175718_1_, p_175718_2_, p_175718_3_);
+        this.playEvent((EntityPlayer)null, type, pos, data);
     }
 
-    public void func_180498_a(@Nullable EntityPlayer p_180498_1_, int p_180498_2_, BlockPos p_180498_3_, int p_180498_4_)
+    public void playEvent(@Nullable EntityPlayer player, int type, BlockPos pos, int data)
     {
         try
         {
-            for (int i = 0; i < this.field_73021_x.size(); ++i)
+            for (int i = 0; i < this.eventListeners.size(); ++i)
             {
-                ((IWorldEventListener)this.field_73021_x.get(i)).func_180439_a(p_180498_1_, p_180498_2_, p_180498_3_, p_180498_4_);
+                ((IWorldEventListener)this.eventListeners.get(i)).playEvent(player, type, pos, data);
             }
         }
         catch (Throwable throwable)
         {
-            CrashReport crashreport = CrashReport.func_85055_a(throwable, "Playing level event");
-            CrashReportCategory crashreportcategory = crashreport.func_85058_a("Level event being played");
-            crashreportcategory.func_71507_a("Block coordinates", CrashReportCategory.func_180522_a(p_180498_3_));
-            crashreportcategory.func_71507_a("Event source", p_180498_1_);
-            crashreportcategory.func_71507_a("Event type", Integer.valueOf(p_180498_2_));
-            crashreportcategory.func_71507_a("Event data", Integer.valueOf(p_180498_4_));
+            CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Playing level event");
+            CrashReportCategory crashreportcategory = crashreport.makeCategory("Level event being played");
+            crashreportcategory.addCrashSection("Block coordinates", CrashReportCategory.getCoordinateInfo(pos));
+            crashreportcategory.addCrashSection("Event source", player);
+            crashreportcategory.addCrashSection("Event type", Integer.valueOf(type));
+            crashreportcategory.addCrashSection("Event data", Integer.valueOf(data));
             throw new ReportedException(crashreport);
         }
     }
 
-    public int func_72800_K()
+    public int getHeight()
     {
-        return 256;
+        return this.provider.getHeight();
     }
 
-    public int func_72940_L()
+    public int getActualHeight()
     {
-        return this.field_73011_w.func_177495_o() ? 128 : 256;
+        return this.provider.getActualHeight();
     }
 
-    public Random func_72843_D(int p_72843_1_, int p_72843_2_, int p_72843_3_)
+    public Random setRandomSeed(int p_72843_1_, int p_72843_2_, int p_72843_3_)
     {
-        long i = (long)p_72843_1_ * 341873128712L + (long)p_72843_2_ * 132897987541L + this.func_72912_H().func_76063_b() + (long)p_72843_3_;
-        this.field_73012_v.setSeed(i);
-        return this.field_73012_v;
+        long i = (long)p_72843_1_ * 341873128712L + (long)p_72843_2_ * 132897987541L + this.getWorldInfo().getSeed() + (long)p_72843_3_;
+        this.rand.setSeed(i);
+        return this.rand;
     }
 
-    public CrashReportCategory func_72914_a(CrashReport p_72914_1_)
+    public CrashReportCategory addWorldInfoToCrashReport(CrashReport report)
     {
-        CrashReportCategory crashreportcategory = p_72914_1_.func_85057_a("Affected level", 1);
-        crashreportcategory.func_71507_a("Level name", this.field_72986_A == null ? "????" : this.field_72986_A.func_76065_j());
-        crashreportcategory.func_189529_a("All players", new ICrashReportDetail<String>()
+        CrashReportCategory crashreportcategory = report.makeCategoryDepth("Affected level", 1);
+        crashreportcategory.addCrashSection("Level name", this.worldInfo == null ? "????" : this.worldInfo.getWorldName());
+        crashreportcategory.setDetail("All players", new ICrashReportDetail<String>()
         {
             public String call()
             {
-                return World.this.field_73010_i.size() + " total; " + World.this.field_73010_i;
+                return World.this.playerEntities.size() + " total; " + World.this.playerEntities;
             }
         });
-        crashreportcategory.func_189529_a("Chunk stats", new ICrashReportDetail<String>()
+        crashreportcategory.setDetail("Chunk stats", new ICrashReportDetail<String>()
         {
             public String call()
             {
-                return World.this.field_73020_y.func_73148_d();
+                return World.this.chunkProvider.makeString();
             }
         });
 
         try
         {
-            this.field_72986_A.func_85118_a(crashreportcategory);
+            this.worldInfo.addToCrashReport(crashreportcategory);
         }
         catch (Throwable throwable)
         {
-            crashreportcategory.func_71499_a("Level Data Unobtainable", throwable);
+            crashreportcategory.addCrashSectionThrowable("Level Data Unobtainable", throwable);
         }
 
         return crashreportcategory;
     }
 
     @SideOnly(Side.CLIENT)
-    public double func_72919_O()
+    public double getHorizon()
     {
-        return this.field_72986_A.func_76067_t() == WorldType.field_77138_c ? 0.0D : 63.0D;
+        return provider.getHorizon();
     }
 
-    public void func_175715_c(int p_175715_1_, BlockPos p_175715_2_, int p_175715_3_)
+    public void sendBlockBreakProgress(int breakerId, BlockPos pos, int progress)
     {
-        for (int i = 0; i < this.field_73021_x.size(); ++i)
+        for (int i = 0; i < this.eventListeners.size(); ++i)
         {
-            IWorldEventListener iworldeventlistener = (IWorldEventListener)this.field_73021_x.get(i);
-            iworldeventlistener.func_180441_b(p_175715_1_, p_175715_2_, p_175715_3_);
+            IWorldEventListener iworldeventlistener = (IWorldEventListener)this.eventListeners.get(i);
+            iworldeventlistener.sendBlockBreakProgress(breakerId, pos, progress);
         }
     }
 
-    public Calendar func_83015_S()
+    public Calendar getCurrentDate()
     {
-        if (this.func_82737_E() % 600L == 0L)
+        if (this.getTotalWorldTime() % 600L == 0L)
         {
-            this.field_83016_L.setTimeInMillis(MinecraftServer.func_130071_aq());
+            this.theCalendar.setTimeInMillis(MinecraftServer.getCurrentTimeMillis());
         }
 
-        return this.field_83016_L;
+        return this.theCalendar;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_92088_a(double p_92088_1_, double p_92088_3_, double p_92088_5_, double p_92088_7_, double p_92088_9_, double p_92088_11_, @Nullable NBTTagCompound p_92088_13_)
+    public void makeFireworks(double x, double y, double z, double motionX, double motionY, double motionZ, @Nullable NBTTagCompound compund)
     {
     }
 
-    public Scoreboard func_96441_U()
+    public Scoreboard getScoreboard()
     {
-        return this.field_96442_D;
+        return this.worldScoreboard;
     }
 
-    public void func_175666_e(BlockPos p_175666_1_, Block p_175666_2_)
+    public void updateComparatorOutputLevel(BlockPos pos, Block blockIn)
     {
-        for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
+        for (EnumFacing enumfacing : EnumFacing.VALUES)
         {
-            BlockPos blockpos = p_175666_1_.func_177972_a(enumfacing);
+            BlockPos blockpos = pos.offset(enumfacing);
 
-            if (this.func_175667_e(blockpos))
+            if (this.isBlockLoaded(blockpos))
             {
-                IBlockState iblockstate = this.func_180495_p(blockpos);
+                IBlockState iblockstate = this.getBlockState(blockpos);
 
-                if (Blocks.field_150441_bU.func_185547_C(iblockstate))
+                iblockstate.getBlock().onNeighborChange(this, blockpos, pos);
+                if (iblockstate.getBlock().isNormalCube(iblockstate, this, blockpos))
                 {
-                    iblockstate.func_189546_a(this, blockpos, p_175666_2_, p_175666_1_);
-                }
-                else if (iblockstate.func_185915_l())
-                {
-                    blockpos = blockpos.func_177972_a(enumfacing);
-                    iblockstate = this.func_180495_p(blockpos);
-
-                    if (Blocks.field_150441_bU.func_185547_C(iblockstate))
+                    blockpos = blockpos.offset(enumfacing);
+                    iblockstate = this.getBlockState(blockpos);
+                    if (iblockstate.getBlock().getWeakChanges(this, blockpos))
                     {
-                        iblockstate.func_189546_a(this, blockpos, p_175666_2_, p_175666_1_);
+                        iblockstate.getBlock().onNeighborChange(this, blockpos, pos);
                     }
                 }
             }
         }
     }
 
-    public DifficultyInstance func_175649_E(BlockPos p_175649_1_)
+    public DifficultyInstance getDifficultyForLocation(BlockPos pos)
     {
         long i = 0L;
         float f = 0.0F;
 
-        if (this.func_175667_e(p_175649_1_))
+        if (this.isBlockLoaded(pos))
         {
-            f = this.func_130001_d();
-            i = this.func_175726_f(p_175649_1_).func_177416_w();
+            f = this.getCurrentMoonPhaseFactor();
+            i = this.getChunkFromBlockCoords(pos).getInhabitedTime();
         }
 
-        return new DifficultyInstance(this.func_175659_aa(), this.func_72820_D(), i, f);
+        return new DifficultyInstance(this.getDifficulty(), this.getWorldTime(), i, f);
     }
 
-    public EnumDifficulty func_175659_aa()
+    public EnumDifficulty getDifficulty()
     {
-        return this.func_72912_H().func_176130_y();
+        return this.getWorldInfo().getDifficulty();
     }
 
-    public int func_175657_ab()
+    public int getSkylightSubtracted()
     {
-        return this.field_73008_k;
+        return this.skylightSubtracted;
     }
 
-    public void func_175692_b(int p_175692_1_)
+    public void setSkylightSubtracted(int newSkylightSubtracted)
     {
-        this.field_73008_k = p_175692_1_;
+        this.skylightSubtracted = newSkylightSubtracted;
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_175658_ac()
+    public int getLastLightningBolt()
     {
-        return this.field_73016_r;
+        return this.lastLightningBolt;
     }
 
-    public void func_175702_c(int p_175702_1_)
+    public void setLastLightningBolt(int lastLightningBoltIn)
     {
-        this.field_73016_r = p_175702_1_;
+        this.lastLightningBolt = lastLightningBoltIn;
     }
 
-    public VillageCollection func_175714_ae()
+    public VillageCollection getVillageCollection()
     {
-        return this.field_72982_D;
+        return this.villageCollectionObj;
     }
 
-    public WorldBorder func_175723_af()
+    public WorldBorder getWorldBorder()
     {
-        return this.field_175728_M;
+        return this.worldBorder;
     }
 
-    public boolean func_72916_c(int p_72916_1_, int p_72916_2_)
+    public boolean isSpawnChunk(int x, int z)
     {
-        BlockPos blockpos = this.func_175694_M();
-        int i = p_72916_1_ * 16 + 8 - blockpos.func_177958_n();
-        int j = p_72916_2_ * 16 + 8 - blockpos.func_177952_p();
+        BlockPos blockpos = this.getSpawnPoint();
+        int i = x * 16 + 8 - blockpos.getX();
+        int j = z * 16 + 8 - blockpos.getZ();
         int k = 128;
         return i >= -128 && i <= 128 && j >= -128 && j <= 128;
     }
 
-    public void func_184135_a(Packet<?> p_184135_1_)
+    /* ======================================== FORGE START =====================================*/
+    /**
+     * Determine if the given block is considered solid on the
+     * specified side.  Used by placement logic.
+     *
+     * @param pos Block Position
+     * @param side The Side in question
+     * @return True if the side is solid
+    */
+    public boolean isSideSolid(BlockPos pos, EnumFacing side)
     {
+       return isSideSolid(pos, side, false);
+    }
+
+    /**
+     * Determine if the given block is considered solid on the
+     * specified side.  Used by placement logic.
+     *
+     * @param pos Block Position
+     * @param side The Side in question
+     * @param _default The default to return if the block doesn't exist.
+     * @return True if the side is solid
+     */
+    @Override
+    public boolean isSideSolid(BlockPos pos, EnumFacing side, boolean _default)
+    {
+        if (!this.isValid(pos)) return _default;
+
+        Chunk chunk = getChunkFromBlockCoords(pos);
+        if (chunk == null || chunk.isEmpty()) return _default;
+        return getBlockState(pos).isSideSolid(this, pos, side);
+    }
+
+    /**
+     * Get the persistent chunks for this world
+     *
+     * @return
+     */
+    public com.google.common.collect.ImmutableSetMultimap<net.minecraft.util.math.ChunkPos, net.minecraftforge.common.ForgeChunkManager.Ticket> getPersistentChunks()
+    {
+        return net.minecraftforge.common.ForgeChunkManager.getPersistentChunksFor(this);
+    }
+
+    public Iterator<Chunk> getPersistentChunkIterable(Iterator<Chunk> chunkIterator)
+    {
+        return net.minecraftforge.common.ForgeChunkManager.getPersistentChunksIterableFor(this, chunkIterator);
+    }
+    /**
+     * Readded as it was removed, very useful helper function
+     *
+     * @param pos Block position
+     * @return The blocks light opacity
+     */
+    public int getBlockLightOpacity(BlockPos pos)
+    {
+        if (!this.isValid(pos)) return 0;
+        return getChunkFromBlockCoords(pos).getBlockLightOpacity(pos);
+    }
+
+    /**
+     * Returns a count of entities that classify themselves as the specified creature type.
+     */
+    public int countEntities(net.minecraft.entity.EnumCreatureType type, boolean forSpawnCount)
+    {
+        int count = 0;
+        for (int x = 0; x < loadedEntityList.size(); x++)
+        {
+            if (((Entity)loadedEntityList.get(x)).isCreatureType(type, forSpawnCount))
+            {
+                count++;
+            }
+        }
+        return count;
+    }
+
+    protected void initCapabilities()
+    {
+        net.minecraftforge.common.capabilities.ICapabilityProvider parent = provider.initCapabilities();
+        capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this, parent);
+        net.minecraftforge.common.util.WorldCapabilityData data = (net.minecraftforge.common.util.WorldCapabilityData)perWorldStorage.getOrLoadData(net.minecraftforge.common.util.WorldCapabilityData.class, net.minecraftforge.common.util.WorldCapabilityData.ID);
+        if (data == null)
+        {
+            capabilityData = new net.minecraftforge.common.util.WorldCapabilityData(capabilities);
+            perWorldStorage.setData(capabilityData.mapName, capabilityData);
+        }
+        else
+        {
+            capabilityData = data;
+            capabilityData.setCapabilities(provider, capabilities);
+        }
+    }
+    @Override
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable EnumFacing facing)
+    {
+        return capabilities == null ? false : capabilities.hasCapability(capability, facing);
+    }
+    @Override
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable EnumFacing facing)
+    {
+        return capabilities == null ? null : capabilities.getCapability(capability, facing);
+    }
+
+    protected MapStorage perWorldStorage; //Moved to a getter to simulate final without being final so we can load in subclasses.
+    public MapStorage getPerWorldStorage()
+    {
+        return perWorldStorage;
+    }
+
+    public void sendPacketToServer(Packet<?> packetIn)
+    {
         throw new UnsupportedOperationException("Can\'t send packets to server unless you\'re on the client.");
     }
 
-    public LootTableManager func_184146_ak()
+    public LootTableManager getLootTableManager()
     {
-        return this.field_184151_B;
+        return this.lootTable;
     }
 
     @Nullable
-    public BlockPos func_190528_a(String p_190528_1_, BlockPos p_190528_2_, boolean p_190528_3_)
+    public BlockPos findNearestStructure(String p_190528_1_, BlockPos p_190528_2_, boolean p_190528_3_)
     {
         return null;
     }
