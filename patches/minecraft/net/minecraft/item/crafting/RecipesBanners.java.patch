--- ../src-base/minecraft/net/minecraft/item/crafting/RecipesBanners.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/RecipesBanners.java
@@ -27,11 +27,13 @@
         p_179534_1_.func_180302_a(new RecipesBanners.RecipeAddPattern());
     }
 
-    public static class RecipeAddPattern implements IRecipe
+    public static class RecipeAddPattern extends ShapelessRecipes implements IRecipe
         {
-            private RecipeAddPattern()
-            {
+            // CraftBukkit start - Delegate to new parent class with bogus info
+            private RecipeAddPattern() {
+                super(new ItemStack(Items.field_179564_cE, 0, 0), java.util.Arrays.asList(new ItemStack(Items.field_179564_cE)));
             }
+            // CraftBukkit end
 
             public boolean func_77569_a(InventoryCrafting p_77569_1_, World p_77569_2_)
             {
@@ -93,9 +95,10 @@
                     {
                         ItemStack itemstack2 = p_77572_1_.func_70301_a(j);
 
-                        if (itemstack2.func_77973_b() == Items.field_151100_aR)
+                        int color = getColor(itemstack2);
+                        if (color != -1)
                         {
-                            k = itemstack2.func_77960_j();
+                            k = color;
                             break;
                         }
                     }
@@ -139,11 +142,7 @@
                 for (int i = 0; i < nonnulllist.size(); ++i)
                 {
                     ItemStack itemstack = p_179532_1_.func_70301_a(i);
-
-                    if (itemstack.func_77973_b().func_77634_r())
-                    {
-                        nonnulllist.set(i, new ItemStack(itemstack.func_77973_b().func_77668_q()));
-                    }
+                    nonnulllist.set(i, net.minecraftforge.common.ForgeHooks.getContainerItem(itemstack));
                 }
 
                 return nonnulllist;
@@ -169,7 +168,7 @@
 
                                 if (!itemstack.func_190926_b() && itemstack.func_77973_b() != Items.field_179564_cE)
                                 {
-                                    if (itemstack.func_77973_b() == Items.field_151100_aR)
+                                    if (isDye(itemstack))
                                     {
                                         if (flag2)
                                         {
@@ -209,7 +208,7 @@
 
                                 if (!itemstack1.func_190926_b() && itemstack1.func_77973_b() != Items.field_179564_cE)
                                 {
-                                    if (itemstack1.func_77973_b() != Items.field_151100_aR)
+                                    if (!isDye(itemstack1))
                                     {
                                         flag = false;
                                         break;
@@ -250,13 +249,47 @@
 
                 return null;
             }
+
+            private static String[] colors = { "Black", "Red", "Green", "Brown", "Blue", "Purple", "Cyan", "LightGray", "Gray", "Pink", "Lime", "Yellow", "LightBlue", "Magenta", "Orange", "White" };
+            @SuppressWarnings("unchecked") //Why java...
+            private static java.util.List<ItemStack>[] colored = new java.util.List[colors.length];
+            private static java.util.List<ItemStack> dyes;
+            private static boolean hasInit = false;
+            private static void init()
+            {
+                if (hasInit) return;
+                for (int x = 0; x < colors.length; x++)
+                    colored[x] = net.minecraftforge.oredict.OreDictionary.getOres("dye" + colors[x]);
+                dyes = net.minecraftforge.oredict.OreDictionary.getOres("dye");
+                hasInit = true;
+            }
+            private boolean isDye(ItemStack stack)
+            {
+                init();
+                for (ItemStack ore : dyes)
+                    if (net.minecraftforge.oredict.OreDictionary.itemMatches(ore, stack, false))
+                        return true;
+                return false;
+            }
+            private int getColor(ItemStack stack)
+            {
+                init();
+                if (stack == null) return -1;
+                for (int x = 0; x < colored.length; x++)
+                    for (ItemStack ore : colored[x])
+                        if (net.minecraftforge.oredict.OreDictionary.itemMatches(ore, stack, true))
+                            return x;
+                return -1;
+            }
         }
 
-    public static class RecipeDuplicatePattern implements IRecipe
+    public static class RecipeDuplicatePattern extends ShapelessRecipes implements IRecipe
         {
-            private RecipeDuplicatePattern()
-            {
+            // CraftBukkit start - Delegate to new parent class with bogus info
+            private RecipeDuplicatePattern() {
+                super(new ItemStack(Items.field_179564_cE, 0, 0), java.util.Arrays.asList(new ItemStack(Items.field_151100_aR, 0, 5)));
             }
+            // CraftBukkit end
 
             public boolean func_77569_a(InventoryCrafting p_77569_1_, World p_77569_2_)
             {
@@ -361,9 +394,9 @@
 
                     if (!itemstack.func_190926_b())
                     {
-                        if (itemstack.func_77973_b().func_77634_r())
+                        if (itemstack.func_77973_b().hasContainerItem(itemstack))
                         {
-                            nonnulllist.set(i, new ItemStack(itemstack.func_77973_b().func_77668_q()));
+                            nonnulllist.set(i, net.minecraftforge.common.ForgeHooks.getContainerItem(itemstack));
                         }
                         else if (itemstack.func_77942_o() && TileEntityBanner.func_175113_c(itemstack) > 0)
                         {
