--- ../src-base/minecraft/net/minecraft/item/crafting/RecipeRepairItem.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/RecipeRepairItem.java
@@ -2,23 +2,30 @@
 
 import com.google.common.collect.Lists;
 import java.util.List;
+
+import net.minecraft.init.Items;
 import net.minecraft.inventory.InventoryCrafting;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.NonNullList;
 import net.minecraft.world.World;
 
-public class RecipeRepairItem implements IRecipe
+public class RecipeRepairItem extends ShapelessRecipes implements IRecipe
 {
-    public boolean func_77569_a(InventoryCrafting p_77569_1_, World p_77569_2_)
+    // CraftBukkit start - Delegate to new parent class
+    public RecipeRepairItem() {
+        super(new ItemStack(Items.LEATHER_HELMET), java.util.Arrays.asList(new ItemStack(Items.LEATHER_HELMET)));
+    }
+    // CraftBukkit end
+    public boolean matches(InventoryCrafting inv, World worldIn)
     {
         List<ItemStack> list = Lists.<ItemStack>newArrayList();
 
-        for (int i = 0; i < p_77569_1_.func_70302_i_(); ++i)
+        for (int i = 0; i < inv.getSizeInventory(); ++i)
         {
-            ItemStack itemstack = p_77569_1_.func_70301_a(i);
+            ItemStack itemstack = inv.getStackInSlot(i);
 
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
                 list.add(itemstack);
 
@@ -26,7 +33,7 @@
                 {
                     ItemStack itemstack1 = (ItemStack)list.get(0);
 
-                    if (itemstack.func_77973_b() != itemstack1.func_77973_b() || itemstack1.func_190916_E() != 1 || itemstack.func_190916_E() != 1 || !itemstack1.func_77973_b().func_77645_m())
+                    if (itemstack.getItem() != itemstack1.getItem() || itemstack1.getCount() != 1 || itemstack.getCount() != 1 || !itemstack1.getItem().isRepairable())
                     {
                         return false;
                     }
@@ -37,15 +44,15 @@
         return list.size() == 2;
     }
 
-    public ItemStack func_77572_b(InventoryCrafting p_77572_1_)
+    public ItemStack getCraftingResult(InventoryCrafting inv)
     {
         List<ItemStack> list = Lists.<ItemStack>newArrayList();
 
-        for (int i = 0; i < p_77572_1_.func_70302_i_(); ++i)
+        for (int i = 0; i < inv.getSizeInventory(); ++i)
         {
-            ItemStack itemstack = p_77572_1_.func_70301_a(i);
+            ItemStack itemstack = inv.getStackInSlot(i);
 
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
                 list.add(itemstack);
 
@@ -53,9 +60,9 @@
                 {
                     ItemStack itemstack1 = (ItemStack)list.get(0);
 
-                    if (itemstack.func_77973_b() != itemstack1.func_77973_b() || itemstack1.func_190916_E() != 1 || itemstack.func_190916_E() != 1 || !itemstack1.func_77973_b().func_77645_m())
+                    if (itemstack.getItem() != itemstack1.getItem() || itemstack1.getCount() != 1 || itemstack.getCount() != 1 || !itemstack1.getItem().isRepairable())
                     {
-                        return ItemStack.field_190927_a;
+                        return ItemStack.EMPTY;
                     }
                 }
             }
@@ -66,48 +73,44 @@
             ItemStack itemstack2 = (ItemStack)list.get(0);
             ItemStack itemstack3 = (ItemStack)list.get(1);
 
-            if (itemstack2.func_77973_b() == itemstack3.func_77973_b() && itemstack2.func_190916_E() == 1 && itemstack3.func_190916_E() == 1 && itemstack2.func_77973_b().func_77645_m())
+            if (itemstack2.getItem() == itemstack3.getItem() && itemstack2.getCount() == 1 && itemstack3.getCount() == 1 && itemstack2.getItem().isRepairable())
             {
-                Item item = itemstack2.func_77973_b();
-                int j = item.func_77612_l() - itemstack2.func_77952_i();
-                int k = item.func_77612_l() - itemstack3.func_77952_i();
-                int l = j + k + item.func_77612_l() * 5 / 100;
-                int i1 = item.func_77612_l() - l;
+                // FORGE: Make itemstack sensitive // Item item = itemstack2.getItem();
+                int j = itemstack2.getMaxDamage() - itemstack2.getItemDamage();
+                int k = itemstack2.getMaxDamage() - itemstack3.getItemDamage();
+                int l = j + k + itemstack2.getMaxDamage() * 5 / 100;
+                int i1 = itemstack2.getMaxDamage() - l;
 
                 if (i1 < 0)
                 {
                     i1 = 0;
                 }
 
-                return new ItemStack(itemstack2.func_77973_b(), 1, i1);
+                return new ItemStack(itemstack2.getItem(), 1, i1);
             }
         }
 
-        return ItemStack.field_190927_a;
+        return ItemStack.EMPTY;
     }
 
-    public int func_77570_a()
+    public int getRecipeSize()
     {
         return 4;
     }
 
-    public ItemStack func_77571_b()
+    public ItemStack getRecipeOutput()
     {
-        return ItemStack.field_190927_a;
+        return ItemStack.EMPTY;
     }
 
-    public NonNullList<ItemStack> func_179532_b(InventoryCrafting p_179532_1_)
+    public NonNullList<ItemStack> getRemainingItems(InventoryCrafting inv)
     {
-        NonNullList<ItemStack> nonnulllist = NonNullList.<ItemStack>func_191197_a(p_179532_1_.func_70302_i_(), ItemStack.field_190927_a);
+        NonNullList<ItemStack> nonnulllist = NonNullList.<ItemStack>withSize(inv.getSizeInventory(), ItemStack.EMPTY);
 
         for (int i = 0; i < nonnulllist.size(); ++i)
         {
-            ItemStack itemstack = p_179532_1_.func_70301_a(i);
-
-            if (itemstack.func_77973_b().func_77634_r())
-            {
-                nonnulllist.set(i, new ItemStack(itemstack.func_77973_b().func_77668_q()));
-            }
+            ItemStack itemstack = inv.getStackInSlot(i);
+            nonnulllist.set(i, net.minecraftforge.common.ForgeHooks.getContainerItem(itemstack));
         }
 
         return nonnulllist;
