--- ../src-base/minecraft/net/minecraft/inventory/InventoryBasic.java
+++ ../src-work/minecraft/net/minecraft/inventory/InventoryBasic.java
@@ -10,140 +10,181 @@
 import net.minecraft.util.text.TextComponentTranslation;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
 
 public class InventoryBasic implements IInventory
 {
-    private String field_70483_a;
-    private final int field_70481_b;
-    public final NonNullList<ItemStack> field_70482_c;
-    private List<IInventoryChangedListener> field_70480_d;
-    private boolean field_94051_e;
+    private String inventoryTitle;
+    private final int slotsCount;
+    public final NonNullList<ItemStack> inventoryContents;
+    private List<IInventoryChangedListener> changeListeners;
+    private boolean hasCustomName;
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = MAX_STACK;
+    protected org.bukkit.inventory.InventoryHolder bukkitOwner;
 
-    public InventoryBasic(String p_i1561_1_, boolean p_i1561_2_, int p_i1561_3_)
-    {
-        this.field_70483_a = p_i1561_1_;
-        this.field_94051_e = p_i1561_2_;
-        this.field_70481_b = p_i1561_3_;
-        this.field_70482_c = NonNullList.<ItemStack>func_191197_a(p_i1561_3_, ItemStack.field_190927_a);
+    public List<ItemStack> getContents() {
+        return this.inventoryContents;
     }
 
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    public void setMaxStackSize(int i) {
+        maxStack = i;
+    }
+
+    public org.bukkit.inventory.InventoryHolder getOwner() {
+        return bukkitOwner;
+    }
+
+    @Override
+    public Location getLocation() {
+        return null;
+    }
+
+    public InventoryBasic(String s, boolean flag, int i) {
+        this(s, flag, i, null);
+    }
+
+    public InventoryBasic(String title, boolean customName, int slotCount, org.bukkit.inventory.InventoryHolder owner) {
+        this.bukkitOwner = owner;
+        // CraftBukkit end
+        this.inventoryTitle = title;
+        this.hasCustomName = customName;
+        this.slotsCount = slotCount;
+        this.inventoryContents = NonNullList.<ItemStack>withSize(slotCount, ItemStack.EMPTY);
+    }
+
     @SideOnly(Side.CLIENT)
-    public InventoryBasic(ITextComponent p_i45902_1_, int p_i45902_2_)
+    public InventoryBasic(ITextComponent title, int slotCount)
     {
-        this(p_i45902_1_.func_150260_c(), true, p_i45902_2_);
+        this(title.getUnformattedText(), true, slotCount);
     }
 
-    public void func_110134_a(IInventoryChangedListener p_110134_1_)
+    public void addInventoryChangeListener(IInventoryChangedListener listener)
     {
-        if (this.field_70480_d == null)
+        if (this.changeListeners == null)
         {
-            this.field_70480_d = Lists.<IInventoryChangedListener>newArrayList();
+            this.changeListeners = Lists.<IInventoryChangedListener>newArrayList();
         }
 
-        this.field_70480_d.add(p_110134_1_);
+        this.changeListeners.add(listener);
     }
 
-    public void func_110132_b(IInventoryChangedListener p_110132_1_)
+    public void removeInventoryChangeListener(IInventoryChangedListener listener)
     {
-        this.field_70480_d.remove(p_110132_1_);
+        this.changeListeners.remove(listener);
     }
 
-    public ItemStack func_70301_a(int p_70301_1_)
+    public ItemStack getStackInSlot(int index)
     {
-        return p_70301_1_ >= 0 && p_70301_1_ < this.field_70482_c.size() ? (ItemStack)this.field_70482_c.get(p_70301_1_) : ItemStack.field_190927_a;
+        return index >= 0 && index < this.inventoryContents.size() ? (ItemStack)this.inventoryContents.get(index) : ItemStack.EMPTY;
     }
 
-    public ItemStack func_70298_a(int p_70298_1_, int p_70298_2_)
+    public ItemStack decrStackSize(int index, int count)
     {
-        ItemStack itemstack = ItemStackHelper.func_188382_a(this.field_70482_c, p_70298_1_, p_70298_2_);
+        ItemStack itemstack = ItemStackHelper.getAndSplit(this.inventoryContents, index, count);
 
-        if (!itemstack.func_190926_b())
+        if (!itemstack.isEmpty())
         {
-            this.func_70296_d();
+            this.markDirty();
         }
 
         return itemstack;
     }
 
-    public ItemStack func_174894_a(ItemStack p_174894_1_)
+    public ItemStack addItem(ItemStack stack)
     {
-        ItemStack itemstack = p_174894_1_.func_77946_l();
+        ItemStack itemstack = stack.copy();
 
-        for (int i = 0; i < this.field_70481_b; ++i)
+        for (int i = 0; i < this.slotsCount; ++i)
         {
-            ItemStack itemstack1 = this.func_70301_a(i);
+            ItemStack itemstack1 = this.getStackInSlot(i);
 
-            if (itemstack1.func_190926_b())
+            if (itemstack1.isEmpty())
             {
-                this.func_70299_a(i, itemstack);
-                this.func_70296_d();
-                return ItemStack.field_190927_a;
+                this.setInventorySlotContents(i, itemstack);
+                this.markDirty();
+                return ItemStack.EMPTY;
             }
 
-            if (ItemStack.func_179545_c(itemstack1, itemstack))
+            if (ItemStack.areItemsEqual(itemstack1, itemstack))
             {
-                int j = Math.min(this.func_70297_j_(), itemstack1.func_77976_d());
-                int k = Math.min(itemstack.func_190916_E(), j - itemstack1.func_190916_E());
+                int j = Math.min(this.getInventoryStackLimit(), itemstack1.getMaxStackSize());
+                int k = Math.min(itemstack.getCount(), j - itemstack1.getCount());
 
                 if (k > 0)
                 {
-                    itemstack1.func_190917_f(k);
-                    itemstack.func_190918_g(k);
+                    itemstack1.grow(k);
+                    itemstack.shrink(k);
 
-                    if (itemstack.func_190926_b())
+                    if (itemstack.isEmpty())
                     {
-                        this.func_70296_d();
-                        return ItemStack.field_190927_a;
+                        this.markDirty();
+                        return ItemStack.EMPTY;
                     }
                 }
             }
         }
 
-        if (itemstack.func_190916_E() != p_174894_1_.func_190916_E())
+        if (itemstack.getCount() != stack.getCount())
         {
-            this.func_70296_d();
+            this.markDirty();
         }
 
         return itemstack;
     }
 
-    public ItemStack func_70304_b(int p_70304_1_)
+    public ItemStack removeStackFromSlot(int index)
     {
-        ItemStack itemstack = (ItemStack)this.field_70482_c.get(p_70304_1_);
+        ItemStack itemstack = (ItemStack)this.inventoryContents.get(index);
 
-        if (itemstack.func_190926_b())
+        if (itemstack.isEmpty())
         {
-            return ItemStack.field_190927_a;
+            return ItemStack.EMPTY;
         }
         else
         {
-            this.field_70482_c.set(p_70304_1_, ItemStack.field_190927_a);
+            this.inventoryContents.set(index, ItemStack.EMPTY);
             return itemstack;
         }
     }
 
-    public void func_70299_a(int p_70299_1_, ItemStack p_70299_2_)
+    public void setInventorySlotContents(int index, ItemStack stack)
     {
-        this.field_70482_c.set(p_70299_1_, p_70299_2_);
+        this.inventoryContents.set(index, stack);
 
-        if (!p_70299_2_.func_190926_b() && p_70299_2_.func_190916_E() > this.func_70297_j_())
+        if (!stack.isEmpty() && stack.getCount() > this.getInventoryStackLimit())
         {
-            p_70299_2_.func_190920_e(this.func_70297_j_());
+            stack.setCount(this.getInventoryStackLimit());
         }
 
-        this.func_70296_d();
+        this.markDirty();
     }
 
-    public int func_70302_i_()
+    public int getSizeInventory()
     {
-        return this.field_70481_b;
+        return this.slotsCount;
     }
 
-    public boolean func_191420_l()
+    public boolean isEmpty()
     {
-        for (ItemStack itemstack : this.field_70482_c)
+        for (ItemStack itemstack : this.inventoryContents)
         {
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
                 return false;
             }
@@ -152,77 +193,77 @@
         return true;
     }
 
-    public String func_70005_c_()
+    public String getName()
     {
-        return this.field_70483_a;
+        return this.inventoryTitle;
     }
 
-    public boolean func_145818_k_()
+    public boolean hasCustomName()
     {
-        return this.field_94051_e;
+        return this.hasCustomName;
     }
 
-    public void func_110133_a(String p_110133_1_)
+    public void setCustomName(String inventoryTitleIn)
     {
-        this.field_94051_e = true;
-        this.field_70483_a = p_110133_1_;
+        this.hasCustomName = true;
+        this.inventoryTitle = inventoryTitleIn;
     }
 
-    public ITextComponent func_145748_c_()
+    public ITextComponent getDisplayName()
     {
-        return (ITextComponent)(this.func_145818_k_() ? new TextComponentString(this.func_70005_c_()) : new TextComponentTranslation(this.func_70005_c_(), new Object[0]));
+        return (ITextComponent)(this.hasCustomName() ? new TextComponentString(this.getName()) : new TextComponentTranslation(this.getName(), new Object[0]));
     }
 
-    public int func_70297_j_()
+    public int getInventoryStackLimit()
     {
         return 64;
     }
 
-    public void func_70296_d()
+    public void markDirty()
     {
-        if (this.field_70480_d != null)
+        if (this.changeListeners != null)
         {
-            for (int i = 0; i < this.field_70480_d.size(); ++i)
+            for (int i = 0; i < this.changeListeners.size(); ++i)
             {
-                ((IInventoryChangedListener)this.field_70480_d.get(i)).func_76316_a(this);
+                ((IInventoryChangedListener)this.changeListeners.get(i)).onInventoryChanged(this);
             }
         }
     }
 
-    public boolean func_70300_a(EntityPlayer p_70300_1_)
+    public boolean isUsableByPlayer(EntityPlayer player)
     {
         return true;
     }
 
-    public void func_174889_b(EntityPlayer p_174889_1_)
+    public void openInventory(EntityPlayer player)
     {
     }
 
-    public void func_174886_c(EntityPlayer p_174886_1_)
+    public void closeInventory(EntityPlayer player)
     {
     }
 
-    public boolean func_94041_b(int p_94041_1_, ItemStack p_94041_2_)
+    public boolean isItemValidForSlot(int index, ItemStack stack)
     {
         return true;
     }
 
-    public int func_174887_a_(int p_174887_1_)
+    public int getField(int id)
     {
         return 0;
     }
 
-    public void func_174885_b(int p_174885_1_, int p_174885_2_)
+    public void setField(int id, int value)
     {
     }
 
-    public int func_174890_g()
+    public int getFieldCount()
     {
         return 0;
     }
 
-    public void func_174888_l()
+    public void clear()
     {
-        this.field_70482_c.clear();
+        this.inventoryContents.clear();
     }
 }
