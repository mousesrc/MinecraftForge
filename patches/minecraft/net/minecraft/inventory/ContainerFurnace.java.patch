--- ../src-base/minecraft/net/minecraft/inventory/ContainerFurnace.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerFurnace.java
@@ -7,155 +7,172 @@
 import net.minecraft.tileentity.TileEntityFurnace;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.craftbukkit.inventory.CraftInventoryFurnace;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerFurnace extends Container
 {
-    private final IInventory field_75158_e;
-    private int field_178152_f;
-    private int field_178153_g;
-    private int field_178154_h;
-    private int field_178155_i;
+    private final IInventory tileFurnace;
+    private int cookTime;
+    private int totalCookTime;
+    private int furnaceBurnTime;
+    private int currentItemBurnTime;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
 
-    public ContainerFurnace(InventoryPlayer p_i45794_1_, IInventory p_i45794_2_)
-    {
-        this.field_75158_e = p_i45794_2_;
-        this.func_75146_a(new Slot(p_i45794_2_, 0, 56, 17));
-        this.func_75146_a(new SlotFurnaceFuel(p_i45794_2_, 1, 56, 53));
-        this.func_75146_a(new SlotFurnaceOutput(p_i45794_1_.field_70458_d, p_i45794_2_, 2, 116, 35));
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
 
+        CraftInventoryFurnace inventory = new CraftInventoryFurnace((TileEntityFurnace) this.tileFurnace);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
+
+    public ContainerFurnace(InventoryPlayer playerInventory, IInventory furnaceInventory)
+    {
+        this.tileFurnace = furnaceInventory;
+        this.addSlotToContainer(new Slot(furnaceInventory, 0, 56, 17));
+        this.addSlotToContainer(new SlotFurnaceFuel(furnaceInventory, 1, 56, 53));
+        this.addSlotToContainer(new SlotFurnaceOutput(playerInventory.player, furnaceInventory, 2, 116, 35));
+        this.player = playerInventory; // CraftBukkit - save player
         for (int i = 0; i < 3; ++i)
         {
             for (int j = 0; j < 9; ++j)
             {
-                this.func_75146_a(new Slot(p_i45794_1_, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
+                this.addSlotToContainer(new Slot(playerInventory, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
             }
         }
 
         for (int k = 0; k < 9; ++k)
         {
-            this.func_75146_a(new Slot(p_i45794_1_, k, 8 + k * 18, 142));
+            this.addSlotToContainer(new Slot(playerInventory, k, 8 + k * 18, 142));
         }
     }
 
-    public void func_75132_a(IContainerListener p_75132_1_)
+    public void addListener(IContainerListener listener)
     {
-        super.func_75132_a(p_75132_1_);
-        p_75132_1_.func_175173_a(this, this.field_75158_e);
+        super.addListener(listener);
+        listener.sendAllWindowProperties(this, this.tileFurnace);
     }
 
-    public void func_75142_b()
+    public void detectAndSendChanges()
     {
-        super.func_75142_b();
+        super.detectAndSendChanges();
 
-        for (int i = 0; i < this.field_75149_d.size(); ++i)
+        for (int i = 0; i < this.listeners.size(); ++i)
         {
-            IContainerListener icontainerlistener = (IContainerListener)this.field_75149_d.get(i);
+            IContainerListener icontainerlistener = (IContainerListener)this.listeners.get(i);
 
-            if (this.field_178152_f != this.field_75158_e.func_174887_a_(2))
+            if (this.cookTime != this.tileFurnace.getField(2))
             {
-                icontainerlistener.func_71112_a(this, 2, this.field_75158_e.func_174887_a_(2));
+                icontainerlistener.sendProgressBarUpdate(this, 2, this.tileFurnace.getField(2));
             }
 
-            if (this.field_178154_h != this.field_75158_e.func_174887_a_(0))
+            if (this.furnaceBurnTime != this.tileFurnace.getField(0))
             {
-                icontainerlistener.func_71112_a(this, 0, this.field_75158_e.func_174887_a_(0));
+                icontainerlistener.sendProgressBarUpdate(this, 0, this.tileFurnace.getField(0));
             }
 
-            if (this.field_178155_i != this.field_75158_e.func_174887_a_(1))
+            if (this.currentItemBurnTime != this.tileFurnace.getField(1))
             {
-                icontainerlistener.func_71112_a(this, 1, this.field_75158_e.func_174887_a_(1));
+                icontainerlistener.sendProgressBarUpdate(this, 1, this.tileFurnace.getField(1));
             }
 
-            if (this.field_178153_g != this.field_75158_e.func_174887_a_(3))
+            if (this.totalCookTime != this.tileFurnace.getField(3))
             {
-                icontainerlistener.func_71112_a(this, 3, this.field_75158_e.func_174887_a_(3));
+                icontainerlistener.sendProgressBarUpdate(this, 3, this.tileFurnace.getField(3));
             }
         }
 
-        this.field_178152_f = this.field_75158_e.func_174887_a_(2);
-        this.field_178154_h = this.field_75158_e.func_174887_a_(0);
-        this.field_178155_i = this.field_75158_e.func_174887_a_(1);
-        this.field_178153_g = this.field_75158_e.func_174887_a_(3);
+        this.cookTime = this.tileFurnace.getField(2);
+        this.furnaceBurnTime = this.tileFurnace.getField(0);
+        this.currentItemBurnTime = this.tileFurnace.getField(1);
+        this.totalCookTime = this.tileFurnace.getField(3);
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_75137_b(int p_75137_1_, int p_75137_2_)
+    public void updateProgressBar(int id, int data)
     {
-        this.field_75158_e.func_174885_b(p_75137_1_, p_75137_2_);
+        this.tileFurnace.setField(id, data);
     }
 
-    public boolean func_75145_c(EntityPlayer p_75145_1_)
+    public boolean canInteractWith(EntityPlayer playerIn)
     {
-        return this.field_75158_e.func_70300_a(p_75145_1_);
+        return this.tileFurnace.isUsableByPlayer(playerIn);
     }
 
-    public ItemStack func_82846_b(EntityPlayer p_82846_1_, int p_82846_2_)
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
-        ItemStack itemstack = ItemStack.field_190927_a;
-        Slot slot = (Slot)this.field_75151_b.get(p_82846_2_);
+        ItemStack itemstack = ItemStack.EMPTY;
+        Slot slot = (Slot)this.inventorySlots.get(index);
 
-        if (slot != null && slot.func_75216_d())
+        if (slot != null && slot.getHasStack())
         {
-            ItemStack itemstack1 = slot.func_75211_c();
-            itemstack = itemstack1.func_77946_l();
+            ItemStack itemstack1 = slot.getStack();
+            itemstack = itemstack1.copy();
 
-            if (p_82846_2_ == 2)
+            if (index == 2)
             {
-                if (!this.func_75135_a(itemstack1, 3, 39, true))
+                if (!this.mergeItemStack(itemstack1, 3, 39, true))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
 
-                slot.func_75220_a(itemstack1, itemstack);
+                slot.onSlotChange(itemstack1, itemstack);
             }
-            else if (p_82846_2_ != 1 && p_82846_2_ != 0)
+            else if (index != 1 && index != 0)
             {
-                if (!FurnaceRecipes.func_77602_a().func_151395_a(itemstack1).func_190926_b())
+                if (!FurnaceRecipes.instance().getSmeltingResult(itemstack1).isEmpty())
                 {
-                    if (!this.func_75135_a(itemstack1, 0, 1, false))
+                    if (!this.mergeItemStack(itemstack1, 0, 1, false))
                     {
-                        return ItemStack.field_190927_a;
+                        return ItemStack.EMPTY;
                     }
                 }
-                else if (TileEntityFurnace.func_145954_b(itemstack1))
+                else if (TileEntityFurnace.isItemFuel(itemstack1))
                 {
-                    if (!this.func_75135_a(itemstack1, 1, 2, false))
+                    if (!this.mergeItemStack(itemstack1, 1, 2, false))
                     {
-                        return ItemStack.field_190927_a;
+                        return ItemStack.EMPTY;
                     }
                 }
-                else if (p_82846_2_ >= 3 && p_82846_2_ < 30)
+                else if (index >= 3 && index < 30)
                 {
-                    if (!this.func_75135_a(itemstack1, 30, 39, false))
+                    if (!this.mergeItemStack(itemstack1, 30, 39, false))
                     {
-                        return ItemStack.field_190927_a;
+                        return ItemStack.EMPTY;
                     }
                 }
-                else if (p_82846_2_ >= 30 && p_82846_2_ < 39 && !this.func_75135_a(itemstack1, 3, 30, false))
+                else if (index >= 30 && index < 39 && !this.mergeItemStack(itemstack1, 3, 30, false))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
             }
-            else if (!this.func_75135_a(itemstack1, 3, 39, false))
+            else if (!this.mergeItemStack(itemstack1, 3, 39, false))
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            if (itemstack1.func_190926_b())
+            if (itemstack1.isEmpty())
             {
-                slot.func_75215_d(ItemStack.field_190927_a);
+                slot.putStack(ItemStack.EMPTY);
             }
             else
             {
-                slot.func_75218_e();
+                slot.onSlotChanged();
             }
 
-            if (itemstack1.func_190916_E() == itemstack.func_190916_E())
+            if (itemstack1.getCount() == itemstack.getCount())
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            slot.func_190901_a(p_82846_1_, itemstack1);
+            slot.onTake(playerIn, itemstack1);
         }
 
         return itemstack;
