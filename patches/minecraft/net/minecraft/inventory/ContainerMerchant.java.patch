--- ../src-base/minecraft/net/minecraft/inventory/ContainerMerchant.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerMerchant.java
@@ -5,135 +5,147 @@
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.item.ItemStack;
 import net.minecraft.world.World;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerMerchant extends Container
 {
-    private final IMerchant field_75178_e;
-    private final InventoryMerchant field_75176_f;
-    private final World field_75177_g;
+    private final IMerchant theMerchant;
+    private final InventoryMerchant merchantInventory;
+    private final World world;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private InventoryPlayer player;
 
-    public ContainerMerchant(InventoryPlayer p_i1821_1_, IMerchant p_i1821_2_, World p_i1821_3_)
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity == null) {
+            bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), new org.bukkit.craftbukkit.inventory.CraftInventoryMerchant((net.minecraft.inventory.InventoryMerchant) merchantInventory), this);
+        }
+        return bukkitEntity;
+    }
+    // CraftBukkit end
+    public ContainerMerchant(InventoryPlayer playerInventory, IMerchant merchant, World worldIn)
     {
-        this.field_75178_e = p_i1821_2_;
-        this.field_75177_g = p_i1821_3_;
-        this.field_75176_f = new InventoryMerchant(p_i1821_1_.field_70458_d, p_i1821_2_);
-        this.func_75146_a(new Slot(this.field_75176_f, 0, 36, 53));
-        this.func_75146_a(new Slot(this.field_75176_f, 1, 62, 53));
-        this.func_75146_a(new SlotMerchantResult(p_i1821_1_.field_70458_d, p_i1821_2_, this.field_75176_f, 2, 120, 53));
+        this.theMerchant = merchant;
+        this.world = worldIn;
+        this.merchantInventory = new InventoryMerchant(playerInventory.player, merchant);
+        this.addSlotToContainer(new Slot(this.merchantInventory, 0, 36, 53));
+        this.addSlotToContainer(new Slot(this.merchantInventory, 1, 62, 53));
+        this.addSlotToContainer(new SlotMerchantResult(playerInventory.player, merchant, this.merchantInventory, 2, 120, 53));
 
         for (int i = 0; i < 3; ++i)
         {
             for (int j = 0; j < 9; ++j)
             {
-                this.func_75146_a(new Slot(p_i1821_1_, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
+                this.addSlotToContainer(new Slot(playerInventory, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
             }
         }
 
         for (int k = 0; k < 9; ++k)
         {
-            this.func_75146_a(new Slot(p_i1821_1_, k, 8 + k * 18, 142));
+            this.addSlotToContainer(new Slot(playerInventory, k, 8 + k * 18, 142));
         }
     }
 
-    public InventoryMerchant func_75174_d()
+    public InventoryMerchant getMerchantInventory()
     {
-        return this.field_75176_f;
+        return this.merchantInventory;
     }
 
-    public void func_75130_a(IInventory p_75130_1_)
+    public void onCraftMatrixChanged(IInventory inventoryIn)
     {
-        this.field_75176_f.func_70470_g();
-        super.func_75130_a(p_75130_1_);
+        this.merchantInventory.resetRecipeAndSlots();
+        super.onCraftMatrixChanged(inventoryIn);
     }
 
-    public void func_75175_c(int p_75175_1_)
+    public void setCurrentRecipeIndex(int currentRecipeIndex)
     {
-        this.field_75176_f.func_70471_c(p_75175_1_);
+        this.merchantInventory.setCurrentRecipeIndex(currentRecipeIndex);
     }
 
-    public boolean func_75145_c(EntityPlayer p_75145_1_)
+    public boolean canInteractWith(EntityPlayer playerIn)
     {
-        return this.field_75178_e.func_70931_l_() == p_75145_1_;
+        return this.theMerchant.getCustomer() == playerIn;
     }
 
-    public ItemStack func_82846_b(EntityPlayer p_82846_1_, int p_82846_2_)
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
-        ItemStack itemstack = ItemStack.field_190927_a;
-        Slot slot = (Slot)this.field_75151_b.get(p_82846_2_);
+        ItemStack itemstack = ItemStack.EMPTY;
+        Slot slot = (Slot)this.inventorySlots.get(index);
 
-        if (slot != null && slot.func_75216_d())
+        if (slot != null && slot.getHasStack())
         {
-            ItemStack itemstack1 = slot.func_75211_c();
-            itemstack = itemstack1.func_77946_l();
+            ItemStack itemstack1 = slot.getStack();
+            itemstack = itemstack1.copy();
 
-            if (p_82846_2_ == 2)
+            if (index == 2)
             {
-                if (!this.func_75135_a(itemstack1, 3, 39, true))
+                if (!this.mergeItemStack(itemstack1, 3, 39, true))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
 
-                slot.func_75220_a(itemstack1, itemstack);
+                slot.onSlotChange(itemstack1, itemstack);
             }
-            else if (p_82846_2_ != 0 && p_82846_2_ != 1)
+            else if (index != 0 && index != 1)
             {
-                if (p_82846_2_ >= 3 && p_82846_2_ < 30)
+                if (index >= 3 && index < 30)
                 {
-                    if (!this.func_75135_a(itemstack1, 30, 39, false))
+                    if (!this.mergeItemStack(itemstack1, 30, 39, false))
                     {
-                        return ItemStack.field_190927_a;
+                        return ItemStack.EMPTY;
                     }
                 }
-                else if (p_82846_2_ >= 30 && p_82846_2_ < 39 && !this.func_75135_a(itemstack1, 3, 30, false))
+                else if (index >= 30 && index < 39 && !this.mergeItemStack(itemstack1, 3, 30, false))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
             }
-            else if (!this.func_75135_a(itemstack1, 3, 39, false))
+            else if (!this.mergeItemStack(itemstack1, 3, 39, false))
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            if (itemstack1.func_190926_b())
+            if (itemstack1.isEmpty())
             {
-                slot.func_75215_d(ItemStack.field_190927_a);
+                slot.putStack(ItemStack.EMPTY);
             }
             else
             {
-                slot.func_75218_e();
+                slot.onSlotChanged();
             }
 
-            if (itemstack1.func_190916_E() == itemstack.func_190916_E())
+            if (itemstack1.getCount() == itemstack.getCount())
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            slot.func_190901_a(p_82846_1_, itemstack1);
+            slot.onTake(playerIn, itemstack1);
         }
 
         return itemstack;
     }
 
-    public void func_75134_a(EntityPlayer p_75134_1_)
+    public void onContainerClosed(EntityPlayer playerIn)
     {
-        super.func_75134_a(p_75134_1_);
-        this.field_75178_e.func_70932_a_((EntityPlayer)null);
-        super.func_75134_a(p_75134_1_);
+        super.onContainerClosed(playerIn);
+        this.theMerchant.setCustomer((EntityPlayer)null);
+        super.onContainerClosed(playerIn);
 
-        if (!this.field_75177_g.field_72995_K)
+        if (!this.world.isRemote)
         {
-            ItemStack itemstack = this.field_75176_f.func_70304_b(0);
+            ItemStack itemstack = this.merchantInventory.removeStackFromSlot(0);
 
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
-                p_75134_1_.func_71019_a(itemstack, false);
+                playerIn.dropItem(itemstack, false);
             }
 
-            itemstack = this.field_75176_f.func_70304_b(1);
+            itemstack = this.merchantInventory.removeStackFromSlot(1);
 
-            if (!itemstack.func_190926_b())
+            if (!itemstack.isEmpty())
             {
-                p_75134_1_.func_71019_a(itemstack, false);
+                playerIn.dropItem(itemstack, false);
             }
         }
     }
