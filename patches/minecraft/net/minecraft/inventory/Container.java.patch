--- ../src-base/minecraft/net/minecraft/inventory/Container.java
+++ ../src-work/minecraft/net/minecraft/inventory/Container.java
@@ -2,105 +2,127 @@
 
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
+
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 import java.util.Set;
 import javax.annotation.Nullable;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.entity.player.InventoryPlayer;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
+import net.minecraft.network.play.server.SPacketSetSlot;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.NonNullList;
 import net.minecraft.util.math.MathHelper;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Material;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.Event;
+import org.bukkit.event.inventory.InventoryDragEvent;
+import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.inventory.InventoryView;
 
 public abstract class Container
 {
-    public NonNullList<ItemStack> field_75153_a = NonNullList.<ItemStack>func_191196_a();
-    public List<Slot> field_75151_b = Lists.<Slot>newArrayList();
-    public int field_75152_c;
+    public NonNullList<ItemStack> inventoryItemStacks = NonNullList.<ItemStack>create();
+    public List<Slot> inventorySlots = Lists.<Slot>newArrayList();
+    public int windowId;
     @SideOnly(Side.CLIENT)
-    private short field_75150_e;
-    private int field_94535_f = -1;
-    private int field_94536_g;
-    private final Set<Slot> field_94537_h = Sets.<Slot>newHashSet();
-    protected List<IContainerListener> field_75149_d = Lists.<IContainerListener>newArrayList();
-    private final Set<EntityPlayer> field_75148_f = Sets.<EntityPlayer>newHashSet();
-
-    protected Slot func_75146_a(Slot p_75146_1_)
+    private short transactionID;
+    private int dragMode = -1;
+    private int dragEvent;
+    private final Set<Slot> dragSlots = Sets.<Slot>newHashSet();
+    protected List<IContainerListener> listeners = Lists.<IContainerListener>newArrayList();
+    private final Set<EntityPlayer> playerList = Sets.<EntityPlayer>newHashSet();
+    // CraftBukkit start
+    public boolean checkReachable = true;
+    public abstract InventoryView getBukkitView();
+    public void transferTo(net.minecraft.inventory.Container other, org.bukkit.craftbukkit.entity.CraftHumanEntity player) {
+        InventoryView source = this.getBukkitView(), destination = other.getBukkitView();
+        ((CraftInventory) source.getTopInventory()).getInventory().onClose(player);
+        ((CraftInventory) source.getBottomInventory()).getInventory().onClose(player);
+        ((CraftInventory) destination.getTopInventory()).getInventory().onOpen(player);
+        ((CraftInventory) destination.getBottomInventory()).getInventory().onOpen(player);
+    }
+    // CraftBukkit end
+    protected Slot addSlotToContainer(Slot slotIn)
     {
-        p_75146_1_.field_75222_d = this.field_75151_b.size();
-        this.field_75151_b.add(p_75146_1_);
-        this.field_75153_a.add(ItemStack.field_190927_a);
-        return p_75146_1_;
+        slotIn.slotNumber = this.inventorySlots.size();
+        this.inventorySlots.add(slotIn);
+        this.inventoryItemStacks.add(ItemStack.EMPTY);
+        return slotIn;
     }
 
-    public void func_75132_a(IContainerListener p_75132_1_)
+    public void addListener(IContainerListener listener)
     {
-        if (this.field_75149_d.contains(p_75132_1_))
+        if (this.listeners.contains(listener))
         {
             throw new IllegalArgumentException("Listener already listening");
         }
         else
         {
-            this.field_75149_d.add(p_75132_1_);
-            p_75132_1_.func_71110_a(this, this.func_75138_a());
-            this.func_75142_b();
+            this.listeners.add(listener);
+            listener.updateCraftingInventory(this, this.getInventory());
+            this.detectAndSendChanges();
         }
     }
 
-    public NonNullList<ItemStack> func_75138_a()
+    public NonNullList<ItemStack> getInventory()
     {
-        NonNullList<ItemStack> nonnulllist = NonNullList.<ItemStack>func_191196_a();
+        NonNullList<ItemStack> nonnulllist = NonNullList.<ItemStack>create();
 
-        for (int i = 0; i < this.field_75151_b.size(); ++i)
+        for (int i = 0; i < this.inventorySlots.size(); ++i)
         {
-            nonnulllist.add(((Slot)this.field_75151_b.get(i)).func_75211_c());
+            nonnulllist.add(((Slot)this.inventorySlots.get(i)).getStack());
         }
 
         return nonnulllist;
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_82847_b(IContainerListener p_82847_1_)
+    public void removeListener(IContainerListener listener)
     {
-        this.field_75149_d.remove(p_82847_1_);
+        this.listeners.remove(listener);
     }
 
-    public void func_75142_b()
+    public void detectAndSendChanges()
     {
-        for (int i = 0; i < this.field_75151_b.size(); ++i)
+        for (int i = 0; i < this.inventorySlots.size(); ++i)
         {
-            ItemStack itemstack = ((Slot)this.field_75151_b.get(i)).func_75211_c();
-            ItemStack itemstack1 = (ItemStack)this.field_75153_a.get(i);
+            ItemStack itemstack = ((Slot)this.inventorySlots.get(i)).getStack();
+            ItemStack itemstack1 = (ItemStack)this.inventoryItemStacks.get(i);
 
-            if (!ItemStack.func_77989_b(itemstack1, itemstack))
+            if (!ItemStack.areItemStacksEqual(itemstack1, itemstack))
             {
-                itemstack1 = itemstack.func_190926_b() ? ItemStack.field_190927_a : itemstack.func_77946_l();
-                this.field_75153_a.set(i, itemstack1);
+                itemstack1 = itemstack.isEmpty() ? ItemStack.EMPTY : itemstack.copy();
+                this.inventoryItemStacks.set(i, itemstack1);
 
-                for (int j = 0; j < this.field_75149_d.size(); ++j)
+                for (int j = 0; j < this.listeners.size(); ++j)
                 {
-                    ((IContainerListener)this.field_75149_d.get(j)).func_71111_a(this, i, itemstack1);
+                    ((IContainerListener)this.listeners.get(j)).sendSlotContents(this, i, itemstack1);
                 }
             }
         }
     }
 
-    public boolean func_75140_a(EntityPlayer p_75140_1_, int p_75140_2_)
+    public boolean enchantItem(EntityPlayer playerIn, int id)
     {
         return false;
     }
 
     @Nullable
-    public Slot func_75147_a(IInventory p_75147_1_, int p_75147_2_)
+    public Slot getSlotFromInventory(IInventory inv, int slotIn)
     {
-        for (int i = 0; i < this.field_75151_b.size(); ++i)
+        for (int i = 0; i < this.inventorySlots.size(); ++i)
         {
-            Slot slot = (Slot)this.field_75151_b.get(i);
+            Slot slot = (Slot)this.inventorySlots.get(i);
 
-            if (slot.func_75217_a(p_75147_1_, p_75147_2_))
+            if (slot.isHere(inv, slotIn))
             {
                 return slot;
             }
@@ -109,493 +131,450 @@
         return null;
     }
 
-    public Slot func_75139_a(int p_75139_1_)
+    public Slot getSlot(int slotId)
     {
-        return (Slot)this.field_75151_b.get(p_75139_1_);
+        return (Slot)this.inventorySlots.get(slotId);
     }
 
-    public ItemStack func_82846_b(EntityPlayer p_82846_1_, int p_82846_2_)
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
-        Slot slot = (Slot)this.field_75151_b.get(p_82846_2_);
-        return slot != null ? slot.func_75211_c() : ItemStack.field_190927_a;
+        Slot slot = (Slot)this.inventorySlots.get(index);
+        return slot != null ? slot.getStack() : ItemStack.EMPTY;
     }
 
-    public ItemStack func_184996_a(int p_184996_1_, int p_184996_2_, ClickType p_184996_3_, EntityPlayer p_184996_4_)
-    {
-        ItemStack itemstack = ItemStack.field_190927_a;
-        InventoryPlayer inventoryplayer = p_184996_4_.field_71071_by;
+    public ItemStack slotClick(int slotId, int dragType, ClickType clickTypeIn, EntityPlayer player) {
+        ItemStack itemstack = ItemStack.EMPTY;
+        InventoryPlayer inventoryplayer = player.inventory;
 
-        if (p_184996_3_ == ClickType.QUICK_CRAFT)
-        {
-            int i = this.field_94536_g;
-            this.field_94536_g = func_94532_c(p_184996_2_);
+        if (clickTypeIn == ClickType.QUICK_CRAFT) {
+            int i = this.dragEvent;
+            this.dragEvent = getDragEvent(dragType);
 
-            if ((i != 1 || this.field_94536_g != 2) && i != this.field_94536_g)
-            {
-                this.func_94533_d();
-            }
-            else if (inventoryplayer.func_70445_o().func_190926_b())
-            {
-                this.func_94533_d();
-            }
-            else if (this.field_94536_g == 0)
-            {
-                this.field_94535_f = func_94529_b(p_184996_2_);
+            if ((i != 1 || this.dragEvent != 2) && i != this.dragEvent) {
+                this.resetDrag();
+            } else if (inventoryplayer.getItemStack().isEmpty()) {
+                this.resetDrag();
+            } else if (this.dragEvent == 0) {
+                this.dragMode = extractDragMode(dragType);
 
-                if (func_180610_a(this.field_94535_f, p_184996_4_))
-                {
-                    this.field_94536_g = 1;
-                    this.field_94537_h.clear();
+                if (isValidDragMode(this.dragMode, player)) {
+                    this.dragEvent = 1;
+                    this.dragSlots.clear();
+                } else {
+                    this.resetDrag();
                 }
-                else
-                {
-                    this.func_94533_d();
-                }
-            }
-            else if (this.field_94536_g == 1)
-            {
-                Slot slot = (Slot)this.field_75151_b.get(p_184996_1_);
-                ItemStack itemstack1 = inventoryplayer.func_70445_o();
+            } else if (this.dragEvent == 1) {
+                Slot slot = (Slot) this.inventorySlots.get(slotId);
+                ItemStack itemstack1 = inventoryplayer.getItemStack();
 
-                if (slot != null && func_94527_a(slot, itemstack1, true) && slot.func_75214_a(itemstack1) && (this.field_94535_f == 2 || itemstack1.func_190916_E() > this.field_94537_h.size()) && this.func_94531_b(slot))
-                {
-                    this.field_94537_h.add(slot);
+                if (slot != null && canAddItemToSlot(slot, itemstack1, true) && slot.isItemValid(itemstack1) && (this.dragMode == 2 || itemstack1.getCount() > this.dragSlots.size()) && this.canDragIntoSlot(slot)) {
+                    this.dragSlots.add(slot);
                 }
-            }
-            else if (this.field_94536_g == 2)
-            {
-                if (!this.field_94537_h.isEmpty())
-                {
-                    ItemStack itemstack5 = inventoryplayer.func_70445_o().func_77946_l();
-                    int l = inventoryplayer.func_70445_o().func_190916_E();
+            } else if (this.dragEvent == 2) {
+                if (!this.dragSlots.isEmpty()) {
+                    Map<Integer, ItemStack> draggedSlots = new HashMap<Integer, ItemStack>(); // CraftBukkit - Store slots from drag in map (raw slot id -> new stack)
 
-                    for (Slot slot1 : this.field_94537_h)
-                    {
-                        ItemStack itemstack2 = inventoryplayer.func_70445_o();
+                    ItemStack itemstack5 = inventoryplayer.getItemStack().copy();
+                    int l = inventoryplayer.getItemStack().getCount();
 
-                        if (slot1 != null && func_94527_a(slot1, itemstack2, true) && slot1.func_75214_a(itemstack2) && (this.field_94535_f == 2 || itemstack2.func_190916_E() >= this.field_94537_h.size()) && this.func_94531_b(slot1))
-                        {
-                            ItemStack itemstack3 = itemstack5.func_77946_l();
-                            int j = slot1.func_75216_d() ? slot1.func_75211_c().func_190916_E() : 0;
-                            func_94525_a(this.field_94537_h, this.field_94535_f, itemstack3, j);
-                            int k = Math.min(itemstack3.func_77976_d(), slot1.func_178170_b(itemstack3));
+                    for (Slot slot1 : this.dragSlots) {
+                        ItemStack itemstack2 = inventoryplayer.getItemStack();
 
-                            if (itemstack3.func_190916_E() > k)
-                            {
-                                itemstack3.func_190920_e(k);
+                        if (slot1 != null && canAddItemToSlot(slot1, itemstack2, true) && slot1.isItemValid(itemstack2) && (this.dragMode == 2 || itemstack2.getCount() >= this.dragSlots.size()) && this.canDragIntoSlot(slot1)) {
+                            ItemStack itemstack3 = itemstack5.copy();
+                            int j = slot1.getHasStack() ? slot1.getStack().getCount() : 0;
+                            computeStackSize(this.dragSlots, this.dragMode, itemstack3, j);
+                            int k = Math.min(itemstack3.getMaxStackSize(), slot1.getItemStackLimit(itemstack3));
+
+                            if (itemstack3.getCount() > k) {
+                                itemstack3.setCount(k);
                             }
 
-                            l -= itemstack3.func_190916_E() - j;
-                            slot1.func_75215_d(itemstack3);
+                            l -= itemstack3.getCount() - j;
+                            // slot1.set(itemstack4);
+                            draggedSlots.put(slot1.slotNumber, itemstack3); // CraftBukkit - Put in map instead of setting                        }
                         }
-                    }
 
-                    itemstack5.func_190920_e(l);
-                    inventoryplayer.func_70437_b(itemstack5);
-                }
+                        //itemstack5.setCount(l);
+                        //inventoryplayer.setItemStack(itemstack5);
+                        // CraftBukkit start - InventoryDragEvent
+                        InventoryView view = getBukkitView();
+                        org.bukkit.inventory.ItemStack newcursor = CraftItemStack.asCraftMirror(itemstack2);
+                        newcursor.setAmount(l);
+                        Map<Integer, org.bukkit.inventory.ItemStack> eventmap = new HashMap<Integer, org.bukkit.inventory.ItemStack>();
+                        for (Map.Entry<Integer, ItemStack> ditem : draggedSlots.entrySet()) {
+                            eventmap.put(ditem.getKey(), CraftItemStack.asBukkitCopy(ditem.getValue()));
+                        }
 
-                this.func_94533_d();
-            }
-            else
-            {
-                this.func_94533_d();
-            }
-        }
-        else if (this.field_94536_g != 0)
-        {
-            this.func_94533_d();
-        }
-        else if ((p_184996_3_ == ClickType.PICKUP || p_184996_3_ == ClickType.QUICK_MOVE) && (p_184996_2_ == 0 || p_184996_2_ == 1))
-        {
-            if (p_184996_1_ == -999)
-            {
-                if (!inventoryplayer.func_70445_o().func_190926_b())
-                {
-                    if (p_184996_2_ == 0)
-                    {
-                        p_184996_4_.func_71019_a(inventoryplayer.func_70445_o(), true);
-                        inventoryplayer.func_70437_b(ItemStack.field_190927_a);
-                    }
+                        // It's essential that we set the cursor to the new value here to prevent item duplication if a plugin closes the inventory.
+                        ItemStack oldCursor = inventoryplayer.getItemStack();
+                        inventoryplayer.setItemStack(CraftItemStack.asNMSCopy(newcursor));
 
-                    if (p_184996_2_ == 1)
-                    {
-                        p_184996_4_.func_71019_a(inventoryplayer.func_70445_o().func_77979_a(1), true);
-                    }
-                }
-            }
-            else if (p_184996_3_ == ClickType.QUICK_MOVE)
-            {
-                if (p_184996_1_ < 0)
-                {
-                    return ItemStack.field_190927_a;
-                }
+                        InventoryDragEvent event = new InventoryDragEvent(view, (newcursor.getType() != Material.AIR ? newcursor : null), CraftItemStack.asBukkitCopy(oldCursor), this.dragMode == 1, eventmap);
+                        player.world.getServer().getPluginManager().callEvent(event);
 
-                Slot slot6 = (Slot)this.field_75151_b.get(p_184996_1_);
+                        // Whether or not a change was made to the inventory that requires an update.
+                        boolean needsUpdate = event.getResult() != Event.Result.DEFAULT;
 
-                if (slot6 != null && slot6.func_82869_a(p_184996_4_))
-                {
-                    ItemStack itemstack10 = this.func_82846_b(p_184996_4_, p_184996_1_);
+                        if (event.getResult() != Event.Result.DENY) {
+                            for (Map.Entry<Integer, ItemStack> dslot : draggedSlots.entrySet()) {
+                                view.setItem(dslot.getKey(), CraftItemStack.asBukkitCopy(dslot.getValue()));
+                            }
+                            // The only time the carried item will be set to null is if the inventory is closed by the server.
+                            // If the inventory is closed by the server, then the cursor items are dropped.  This is why we change the cursor early.
+                            if (inventoryplayer.getItemStack() != null) {
+                                inventoryplayer.setItemStack(CraftItemStack.asNMSCopy(event.getCursor()));
+                                needsUpdate = true;
+                            }
+                        } else {
+                            inventoryplayer.setItemStack(oldCursor);
+                        }
 
-                    if (!itemstack10.func_190926_b())
-                    {
-                        Item item = itemstack10.func_77973_b();
-                        itemstack = itemstack10.func_77946_l();
-
-                        if (slot6.func_75211_c().func_77973_b() == item)
-                        {
-                            this.func_75133_b(p_184996_1_, p_184996_2_, true, p_184996_4_);
+                        if (needsUpdate && player instanceof EntityPlayerMP) {
+                            ((EntityPlayerMP) player).sendContainerToPlayer(this);
                         }
+                        // CraftBukkit end
                     }
+
+                    this.resetDrag();
+                } else {
+                    this.resetDrag();
                 }
-            }
-            else
-            {
-                if (p_184996_1_ < 0)
-                {
-                    return ItemStack.field_190927_a;
-                }
+            } else if (this.dragEvent != 0) {
+                this.resetDrag();
+            } else if ((clickTypeIn == ClickType.PICKUP || clickTypeIn == ClickType.QUICK_MOVE) && (dragType == 0 || dragType == 1)) {
+                if (slotId == -999) {
+                    if (!inventoryplayer.getItemStack().isEmpty()) {
+                        if (dragType == 0) {
+                            player.dropItem(inventoryplayer.getItemStack(), true);
+                            inventoryplayer.setItemStack(ItemStack.EMPTY);
+                        }
 
-                Slot slot7 = (Slot)this.field_75151_b.get(p_184996_1_);
+                        if (dragType == 1) {
+                            player.dropItem(inventoryplayer.getItemStack().splitStack(1), true);
+                        }
+                    }
+                } else if (clickTypeIn == ClickType.QUICK_MOVE) {
+                    if (slotId < 0) {
+                        return ItemStack.EMPTY;
+                    }
 
-                if (slot7 != null)
-                {
-                    ItemStack itemstack11 = slot7.func_75211_c();
-                    ItemStack itemstack13 = inventoryplayer.func_70445_o();
+                    Slot slot6 = (Slot) this.inventorySlots.get(slotId);
 
-                    if (!itemstack11.func_190926_b())
-                    {
-                        itemstack = itemstack11.func_77946_l();
-                    }
+                    if (slot6 != null && slot6.canTakeStack(player)) {
+                        ItemStack itemstack10 = this.transferStackInSlot(player, slotId);
 
-                    if (itemstack11.func_190926_b())
-                    {
-                        if (!itemstack13.func_190926_b() && slot7.func_75214_a(itemstack13))
-                        {
-                            int l2 = p_184996_2_ == 0 ? itemstack13.func_190916_E() : 1;
+                        if (!itemstack10.isEmpty()) {
+                            Item item = itemstack10.getItem();
+                            itemstack = itemstack10.copy();
 
-                            if (l2 > slot7.func_178170_b(itemstack13))
-                            {
-                                l2 = slot7.func_178170_b(itemstack13);
+                            if (slot6.getStack().getItem() == item) {
+                                this.retrySlotClick(slotId, dragType, true, player);
                             }
-
-                            slot7.func_75215_d(itemstack13.func_77979_a(l2));
                         }
                     }
-                    else if (slot7.func_82869_a(p_184996_4_))
-                    {
-                        if (itemstack13.func_190926_b())
-                        {
-                            if (itemstack11.func_190926_b())
-                            {
-                                slot7.func_75215_d(ItemStack.field_190927_a);
-                                inventoryplayer.func_70437_b(ItemStack.field_190927_a);
-                            }
-                            else
-                            {
-                                int k2 = p_184996_2_ == 0 ? itemstack11.func_190916_E() : (itemstack11.func_190916_E() + 1) / 2;
-                                inventoryplayer.func_70437_b(slot7.func_75209_a(k2));
+                } else {
+                    if (slotId < 0) {
+                        return ItemStack.EMPTY;
+                    }
 
-                                if (itemstack11.func_190926_b())
-                                {
-                                    slot7.func_75215_d(ItemStack.field_190927_a);
+                    Slot slot7 = (Slot) this.inventorySlots.get(slotId);
+
+                    if (slot7 != null) {
+                        ItemStack itemstack11 = slot7.getStack();
+                        ItemStack itemstack13 = inventoryplayer.getItemStack();
+
+                        if (!itemstack11.isEmpty()) {
+                            itemstack = itemstack11.copy();
+                        }
+
+                        if (itemstack11.isEmpty()) {
+                            if (!itemstack13.isEmpty() && slot7.isItemValid(itemstack13)) {
+                                int l2 = dragType == 0 ? itemstack13.getCount() : 1;
+
+                                if (l2 > slot7.getItemStackLimit(itemstack13)) {
+                                    l2 = slot7.getItemStackLimit(itemstack13);
                                 }
 
-                                slot7.func_190901_a(p_184996_4_, inventoryplayer.func_70445_o());
+                                slot7.putStack(itemstack13.splitStack(l2));
                             }
-                        }
-                        else if (slot7.func_75214_a(itemstack13))
-                        {
-                            if (itemstack11.func_77973_b() == itemstack13.func_77973_b() && itemstack11.func_77960_j() == itemstack13.func_77960_j() && ItemStack.func_77970_a(itemstack11, itemstack13))
-                            {
-                                int j2 = p_184996_2_ == 0 ? itemstack13.func_190916_E() : 1;
+                        } else if (slot7.canTakeStack(player)) {
+                            if (itemstack13.isEmpty()) {
+                                if (itemstack11.isEmpty()) {
+                                    slot7.putStack(ItemStack.EMPTY);
+                                    inventoryplayer.setItemStack(ItemStack.EMPTY);
+                                } else {
+                                    int k2 = dragType == 0 ? itemstack11.getCount() : (itemstack11.getCount() + 1) / 2;
+                                    inventoryplayer.setItemStack(slot7.decrStackSize(k2));
 
-                                if (j2 > slot7.func_178170_b(itemstack13) - itemstack11.func_190916_E())
-                                {
-                                    j2 = slot7.func_178170_b(itemstack13) - itemstack11.func_190916_E();
+                                    if (itemstack11.isEmpty()) {
+                                        slot7.putStack(ItemStack.EMPTY);
+                                    }
+
+                                    slot7.onTake(player, inventoryplayer.getItemStack());
                                 }
+                            } else if (slot7.isItemValid(itemstack13)) {
+                                if (itemstack11.getItem() == itemstack13.getItem() && itemstack11.getMetadata() == itemstack13.getMetadata() && ItemStack.areItemStackTagsEqual(itemstack11, itemstack13)) {
+                                    int j2 = dragType == 0 ? itemstack13.getCount() : 1;
 
-                                if (j2 > itemstack13.func_77976_d() - itemstack11.func_190916_E())
-                                {
-                                    j2 = itemstack13.func_77976_d() - itemstack11.func_190916_E();
+                                    if (j2 > slot7.getItemStackLimit(itemstack13) - itemstack11.getCount()) {
+                                        j2 = slot7.getItemStackLimit(itemstack13) - itemstack11.getCount();
+                                    }
+
+                                    if (j2 > itemstack13.getMaxStackSize() - itemstack11.getCount()) {
+                                        j2 = itemstack13.getMaxStackSize() - itemstack11.getCount();
+                                    }
+
+                                    itemstack13.shrink(j2);
+                                    itemstack11.grow(j2);
+                                } else if (itemstack13.getCount() <= slot7.getItemStackLimit(itemstack13)) {
+                                    slot7.putStack(itemstack13);
+                                    inventoryplayer.setItemStack(itemstack11);
                                 }
+                            } else if (itemstack11.getItem() == itemstack13.getItem() && itemstack13.getMaxStackSize() > 1 && (!itemstack11.getHasSubtypes() || itemstack11.getMetadata() == itemstack13.getMetadata()) && ItemStack.areItemStackTagsEqual(itemstack11, itemstack13) && !itemstack11.isEmpty()) {
+                                int i2 = itemstack11.getCount();
 
-                                itemstack13.func_190918_g(j2);
-                                itemstack11.func_190917_f(j2);
-                            }
-                            else if (itemstack13.func_190916_E() <= slot7.func_178170_b(itemstack13))
-                            {
-                                slot7.func_75215_d(itemstack13);
-                                inventoryplayer.func_70437_b(itemstack11);
-                            }
-                        }
-                        else if (itemstack11.func_77973_b() == itemstack13.func_77973_b() && itemstack13.func_77976_d() > 1 && (!itemstack11.func_77981_g() || itemstack11.func_77960_j() == itemstack13.func_77960_j()) && ItemStack.func_77970_a(itemstack11, itemstack13) && !itemstack11.func_190926_b())
-                        {
-                            int i2 = itemstack11.func_190916_E();
+                                if (i2 + itemstack13.getCount() <= itemstack13.getMaxStackSize()) {
+                                    itemstack13.grow(i2);
+                                    itemstack11 = slot7.decrStackSize(i2);
 
-                            if (i2 + itemstack13.func_190916_E() <= itemstack13.func_77976_d())
-                            {
-                                itemstack13.func_190917_f(i2);
-                                itemstack11 = slot7.func_75209_a(i2);
+                                    if (itemstack11.isEmpty()) {
+                                        slot7.putStack(ItemStack.EMPTY);
+                                    }
 
-                                if (itemstack11.func_190926_b())
-                                {
-                                    slot7.func_75215_d(ItemStack.field_190927_a);
+                                    slot7.onTake(player, inventoryplayer.getItemStack());
                                 }
+                            }
+                        }
 
-                                slot7.func_190901_a(p_184996_4_, inventoryplayer.func_70445_o());
+                        slot7.onSlotChanged();
+                        // CraftBukkit start - Make sure the client has the right slot contents
+                        if (player instanceof EntityPlayerMP && slot7.getSlotStackLimit() != 64) {
+                            ((EntityPlayerMP) player).connection.sendPacket(new SPacketSetSlot(this.windowId, slot7.slotNumber, slot7.getStack()));
+                            // Updating a crafting inventory makes the client reset the result slot, have to send it again
+                            if (this.getBukkitView().getType() == InventoryType.WORKBENCH || this.getBukkitView().getType() == InventoryType.CRAFTING) {
+                                ((EntityPlayerMP) player).connection.sendPacket(new SPacketSetSlot(this.windowId, 0, this.getSlot(0).getStack()));
                             }
                         }
+                        // CraftBukkit end
                     }
-
-                    slot7.func_75218_e();
                 }
-            }
-        }
-        else if (p_184996_3_ == ClickType.SWAP && p_184996_2_ >= 0 && p_184996_2_ < 9)
-        {
-            Slot slot5 = (Slot)this.field_75151_b.get(p_184996_1_);
-            ItemStack itemstack9 = inventoryplayer.func_70301_a(p_184996_2_);
-            ItemStack itemstack12 = slot5.func_75211_c();
+            } else if (clickTypeIn == ClickType.SWAP && dragType >= 0 && dragType < 9) {
+                Slot slot5 = (Slot) this.inventorySlots.get(slotId);
+                ItemStack itemstack9 = inventoryplayer.getStackInSlot(dragType);
+                ItemStack itemstack12 = slot5.getStack();
 
-            if (!itemstack9.func_190926_b() || !itemstack12.func_190926_b())
-            {
-                if (itemstack9.func_190926_b())
-                {
-                    if (slot5.func_82869_a(p_184996_4_))
-                    {
-                        inventoryplayer.func_70299_a(p_184996_2_, itemstack12);
-                        slot5.func_190900_b(itemstack12.func_190916_E());
-                        slot5.func_75215_d(ItemStack.field_190927_a);
-                        slot5.func_190901_a(p_184996_4_, itemstack12);
-                    }
-                }
-                else if (itemstack12.func_190926_b())
-                {
-                    if (slot5.func_75214_a(itemstack9))
-                    {
-                        int k1 = slot5.func_178170_b(itemstack9);
+                if (!itemstack9.isEmpty() || !itemstack12.isEmpty()) {
+                    if (itemstack9.isEmpty()) {
+                        if (slot5.canTakeStack(player)) {
+                            inventoryplayer.setInventorySlotContents(dragType, itemstack12);
+                            slot5.onSwapCraft(itemstack12.getCount());
+                            slot5.putStack(ItemStack.EMPTY);
+                            slot5.onTake(player, itemstack12);
+                        }
+                    } else if (itemstack12.isEmpty()) {
+                        if (slot5.isItemValid(itemstack9)) {
+                            int k1 = slot5.getItemStackLimit(itemstack9);
 
-                        if (itemstack9.func_190916_E() > k1)
-                        {
-                            slot5.func_75215_d(itemstack9.func_77979_a(k1));
+                            if (itemstack9.getCount() > k1) {
+                                slot5.putStack(itemstack9.splitStack(k1));
+                            } else {
+                                slot5.putStack(itemstack9);
+                                inventoryplayer.setInventorySlotContents(dragType, ItemStack.EMPTY);
+                            }
                         }
-                        else
-                        {
-                            slot5.func_75215_d(itemstack9);
-                            inventoryplayer.func_70299_a(p_184996_2_, ItemStack.field_190927_a);
-                        }
-                    }
-                }
-                else if (slot5.func_82869_a(p_184996_4_) && slot5.func_75214_a(itemstack9))
-                {
-                    int l1 = slot5.func_178170_b(itemstack9);
+                    } else if (slot5.canTakeStack(player) && slot5.isItemValid(itemstack9)) {
+                        int l1 = slot5.getItemStackLimit(itemstack9);
 
-                    if (itemstack9.func_190916_E() > l1)
-                    {
-                        slot5.func_75215_d(itemstack9.func_77979_a(l1));
-                        slot5.func_190901_a(p_184996_4_, itemstack12);
+                        if (itemstack9.getCount() > l1) {
+                            slot5.putStack(itemstack9.splitStack(l1));
+                            slot5.onTake(player, itemstack12);
 
-                        if (!inventoryplayer.func_70441_a(itemstack12))
-                        {
-                            p_184996_4_.func_71019_a(itemstack12, true);
+                            if (!inventoryplayer.addItemStackToInventory(itemstack12)) {
+                                player.dropItem(itemstack12, true);
+                            }
+                        } else {
+                            slot5.putStack(itemstack9);
+                            inventoryplayer.setInventorySlotContents(dragType, itemstack12);
+                            slot5.onTake(player, itemstack12);
                         }
                     }
-                    else
-                    {
-                        slot5.func_75215_d(itemstack9);
-                        inventoryplayer.func_70299_a(p_184996_2_, itemstack12);
-                        slot5.func_190901_a(p_184996_4_, itemstack12);
-                    }
                 }
-            }
-        }
-        else if (p_184996_3_ == ClickType.CLONE && p_184996_4_.field_71075_bZ.field_75098_d && inventoryplayer.func_70445_o().func_190926_b() && p_184996_1_ >= 0)
-        {
-            Slot slot4 = (Slot)this.field_75151_b.get(p_184996_1_);
+            } else if (clickTypeIn == ClickType.CLONE && player.capabilities.isCreativeMode && inventoryplayer.getItemStack().isEmpty() && slotId >= 0) {
+                Slot slot4 = (Slot) this.inventorySlots.get(slotId);
 
-            if (slot4 != null && slot4.func_75216_d())
-            {
-                ItemStack itemstack8 = slot4.func_75211_c().func_77946_l();
-                itemstack8.func_190920_e(itemstack8.func_77976_d());
-                inventoryplayer.func_70437_b(itemstack8);
-            }
-        }
-        else if (p_184996_3_ == ClickType.THROW && inventoryplayer.func_70445_o().func_190926_b() && p_184996_1_ >= 0)
-        {
-            Slot slot3 = (Slot)this.field_75151_b.get(p_184996_1_);
+                if (slot4 != null && slot4.getHasStack()) {
+                    ItemStack itemstack8 = slot4.getStack().copy();
+                    itemstack8.setCount(itemstack8.getMaxStackSize());
+                    inventoryplayer.setItemStack(itemstack8);
+                }
+            } else if (clickTypeIn == ClickType.THROW && inventoryplayer.getItemStack().isEmpty() && slotId >= 0) {
+                Slot slot3 = (Slot) this.inventorySlots.get(slotId);
 
-            if (slot3 != null && slot3.func_75216_d() && slot3.func_82869_a(p_184996_4_))
-            {
-                ItemStack itemstack7 = slot3.func_75209_a(p_184996_2_ == 0 ? 1 : slot3.func_75211_c().func_190916_E());
-                slot3.func_190901_a(p_184996_4_, itemstack7);
-                p_184996_4_.func_71019_a(itemstack7, true);
-            }
-        }
-        else if (p_184996_3_ == ClickType.PICKUP_ALL && p_184996_1_ >= 0)
-        {
-            Slot slot2 = (Slot)this.field_75151_b.get(p_184996_1_);
-            ItemStack itemstack6 = inventoryplayer.func_70445_o();
+                if (slot3 != null && slot3.getHasStack() && slot3.canTakeStack(player)) {
+                    ItemStack itemstack7 = slot3.decrStackSize(dragType == 0 ? 1 : slot3.getStack().getCount());
+                    slot3.onTake(player, itemstack7);
+                    player.dropItem(itemstack7, true);
+                }
+            } else if (clickTypeIn == ClickType.PICKUP_ALL && slotId >= 0) {
+                Slot slot2 = (Slot) this.inventorySlots.get(slotId);
+                ItemStack itemstack6 = inventoryplayer.getItemStack();
 
-            if (!itemstack6.func_190926_b() && (slot2 == null || !slot2.func_75216_d() || !slot2.func_82869_a(p_184996_4_)))
-            {
-                int i1 = p_184996_2_ == 0 ? 0 : this.field_75151_b.size() - 1;
-                int j1 = p_184996_2_ == 0 ? 1 : -1;
+                if (!itemstack6.isEmpty() && (slot2 == null || !slot2.getHasStack() || !slot2.canTakeStack(player))) {
+                    int i1 = dragType == 0 ? 0 : this.inventorySlots.size() - 1;
+                    int j1 = dragType == 0 ? 1 : -1;
 
-                for (int i3 = 0; i3 < 2; ++i3)
-                {
-                    for (int j3 = i1; j3 >= 0 && j3 < this.field_75151_b.size() && itemstack6.func_190916_E() < itemstack6.func_77976_d(); j3 += j1)
-                    {
-                        Slot slot8 = (Slot)this.field_75151_b.get(j3);
+                    for (int i3 = 0; i3 < 2; ++i3) {
+                        for (int j3 = i1; j3 >= 0 && j3 < this.inventorySlots.size() && itemstack6.getCount() < itemstack6.getMaxStackSize(); j3 += j1) {
+                            Slot slot8 = (Slot) this.inventorySlots.get(j3);
 
-                        if (slot8.func_75216_d() && func_94527_a(slot8, itemstack6, true) && slot8.func_82869_a(p_184996_4_) && this.func_94530_a(itemstack6, slot8))
-                        {
-                            ItemStack itemstack14 = slot8.func_75211_c();
+                            if (slot8.getHasStack() && canAddItemToSlot(slot8, itemstack6, true) && slot8.canTakeStack(player) && this.canMergeSlot(itemstack6, slot8)) {
+                                ItemStack itemstack14 = slot8.getStack();
 
-                            if (i3 != 0 || itemstack14.func_190916_E() != itemstack14.func_77976_d())
-                            {
-                                int k3 = Math.min(itemstack6.func_77976_d() - itemstack6.func_190916_E(), itemstack14.func_190916_E());
-                                ItemStack itemstack4 = slot8.func_75209_a(k3);
-                                itemstack6.func_190917_f(k3);
+                                if (i3 != 0 || itemstack14.getCount() != itemstack14.getMaxStackSize()) {
+                                    int k3 = Math.min(itemstack6.getMaxStackSize() - itemstack6.getCount(), itemstack14.getCount());
+                                    ItemStack itemstack4 = slot8.decrStackSize(k3);
+                                    itemstack6.grow(k3);
 
-                                if (itemstack4.func_190926_b())
-                                {
-                                    slot8.func_75215_d(ItemStack.field_190927_a);
-                                }
+                                    if (itemstack4.isEmpty()) {
+                                        slot8.putStack(ItemStack.EMPTY);
+                                    }
 
-                                slot8.func_190901_a(p_184996_4_, itemstack4);
+                                    slot8.onTake(player, itemstack4);
+                                }
                             }
                         }
                     }
                 }
-            }
 
-            this.func_75142_b();
+                this.detectAndSendChanges();
+            }
         }
-
         return itemstack;
     }
 
-    public boolean func_94530_a(ItemStack p_94530_1_, Slot p_94530_2_)
+    public boolean canMergeSlot(ItemStack stack, Slot slotIn)
     {
         return true;
     }
 
-    protected void func_75133_b(int p_75133_1_, int p_75133_2_, boolean p_75133_3_, EntityPlayer p_75133_4_)
+    protected void retrySlotClick(int slotId, int clickedButton, boolean mode, EntityPlayer playerIn)
     {
-        this.func_184996_a(p_75133_1_, p_75133_2_, ClickType.QUICK_MOVE, p_75133_4_);
+        this.slotClick(slotId, clickedButton, ClickType.QUICK_MOVE, playerIn);
     }
 
-    public void func_75134_a(EntityPlayer p_75134_1_)
+    public void onContainerClosed(EntityPlayer playerIn)
     {
-        InventoryPlayer inventoryplayer = p_75134_1_.field_71071_by;
+        InventoryPlayer inventoryplayer = playerIn.inventory;
 
-        if (!inventoryplayer.func_70445_o().func_190926_b())
+        if (!inventoryplayer.getItemStack().isEmpty())
         {
-            p_75134_1_.func_71019_a(inventoryplayer.func_70445_o(), false);
-            inventoryplayer.func_70437_b(ItemStack.field_190927_a);
+            playerIn.dropItem(inventoryplayer.getItemStack(), false);
+            inventoryplayer.setItemStack(ItemStack.EMPTY);
         }
     }
 
-    public void func_75130_a(IInventory p_75130_1_)
+    public void onCraftMatrixChanged(IInventory inventoryIn)
     {
-        this.func_75142_b();
+        this.detectAndSendChanges();
     }
 
-    public void func_75141_a(int p_75141_1_, ItemStack p_75141_2_)
+    public void putStackInSlot(int slotID, ItemStack stack)
     {
-        this.func_75139_a(p_75141_1_).func_75215_d(p_75141_2_);
+        this.getSlot(slotID).putStack(stack);
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_190896_a(List<ItemStack> p_190896_1_)
+    public void setAll(List<ItemStack> p_190896_1_)
     {
         for (int i = 0; i < p_190896_1_.size(); ++i)
         {
-            this.func_75139_a(i).func_75215_d((ItemStack)p_190896_1_.get(i));
+            this.getSlot(i).putStack((ItemStack)p_190896_1_.get(i));
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_75137_b(int p_75137_1_, int p_75137_2_)
+    public void updateProgressBar(int id, int data)
     {
     }
 
     @SideOnly(Side.CLIENT)
-    public short func_75136_a(InventoryPlayer p_75136_1_)
+    public short getNextTransactionID(InventoryPlayer invPlayer)
     {
-        ++this.field_75150_e;
-        return this.field_75150_e;
+        ++this.transactionID;
+        return this.transactionID;
     }
 
-    public boolean func_75129_b(EntityPlayer p_75129_1_)
+    public boolean getCanCraft(EntityPlayer player)
     {
-        return !this.field_75148_f.contains(p_75129_1_);
+        return !this.playerList.contains(player);
     }
 
-    public void func_75128_a(EntityPlayer p_75128_1_, boolean p_75128_2_)
+    public void setCanCraft(EntityPlayer player, boolean canCraft)
     {
-        if (p_75128_2_)
+        if (canCraft)
         {
-            this.field_75148_f.remove(p_75128_1_);
+            this.playerList.remove(player);
         }
         else
         {
-            this.field_75148_f.add(p_75128_1_);
+            this.playerList.add(player);
         }
     }
 
-    public abstract boolean func_75145_c(EntityPlayer p_75145_1_);
+    public abstract boolean canInteractWith(EntityPlayer playerIn);
 
-    protected boolean func_75135_a(ItemStack p_75135_1_, int p_75135_2_, int p_75135_3_, boolean p_75135_4_)
+    protected boolean mergeItemStack(ItemStack stack, int startIndex, int endIndex, boolean reverseDirection)
     {
         boolean flag = false;
-        int i = p_75135_2_;
+        int i = startIndex;
 
-        if (p_75135_4_)
+        if (reverseDirection)
         {
-            i = p_75135_3_ - 1;
+            i = endIndex - 1;
         }
 
-        if (p_75135_1_.func_77985_e())
+        if (stack.isStackable())
         {
-            while (!p_75135_1_.func_190926_b())
+            while (!stack.isEmpty())
             {
-                if (p_75135_4_)
+                if (reverseDirection)
                 {
-                    if (i < p_75135_2_)
+                    if (i < startIndex)
                     {
                         break;
                     }
                 }
-                else if (i >= p_75135_3_)
+                else if (i >= endIndex)
                 {
                     break;
                 }
 
-                Slot slot = (Slot)this.field_75151_b.get(i);
-                ItemStack itemstack = slot.func_75211_c();
+                Slot slot = (Slot)this.inventorySlots.get(i);
+                ItemStack itemstack = slot.getStack();
 
-                if (!itemstack.func_190926_b() && itemstack.func_77973_b() == p_75135_1_.func_77973_b() && (!p_75135_1_.func_77981_g() || p_75135_1_.func_77960_j() == itemstack.func_77960_j()) && ItemStack.func_77970_a(p_75135_1_, itemstack))
+                if (!itemstack.isEmpty() && itemstack.getItem() == stack.getItem() && (!stack.getHasSubtypes() || stack.getMetadata() == itemstack.getMetadata()) && ItemStack.areItemStackTagsEqual(stack, itemstack))
                 {
-                    int j = itemstack.func_190916_E() + p_75135_1_.func_190916_E();
+                    int j = itemstack.getCount() + stack.getCount();
+                    int maxSize = Math.min(slot.getSlotStackLimit(), stack.getMaxStackSize());
 
-                    if (j <= p_75135_1_.func_77976_d())
+                    if (j <= maxSize)
                     {
-                        p_75135_1_.func_190920_e(0);
-                        itemstack.func_190920_e(j);
-                        slot.func_75218_e();
+                        stack.setCount(0);
+                        itemstack.setCount(j);
+                        slot.onSlotChanged();
                         flag = true;
                     }
-                    else if (itemstack.func_190916_E() < p_75135_1_.func_77976_d())
+                    else if (itemstack.getCount() < maxSize)
                     {
-                        p_75135_1_.func_190918_g(p_75135_1_.func_77976_d() - itemstack.func_190916_E());
-                        itemstack.func_190920_e(p_75135_1_.func_77976_d());
-                        slot.func_75218_e();
+                        stack.shrink(maxSize - itemstack.getCount());
+                        itemstack.setCount(maxSize);
+                        slot.onSlotChanged();
                         flag = true;
                     }
                 }
 
-                if (p_75135_4_)
+                if (reverseDirection)
                 {
                     --i;
                 }
@@ -606,51 +585,51 @@
             }
         }
 
-        if (!p_75135_1_.func_190926_b())
+        if (!stack.isEmpty())
         {
-            if (p_75135_4_)
+            if (reverseDirection)
             {
-                i = p_75135_3_ - 1;
+                i = endIndex - 1;
             }
             else
             {
-                i = p_75135_2_;
+                i = startIndex;
             }
 
             while (true)
             {
-                if (p_75135_4_)
+                if (reverseDirection)
                 {
-                    if (i < p_75135_2_)
+                    if (i < startIndex)
                     {
                         break;
                     }
                 }
-                else if (i >= p_75135_3_)
+                else if (i >= endIndex)
                 {
                     break;
                 }
 
-                Slot slot1 = (Slot)this.field_75151_b.get(i);
-                ItemStack itemstack1 = slot1.func_75211_c();
+                Slot slot1 = (Slot)this.inventorySlots.get(i);
+                ItemStack itemstack1 = slot1.getStack();
 
-                if (itemstack1.func_190926_b() && slot1.func_75214_a(p_75135_1_))
+                if (itemstack1.isEmpty() && slot1.isItemValid(stack))
                 {
-                    if (p_75135_1_.func_190916_E() > slot1.func_75219_a())
+                    if (stack.getCount() > slot1.getSlotStackLimit())
                     {
-                        slot1.func_75215_d(p_75135_1_.func_77979_a(slot1.func_75219_a()));
+                        slot1.putStack(stack.splitStack(slot1.getSlotStackLimit()));
                     }
                     else
                     {
-                        slot1.func_75215_d(p_75135_1_.func_77979_a(p_75135_1_.func_190916_E()));
+                        slot1.putStack(stack.splitStack(stack.getCount()));
                     }
 
-                    slot1.func_75218_e();
+                    slot1.onSlotChanged();
                     flag = true;
                     break;
                 }
 
-                if (p_75135_4_)
+                if (reverseDirection)
                 {
                     --i;
                 }
@@ -664,69 +643,69 @@
         return flag;
     }
 
-    public static int func_94529_b(int p_94529_0_)
+    public static int extractDragMode(int eventButton)
     {
-        return p_94529_0_ >> 2 & 3;
+        return eventButton >> 2 & 3;
     }
 
-    public static int func_94532_c(int p_94532_0_)
+    public static int getDragEvent(int clickedButton)
     {
-        return p_94532_0_ & 3;
+        return clickedButton & 3;
     }
 
     @SideOnly(Side.CLIENT)
-    public static int func_94534_d(int p_94534_0_, int p_94534_1_)
+    public static int getQuickcraftMask(int p_94534_0_, int p_94534_1_)
     {
         return p_94534_0_ & 3 | (p_94534_1_ & 3) << 2;
     }
 
-    public static boolean func_180610_a(int p_180610_0_, EntityPlayer p_180610_1_)
+    public static boolean isValidDragMode(int dragModeIn, EntityPlayer player)
     {
-        return p_180610_0_ == 0 ? true : (p_180610_0_ == 1 ? true : p_180610_0_ == 2 && p_180610_1_.field_71075_bZ.field_75098_d);
+        return dragModeIn == 0 ? true : (dragModeIn == 1 ? true : dragModeIn == 2 && player.capabilities.isCreativeMode);
     }
 
-    protected void func_94533_d()
+    protected void resetDrag()
     {
-        this.field_94536_g = 0;
-        this.field_94537_h.clear();
+        this.dragEvent = 0;
+        this.dragSlots.clear();
     }
 
-    public static boolean func_94527_a(@Nullable Slot p_94527_0_, ItemStack p_94527_1_, boolean p_94527_2_)
+    public static boolean canAddItemToSlot(@Nullable Slot slotIn, ItemStack stack, boolean stackSizeMatters)
     {
-        boolean flag = p_94527_0_ == null || !p_94527_0_.func_75216_d();
-        return !flag && p_94527_1_.func_77969_a(p_94527_0_.func_75211_c()) && ItemStack.func_77970_a(p_94527_0_.func_75211_c(), p_94527_1_) ? p_94527_0_.func_75211_c().func_190916_E() + (p_94527_2_ ? 0 : p_94527_1_.func_190916_E()) <= p_94527_1_.func_77976_d() : flag;
+        boolean flag = slotIn == null || !slotIn.getHasStack();
+        return !flag && stack.isItemEqual(slotIn.getStack()) && ItemStack.areItemStackTagsEqual(slotIn.getStack(), stack) ? slotIn.getStack().getCount() + (stackSizeMatters ? 0 : stack.getCount()) <= stack.getMaxStackSize() : flag;
     }
 
-    public static void func_94525_a(Set<Slot> p_94525_0_, int p_94525_1_, ItemStack p_94525_2_, int p_94525_3_)
+    public static void computeStackSize(Set<Slot> dragSlotsIn, int dragModeIn, ItemStack stack, int slotStackSize)
     {
-        switch (p_94525_1_)
+        switch (dragModeIn)
         {
             case 0:
-                p_94525_2_.func_190920_e(MathHelper.func_76141_d((float)p_94525_2_.func_190916_E() / (float)p_94525_0_.size()));
+                stack.setCount(MathHelper.floor((float)stack.getCount() / (float)dragSlotsIn.size()));
                 break;
             case 1:
-                p_94525_2_.func_190920_e(1);
+                stack.setCount(1);
                 break;
             case 2:
-                p_94525_2_.func_190920_e(p_94525_2_.func_77973_b().func_77639_j());
+                stack.setCount(stack.getMaxStackSize());
         }
 
-        p_94525_2_.func_190917_f(p_94525_3_);
+        stack.grow(slotStackSize);
     }
 
-    public boolean func_94531_b(Slot p_94531_1_)
+    public boolean canDragIntoSlot(Slot slotIn)
     {
         return true;
     }
 
-    public static int func_178144_a(@Nullable TileEntity p_178144_0_)
+    public static int calcRedstone(@Nullable TileEntity te)
     {
-        return p_178144_0_ instanceof IInventory ? func_94526_b((IInventory)p_178144_0_) : 0;
+        return te instanceof IInventory ? calcRedstoneFromInventory((IInventory)te) : 0;
     }
 
-    public static int func_94526_b(@Nullable IInventory p_94526_0_)
+    public static int calcRedstoneFromInventory(@Nullable IInventory inv)
     {
-        if (p_94526_0_ == null)
+        if (inv == null)
         {
             return 0;
         }
@@ -735,19 +714,19 @@
             int i = 0;
             float f = 0.0F;
 
-            for (int j = 0; j < p_94526_0_.func_70302_i_(); ++j)
+            for (int j = 0; j < inv.getSizeInventory(); ++j)
             {
-                ItemStack itemstack = p_94526_0_.func_70301_a(j);
+                ItemStack itemstack = inv.getStackInSlot(j);
 
-                if (!itemstack.func_190926_b())
+                if (!itemstack.isEmpty())
                 {
-                    f += (float)itemstack.func_190916_E() / (float)Math.min(p_94526_0_.func_70297_j_(), itemstack.func_77976_d());
+                    f += (float)itemstack.getCount() / (float)Math.min(inv.getInventoryStackLimit(), itemstack.getMaxStackSize());
                     ++i;
                 }
             }
 
-            f = f / (float)p_94526_0_.func_70302_i_();
-            return MathHelper.func_76141_d(f * 14.0F) + (i > 0 ? 1 : 0);
+            f = f / (float)inv.getSizeInventory();
+            return MathHelper.floor(f * 14.0F) + (i > 0 ? 1 : 0);
         }
     }
 }
