--- ../src-base/minecraft/net/minecraft/inventory/ContainerRepair.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerRepair.java
@@ -18,113 +18,144 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
 
 public class ContainerRepair extends Container
 {
-    private static final Logger field_148326_f = LogManager.getLogger();
-    private final IInventory field_82852_f;
-    private final IInventory field_82853_g;
-    private final World field_82860_h;
-    private final BlockPos field_178156_j;
-    public int field_82854_e;
-    public int field_82856_l;
-    private String field_82857_m;
-    private final EntityPlayer field_82855_n;
+    private static final Logger LOGGER = LogManager.getLogger();
+    private final IInventory outputSlot;
+    private final IInventory inputSlots;
+    private final World world;
+    private final BlockPos selfPosition;
+    public int maximumCost;
+    public int materialCost;
+    public String repairedItemName;
+    private final EntityPlayer player;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity;
+    private InventoryPlayer playerinv;
+    // CraftBukkit end
+    // CraftBukkit start
+    @Override
+    public void detectAndSendChanges() {
+        super.detectAndSendChanges();
 
+        for (int i = 0; i < this.listeners.size(); ++i) {
+            net.minecraft.inventory.IContainerListener icrafting = (net.minecraft.inventory.IContainerListener) this.listeners.get(i);
+
+            icrafting.sendProgressBarUpdate(this, 0, this.maximumCost);
+        }
+    }
+
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        org.bukkit.craftbukkit.inventory.CraftInventory inventory = new org.bukkit.craftbukkit.inventory.CraftInventoryAnvil(
+                new org.bukkit.Location(world.getWorld(), selfPosition.getX(), selfPosition.getY(), selfPosition.getZ()), this.inputSlots, this.outputSlot, this);
+        bukkitEntity = new CraftInventoryView(this.playerinv.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
     @SideOnly(Side.CLIENT)
-    public ContainerRepair(InventoryPlayer p_i45806_1_, World p_i45806_2_, EntityPlayer p_i45806_3_)
+    public ContainerRepair(InventoryPlayer playerInventory, World worldIn, EntityPlayer player)
     {
-        this(p_i45806_1_, p_i45806_2_, BlockPos.field_177992_a, p_i45806_3_);
+        this(playerInventory, worldIn, BlockPos.ORIGIN, player);
     }
 
-    public ContainerRepair(InventoryPlayer p_i45807_1_, final World p_i45807_2_, final BlockPos p_i45807_3_, EntityPlayer p_i45807_4_)
+    public ContainerRepair(InventoryPlayer playerInventory, final World worldIn, final BlockPos blockPosIn, EntityPlayer player)
     {
-        this.field_82852_f = new InventoryCraftResult();
-        this.field_82853_g = new InventoryBasic("Repair", true, 2)
+        this.playerinv = playerInventory;
+        this.outputSlot = new InventoryCraftResult();
+        this.inputSlots = new InventoryBasic("Repair", true, 2)
         {
-            public void func_70296_d()
+            public void markDirty()
             {
-                super.func_70296_d();
-                ContainerRepair.this.func_75130_a(this);
+                super.markDirty();
+                ContainerRepair.this.onCraftMatrixChanged(this);
             }
         };
-        this.field_178156_j = p_i45807_3_;
-        this.field_82860_h = p_i45807_2_;
-        this.field_82855_n = p_i45807_4_;
-        this.func_75146_a(new Slot(this.field_82853_g, 0, 27, 47));
-        this.func_75146_a(new Slot(this.field_82853_g, 1, 76, 47));
-        this.func_75146_a(new Slot(this.field_82852_f, 2, 134, 47)
+        this.selfPosition = blockPosIn;
+        this.world = worldIn;
+        this.player = player;
+        this.addSlotToContainer(new Slot(this.inputSlots, 0, 27, 47));
+        this.addSlotToContainer(new Slot(this.inputSlots, 1, 76, 47));
+        this.addSlotToContainer(new Slot(this.outputSlot, 2, 134, 47)
         {
-            public boolean func_75214_a(ItemStack p_75214_1_)
+            public boolean isItemValid(ItemStack stack)
             {
                 return false;
             }
-            public boolean func_82869_a(EntityPlayer p_82869_1_)
+            public boolean canTakeStack(EntityPlayer playerIn)
             {
-                return (p_82869_1_.field_71075_bZ.field_75098_d || p_82869_1_.field_71068_ca >= ContainerRepair.this.field_82854_e) && ContainerRepair.this.field_82854_e > 0 && this.func_75216_d();
+                return (playerIn.capabilities.isCreativeMode || playerIn.experienceLevel >= ContainerRepair.this.maximumCost) && ContainerRepair.this.maximumCost > 0 && this.getHasStack();
             }
-            public ItemStack func_190901_a(EntityPlayer p_190901_1_, ItemStack p_190901_2_)
+            public ItemStack onTake(EntityPlayer thePlayer, ItemStack stack)
             {
-                if (!p_190901_1_.field_71075_bZ.field_75098_d)
+                if (!thePlayer.capabilities.isCreativeMode)
                 {
-                    p_190901_1_.func_82242_a(-ContainerRepair.this.field_82854_e);
+                    thePlayer.addExperienceLevel(-ContainerRepair.this.maximumCost);
                 }
 
-                ItemStack itemstack = ContainerRepair.this.field_82853_g.func_70301_a(0);
+                float breakChance = net.minecraftforge.common.ForgeHooks.onAnvilRepair(thePlayer, stack, ContainerRepair.this.inputSlots.getStackInSlot(0), ContainerRepair.this.inputSlots.getStackInSlot(1));
 
-                if (itemstack.func_190916_E() != 1 && !p_190901_1_.field_71075_bZ.field_75098_d && !(itemstack.func_77973_b() instanceof ItemNameTag))
+                ItemStack itemstack = ContainerRepair.this.inputSlots.getStackInSlot(0);
+
+                if (itemstack.getCount() != 1 && !thePlayer.capabilities.isCreativeMode && !(itemstack.getItem() instanceof ItemNameTag))
                 {
-                    itemstack.func_190920_e(itemstack.func_190916_E() - 1);
+                    itemstack.setCount(itemstack.getCount() - 1);
                 }
                 else
                 {
-                    ContainerRepair.this.field_82853_g.func_70299_a(0, ItemStack.field_190927_a);
+                    ContainerRepair.this.inputSlots.setInventorySlotContents(0, ItemStack.EMPTY);
                 }
 
-                if (ContainerRepair.this.field_82856_l > 0)
+                if (ContainerRepair.this.materialCost > 0)
                 {
-                    ItemStack itemstack1 = ContainerRepair.this.field_82853_g.func_70301_a(1);
+                    ItemStack itemstack1 = ContainerRepair.this.inputSlots.getStackInSlot(1);
 
-                    if (!itemstack1.func_190926_b() && itemstack1.func_190916_E() > ContainerRepair.this.field_82856_l)
+                    if (!itemstack1.isEmpty() && itemstack1.getCount() > ContainerRepair.this.materialCost)
                     {
-                        itemstack1.func_190918_g(ContainerRepair.this.field_82856_l);
-                        ContainerRepair.this.field_82853_g.func_70299_a(1, itemstack1);
+                        itemstack1.shrink(ContainerRepair.this.materialCost);
+                        ContainerRepair.this.inputSlots.setInventorySlotContents(1, itemstack1);
                     }
                     else
                     {
-                        ContainerRepair.this.field_82853_g.func_70299_a(1, ItemStack.field_190927_a);
+                        ContainerRepair.this.inputSlots.setInventorySlotContents(1, ItemStack.EMPTY);
                     }
                 }
                 else
                 {
-                    ContainerRepair.this.field_82853_g.func_70299_a(1, ItemStack.field_190927_a);
+                    ContainerRepair.this.inputSlots.setInventorySlotContents(1, ItemStack.EMPTY);
                 }
 
-                ContainerRepair.this.field_82854_e = 0;
-                IBlockState iblockstate = p_i45807_2_.func_180495_p(p_i45807_3_);
+                ContainerRepair.this.maximumCost = 0;
+                IBlockState iblockstate = worldIn.getBlockState(blockPosIn);
 
-                if (!p_190901_1_.field_71075_bZ.field_75098_d && !p_i45807_2_.field_72995_K && iblockstate.func_177230_c() == Blocks.field_150467_bQ && p_190901_1_.func_70681_au().nextFloat() < 0.12F)
+                if (!thePlayer.capabilities.isCreativeMode && !worldIn.isRemote && iblockstate.getBlock() == Blocks.ANVIL && thePlayer.getRNG().nextFloat() < breakChance)
                 {
-                    int l = ((Integer)iblockstate.func_177229_b(BlockAnvil.field_176505_b)).intValue();
+                    int l = ((Integer)iblockstate.getValue(BlockAnvil.DAMAGE)).intValue();
                     ++l;
 
                     if (l > 2)
                     {
-                        p_i45807_2_.func_175698_g(p_i45807_3_);
-                        p_i45807_2_.func_175718_b(1029, p_i45807_3_, 0);
+                        worldIn.setBlockToAir(blockPosIn);
+                        worldIn.playEvent(1029, blockPosIn, 0);
                     }
                     else
                     {
-                        p_i45807_2_.func_180501_a(p_i45807_3_, iblockstate.func_177226_a(BlockAnvil.field_176505_b, Integer.valueOf(l)), 2);
-                        p_i45807_2_.func_175718_b(1030, p_i45807_3_, 0);
+                        worldIn.setBlockState(blockPosIn, iblockstate.withProperty(BlockAnvil.DAMAGE, Integer.valueOf(l)), 2);
+                        worldIn.playEvent(1030, blockPosIn, 0);
                     }
                 }
-                else if (!p_i45807_2_.field_72995_K)
+                else if (!worldIn.isRemote)
                 {
-                    p_i45807_2_.func_175718_b(1030, p_i45807_3_, 0);
+                    worldIn.playEvent(1030, blockPosIn, 0);
                 }
 
-                return p_190901_2_;
+                return stack;
             }
         });
 
@@ -132,110 +163,112 @@
         {
             for (int j = 0; j < 9; ++j)
             {
-                this.func_75146_a(new Slot(p_i45807_1_, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
+                this.addSlotToContainer(new Slot(playerInventory, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
             }
         }
 
         for (int k = 0; k < 9; ++k)
         {
-            this.func_75146_a(new Slot(p_i45807_1_, k, 8 + k * 18, 142));
+            this.addSlotToContainer(new Slot(playerInventory, k, 8 + k * 18, 142));
         }
     }
 
-    public void func_75130_a(IInventory p_75130_1_)
+    public void onCraftMatrixChanged(IInventory inventoryIn)
     {
-        super.func_75130_a(p_75130_1_);
+        super.onCraftMatrixChanged(inventoryIn);
 
-        if (p_75130_1_ == this.field_82853_g)
+        if (inventoryIn == this.inputSlots)
         {
-            this.func_82848_d();
+            this.updateRepairOutput();
         }
     }
 
-    public void func_82848_d()
+    public void updateRepairOutput()
     {
-        ItemStack itemstack = this.field_82853_g.func_70301_a(0);
-        this.field_82854_e = 1;
+        ItemStack itemstack = this.inputSlots.getStackInSlot(0);
+        this.maximumCost = 1;
         int i = 0;
         int j = 0;
         int k = 0;
 
-        if (itemstack.func_190926_b())
+        if (itemstack.isEmpty())
         {
-            this.field_82852_f.func_70299_a(0, ItemStack.field_190927_a);
-            this.field_82854_e = 0;
+            this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+            this.maximumCost = 0;
         }
         else
         {
-            ItemStack itemstack1 = itemstack.func_77946_l();
+            ItemStack itemstack1 = itemstack.copy();
 
-            if (itemstack1.func_190916_E() > 1 && !this.field_82855_n.field_71075_bZ.field_75098_d && !(itemstack1.func_77973_b() instanceof ItemNameTag))
+            if (itemstack1.getCount() > 1 && !this.player.capabilities.isCreativeMode && !(itemstack1.getItem() instanceof ItemNameTag))
             {
-                itemstack1.func_190920_e(1);
+                itemstack1.setCount(1);
             }
 
-            ItemStack itemstack2 = this.field_82853_g.func_70301_a(1);
-            Map<Enchantment, Integer> map = EnchantmentHelper.func_82781_a(itemstack1);
-            j = j + itemstack.func_82838_A() + (itemstack2.func_190926_b() ? 0 : itemstack2.func_82838_A());
-            this.field_82856_l = 0;
+            ItemStack itemstack2 = this.inputSlots.getStackInSlot(1);
+            Map<Enchantment, Integer> map = EnchantmentHelper.getEnchantments(itemstack1);
+            j = j + itemstack.getRepairCost() + (itemstack2.isEmpty() ? 0 : itemstack2.getRepairCost());
+            this.materialCost = 0;
+            boolean flag = false;
 
-            if (!itemstack2.func_190926_b())
+            if (!itemstack2.isEmpty())
             {
-                boolean flag = itemstack2.func_77973_b() == Items.field_151134_bR && !Items.field_151134_bR.func_92110_g(itemstack2).func_82582_d();
+                if (!net.minecraftforge.common.ForgeHooks.onAnvilChange(this, itemstack, itemstack2, outputSlot, repairedItemName, j)) return;
+                flag = itemstack2.getItem() == Items.ENCHANTED_BOOK && !Items.ENCHANTED_BOOK.getEnchantments(itemstack2).hasNoTags();
 
-                if (itemstack1.func_77984_f() && itemstack1.func_77973_b().func_82789_a(itemstack, itemstack2))
+                if (itemstack1.isItemStackDamageable() && itemstack1.getItem().getIsRepairable(itemstack, itemstack2))
                 {
-                    int l2 = Math.min(itemstack1.func_77952_i(), itemstack1.func_77958_k() / 4);
+                    int l2 = Math.min(itemstack1.getItemDamage(), itemstack1.getMaxDamage() / 4);
 
                     if (l2 <= 0)
                     {
-                        this.field_82852_f.func_70299_a(0, ItemStack.field_190927_a);
-                        this.field_82854_e = 0;
+                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        this.maximumCost = 0;
                         return;
                     }
 
                     int i3;
 
-                    for (i3 = 0; l2 > 0 && i3 < itemstack2.func_190916_E(); ++i3)
+                    for (i3 = 0; l2 > 0 && i3 < itemstack2.getCount(); ++i3)
                     {
-                        int j3 = itemstack1.func_77952_i() - l2;
-                        itemstack1.func_77964_b(j3);
+                        int j3 = itemstack1.getItemDamage() - l2;
+                        itemstack1.setItemDamage(j3);
                         ++i;
-                        l2 = Math.min(itemstack1.func_77952_i(), itemstack1.func_77958_k() / 4);
+                        l2 = Math.min(itemstack1.getItemDamage(), itemstack1.getMaxDamage() / 4);
                     }
 
-                    this.field_82856_l = i3;
+                    this.materialCost = i3;
                 }
                 else
                 {
-                    if (!flag && (itemstack1.func_77973_b() != itemstack2.func_77973_b() || !itemstack1.func_77984_f()))
+                    if (!flag && (itemstack1.getItem() != itemstack2.getItem() || !itemstack1.isItemStackDamageable()))
                     {
-                        this.field_82852_f.func_70299_a(0, ItemStack.field_190927_a);
-                        this.field_82854_e = 0;
+                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        this.maximumCost = 0;
                         return;
                     }
 
-                    if (itemstack1.func_77984_f() && !flag)
+                    if (itemstack1.isItemStackDamageable() && !flag)
                     {
-                        int l = itemstack.func_77958_k() - itemstack.func_77952_i();
-                        int i1 = itemstack2.func_77958_k() - itemstack2.func_77952_i();
-                        int j1 = i1 + itemstack1.func_77958_k() * 12 / 100;
+                        int l = itemstack.getMaxDamage() - itemstack.getItemDamage();
+                        int i1 = itemstack2.getMaxDamage() - itemstack2.getItemDamage();
+                        int j1 = i1 + itemstack1.getMaxDamage() * 12 / 100;
                         int k1 = l + j1;
-                        int l1 = itemstack1.func_77958_k() - k1;
+                        int l1 = itemstack1.getMaxDamage() - k1;
 
                         if (l1 < 0)
                         {
                             l1 = 0;
                         }
 
-                        if (l1 < itemstack1.func_77960_j())
+                        if (l1 < itemstack1.getMetadata())
                         {
-                            itemstack1.func_77964_b(l1);
+                            itemstack1.setItemDamage(l1);
                             i += 2;
                         }
                     }
 
-                    Map<Enchantment, Integer> map1 = EnchantmentHelper.func_82781_a(itemstack2);
+                    Map<Enchantment, Integer> map1 = EnchantmentHelper.getEnchantments(itemstack2);
                     boolean flag2 = false;
                     boolean flag3 = false;
 
@@ -246,9 +279,9 @@
                             int i2 = map.containsKey(enchantment1) ? ((Integer)map.get(enchantment1)).intValue() : 0;
                             int j2 = ((Integer)map1.get(enchantment1)).intValue();
                             j2 = i2 == j2 ? j2 + 1 : Math.max(j2, i2);
-                            boolean flag1 = enchantment1.func_92089_a(itemstack);
+                            boolean flag1 = enchantment1.canApply(itemstack);
 
-                            if (this.field_82855_n.field_71075_bZ.field_75098_d || itemstack.func_77973_b() == Items.field_151134_bR)
+                            if (this.player.capabilities.isCreativeMode || itemstack.getItem() == Items.ENCHANTED_BOOK)
                             {
                                 flag1 = true;
                             }
@@ -270,15 +303,15 @@
                             {
                                 flag2 = true;
 
-                                if (j2 > enchantment1.func_77325_b())
+                                if (j2 > enchantment1.getMaxLevel())
                                 {
-                                    j2 = enchantment1.func_77325_b();
+                                    j2 = enchantment1.getMaxLevel();
                                 }
 
                                 map.put(enchantment1, Integer.valueOf(j2));
                                 int k3 = 0;
 
-                                switch (enchantment1.func_77324_c())
+                                switch (enchantment1.getRarity())
                                 {
                                     case COMMON:
                                         k3 = 1;
@@ -305,53 +338,54 @@
 
                     if (flag3 && !flag2)
                     {
-                        this.field_82852_f.func_70299_a(0, ItemStack.field_190927_a);
-                        this.field_82854_e = 0;
+                        this.outputSlot.setInventorySlotContents(0, ItemStack.EMPTY);
+                        this.maximumCost = 0;
                         return;
                     }
                 }
             }
 
-            if (StringUtils.isBlank(this.field_82857_m))
+            if (StringUtils.isBlank(this.repairedItemName))
             {
-                if (itemstack.func_82837_s())
+                if (itemstack.hasDisplayName())
                 {
                     k = 1;
                     i += k;
-                    itemstack1.func_135074_t();
+                    itemstack1.clearCustomName();
                 }
             }
-            else if (!this.field_82857_m.equals(itemstack.func_82833_r()))
+            else if (!this.repairedItemName.equals(itemstack.getDisplayName()))
             {
                 k = 1;
                 i += k;
-                itemstack1.func_151001_c(this.field_82857_m);
+                itemstack1.setStackDisplayName(this.repairedItemName);
             }
+            if (flag && !itemstack1.getItem().isBookEnchantable(itemstack1, itemstack2)) itemstack1 = ItemStack.EMPTY;
 
-            this.field_82854_e = j + i;
+            this.maximumCost = j + i;
 
             if (i <= 0)
             {
-                itemstack1 = ItemStack.field_190927_a;
+                itemstack1 = ItemStack.EMPTY;
             }
 
-            if (k == i && k > 0 && this.field_82854_e >= 40)
+            if (k == i && k > 0 && this.maximumCost >= 40)
             {
-                this.field_82854_e = 39;
+                this.maximumCost = 39;
             }
 
-            if (this.field_82854_e >= 40 && !this.field_82855_n.field_71075_bZ.field_75098_d)
+            if (this.maximumCost >= 40 && !this.player.capabilities.isCreativeMode)
             {
-                itemstack1 = ItemStack.field_190927_a;
+                itemstack1 = ItemStack.EMPTY;
             }
 
-            if (!itemstack1.func_190926_b())
+            if (!itemstack1.isEmpty())
             {
-                int k2 = itemstack1.func_82838_A();
+                int k2 = itemstack1.getRepairCost();
 
-                if (!itemstack2.func_190926_b() && k2 < itemstack2.func_82838_A())
+                if (!itemstack2.isEmpty() && k2 < itemstack2.getRepairCost())
                 {
-                    k2 = itemstack2.func_82838_A();
+                    k2 = itemstack2.getRepairCost();
                 }
 
                 if (k != i || k == 0)
@@ -359,122 +393,122 @@
                     k2 = k2 * 2 + 1;
                 }
 
-                itemstack1.func_82841_c(k2);
-                EnchantmentHelper.func_82782_a(map, itemstack1);
+                itemstack1.setRepairCost(k2);
+                EnchantmentHelper.setEnchantments(map, itemstack1);
             }
 
-            this.field_82852_f.func_70299_a(0, itemstack1);
-            this.func_75142_b();
+            this.outputSlot.setInventorySlotContents(0, itemstack1);
+            this.detectAndSendChanges();
         }
     }
 
-    public void func_75132_a(IContainerListener p_75132_1_)
+    public void addListener(IContainerListener listener)
     {
-        super.func_75132_a(p_75132_1_);
-        p_75132_1_.func_71112_a(this, 0, this.field_82854_e);
+        super.addListener(listener);
+        listener.sendProgressBarUpdate(this, 0, this.maximumCost);
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_75137_b(int p_75137_1_, int p_75137_2_)
+    public void updateProgressBar(int id, int data)
     {
-        if (p_75137_1_ == 0)
+        if (id == 0)
         {
-            this.field_82854_e = p_75137_2_;
+            this.maximumCost = data;
         }
     }
 
-    public void func_75134_a(EntityPlayer p_75134_1_)
+    public void onContainerClosed(EntityPlayer playerIn)
     {
-        super.func_75134_a(p_75134_1_);
+        super.onContainerClosed(playerIn);
 
-        if (!this.field_82860_h.field_72995_K)
+        if (!this.world.isRemote)
         {
-            for (int i = 0; i < this.field_82853_g.func_70302_i_(); ++i)
+            for (int i = 0; i < this.inputSlots.getSizeInventory(); ++i)
             {
-                ItemStack itemstack = this.field_82853_g.func_70304_b(i);
+                ItemStack itemstack = this.inputSlots.removeStackFromSlot(i);
 
-                if (!itemstack.func_190926_b())
+                if (!itemstack.isEmpty())
                 {
-                    p_75134_1_.func_71019_a(itemstack, false);
+                    playerIn.dropItem(itemstack, false);
                 }
             }
         }
     }
 
-    public boolean func_75145_c(EntityPlayer p_75145_1_)
+    public boolean canInteractWith(EntityPlayer playerIn)
     {
-        return this.field_82860_h.func_180495_p(this.field_178156_j).func_177230_c() != Blocks.field_150467_bQ ? false : p_75145_1_.func_70092_e((double)this.field_178156_j.func_177958_n() + 0.5D, (double)this.field_178156_j.func_177956_o() + 0.5D, (double)this.field_178156_j.func_177952_p() + 0.5D) <= 64.0D;
+        return this.world.getBlockState(this.selfPosition).getBlock() != Blocks.ANVIL ? false : playerIn.getDistanceSq((double)this.selfPosition.getX() + 0.5D, (double)this.selfPosition.getY() + 0.5D, (double)this.selfPosition.getZ() + 0.5D) <= 64.0D;
     }
 
-    public ItemStack func_82846_b(EntityPlayer p_82846_1_, int p_82846_2_)
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
-        ItemStack itemstack = ItemStack.field_190927_a;
-        Slot slot = (Slot)this.field_75151_b.get(p_82846_2_);
+        ItemStack itemstack = ItemStack.EMPTY;
+        Slot slot = (Slot)this.inventorySlots.get(index);
 
-        if (slot != null && slot.func_75216_d())
+        if (slot != null && slot.getHasStack())
         {
-            ItemStack itemstack1 = slot.func_75211_c();
-            itemstack = itemstack1.func_77946_l();
+            ItemStack itemstack1 = slot.getStack();
+            itemstack = itemstack1.copy();
 
-            if (p_82846_2_ == 2)
+            if (index == 2)
             {
-                if (!this.func_75135_a(itemstack1, 3, 39, true))
+                if (!this.mergeItemStack(itemstack1, 3, 39, true))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
 
-                slot.func_75220_a(itemstack1, itemstack);
+                slot.onSlotChange(itemstack1, itemstack);
             }
-            else if (p_82846_2_ != 0 && p_82846_2_ != 1)
+            else if (index != 0 && index != 1)
             {
-                if (p_82846_2_ >= 3 && p_82846_2_ < 39 && !this.func_75135_a(itemstack1, 0, 2, false))
+                if (index >= 3 && index < 39 && !this.mergeItemStack(itemstack1, 0, 2, false))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
             }
-            else if (!this.func_75135_a(itemstack1, 3, 39, false))
+            else if (!this.mergeItemStack(itemstack1, 3, 39, false))
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            if (itemstack1.func_190926_b())
+            if (itemstack1.isEmpty())
             {
-                slot.func_75215_d(ItemStack.field_190927_a);
+                slot.putStack(ItemStack.EMPTY);
             }
             else
             {
-                slot.func_75218_e();
+                slot.onSlotChanged();
             }
 
-            if (itemstack1.func_190916_E() == itemstack.func_190916_E())
+            if (itemstack1.getCount() == itemstack.getCount())
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            slot.func_190901_a(p_82846_1_, itemstack1);
+            slot.onTake(playerIn, itemstack1);
         }
 
         return itemstack;
     }
 
-    public void func_82850_a(String p_82850_1_)
+    public void updateItemName(String newName)
     {
-        this.field_82857_m = p_82850_1_;
+        this.repairedItemName = newName;
 
-        if (this.func_75139_a(2).func_75216_d())
+        if (this.getSlot(2).getHasStack())
         {
-            ItemStack itemstack = this.func_75139_a(2).func_75211_c();
+            ItemStack itemstack = this.getSlot(2).getStack();
 
-            if (StringUtils.isBlank(p_82850_1_))
+            if (StringUtils.isBlank(newName))
             {
-                itemstack.func_135074_t();
+                itemstack.clearCustomName();
             }
             else
             {
-                itemstack.func_151001_c(this.field_82857_m);
+                itemstack.setStackDisplayName(this.repairedItemName);
             }
         }
 
-        this.func_82848_d();
+        this.updateRepairOutput();
     }
 }
