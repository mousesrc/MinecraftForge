--- ../src-base/minecraft/net/minecraft/inventory/ContainerEnchantment.java
+++ ../src-work/minecraft/net/minecraft/inventory/ContainerEnchantment.java
@@ -1,6 +1,8 @@
 package net.minecraft.inventory;
 
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 import java.util.Random;
 import net.minecraft.enchantment.Enchantment;
 import net.minecraft.enchantment.EnchantmentData;
@@ -16,63 +18,85 @@
 import net.minecraft.util.SoundCategory;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
+import net.minecraftforge.common.ForgeHooks;
+import net.minecraftforge.event.ForgeEventFactory;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.inventory.CraftInventoryEnchanting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.enchantments.EnchantmentOffer;
+import org.bukkit.entity.Player;
+import org.bukkit.event.enchantment.EnchantItemEvent;
+import org.bukkit.event.enchantment.PrepareItemEnchantEvent;
 
 public class ContainerEnchantment extends Container
 {
-    public IInventory field_75168_e;
-    public final World field_75172_h;
-    private final BlockPos field_178150_j;
-    private final Random field_75169_l;
-    public int field_178149_f;
-    public int[] field_75167_g;
-    public int[] field_185001_h;
-    public int[] field_185002_i;
-
+    public IInventory tableInventory;
+    public World worldPointer;
+    private final BlockPos position;
+    private final Random rand;
+    public int xpSeed;
+    public int[] enchantLevels;
+    public int[] enchantClue;
+    public int[] worldClue;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private Player player;
+    // CraftBukkit end
     @SideOnly(Side.CLIENT)
-    public ContainerEnchantment(InventoryPlayer p_i45797_1_, World p_i45797_2_)
+    public ContainerEnchantment(InventoryPlayer playerInv, World worldIn)
     {
-        this(p_i45797_1_, p_i45797_2_, BlockPos.field_177992_a);
+        this(playerInv, worldIn, BlockPos.ORIGIN);
     }
 
-    public ContainerEnchantment(InventoryPlayer p_i45798_1_, World p_i45798_2_, BlockPos p_i45798_3_)
+    public ContainerEnchantment(InventoryPlayer playerInv, World worldIn, BlockPos pos)
     {
-        this.field_75168_e = new InventoryBasic("Enchant", true, 2)
+        this.tableInventory = new InventoryBasic("Enchant", true, 2)
         {
-            public int func_70297_j_()
+            public int getInventoryStackLimit()
             {
                 return 64;
             }
-            public void func_70296_d()
+            public void markDirty()
             {
-                super.func_70296_d();
-                ContainerEnchantment.this.func_75130_a(this);
+                super.markDirty();
+                ContainerEnchantment.this.onCraftMatrixChanged(this);
             }
+            // CraftBukkit start
+            @Override
+            public Location getLocation() {
+                return new Location(worldPointer.getWorld(), position.getX(), position.getY(), position.getZ());
+            }
+            // CraftBukkit end
         };
-        this.field_75169_l = new Random();
-        this.field_75167_g = new int[3];
-        this.field_185001_h = new int[] { -1, -1, -1};
-        this.field_185002_i = new int[] { -1, -1, -1};
-        this.field_75172_h = p_i45798_2_;
-        this.field_178150_j = p_i45798_3_;
-        this.field_178149_f = p_i45798_1_.field_70458_d.func_175138_ci();
-        this.func_75146_a(new Slot(this.field_75168_e, 0, 15, 47)
+        this.rand = new Random();
+        this.enchantLevels = new int[3];
+        this.enchantClue = new int[] { -1, -1, -1};
+        this.worldClue = new int[] { -1, -1, -1};
+        this.worldPointer = worldIn;
+        this.position = pos;
+        this.xpSeed = playerInv.player.getXPSeed();
+        this.addSlotToContainer(new Slot(this.tableInventory, 0, 15, 47)
         {
-            public boolean func_75214_a(ItemStack p_75214_1_)
+            public boolean isItemValid(ItemStack stack)
             {
                 return true;
             }
-            public int func_75219_a()
+            public int getSlotStackLimit()
             {
                 return 1;
             }
         });
-        this.func_75146_a(new Slot(this.field_75168_e, 1, 35, 47)
+        this.addSlotToContainer(new Slot(this.tableInventory, 1, 35, 47)
         {
-            public boolean func_75214_a(ItemStack p_75214_1_)
+            java.util.List<ItemStack> ores = net.minecraftforge.oredict.OreDictionary.getOres("gemLapis");
+            public boolean isItemValid(ItemStack stack)
             {
-                return p_75214_1_.func_77973_b() == Items.field_151100_aR && EnumDyeColor.func_176766_a(p_75214_1_.func_77960_j()) == EnumDyeColor.BLUE;
+                for (ItemStack ore : ores)
+                    if (net.minecraftforge.oredict.OreDictionary.itemMatches(ore, stack, false)) return true;
+                return false;
             }
         });
 
@@ -80,226 +104,269 @@
         {
             for (int j = 0; j < 9; ++j)
             {
-                this.func_75146_a(new Slot(p_i45798_1_, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
+                this.addSlotToContainer(new Slot(playerInv, j + i * 9 + 9, 8 + j * 18, 84 + i * 18));
             }
         }
 
         for (int k = 0; k < 9; ++k)
         {
-            this.func_75146_a(new Slot(p_i45798_1_, k, 8 + k * 18, 142));
+            this.addSlotToContainer(new Slot(playerInv, k, 8 + k * 18, 142));
         }
+        // CraftBukkit start
+        player = (Player) playerInv.player.getBukkitEntity();
+        // CraftBukkit end
     }
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
 
-    protected void func_185000_c(IContainerListener p_185000_1_)
+        CraftInventoryEnchanting inventory = new CraftInventoryEnchanting(this.tableInventory);
+        bukkitEntity = new CraftInventoryView(this.player, inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
+    protected void broadcastData(IContainerListener crafting)
     {
-        p_185000_1_.func_71112_a(this, 0, this.field_75167_g[0]);
-        p_185000_1_.func_71112_a(this, 1, this.field_75167_g[1]);
-        p_185000_1_.func_71112_a(this, 2, this.field_75167_g[2]);
-        p_185000_1_.func_71112_a(this, 3, this.field_178149_f & -16);
-        p_185000_1_.func_71112_a(this, 4, this.field_185001_h[0]);
-        p_185000_1_.func_71112_a(this, 5, this.field_185001_h[1]);
-        p_185000_1_.func_71112_a(this, 6, this.field_185001_h[2]);
-        p_185000_1_.func_71112_a(this, 7, this.field_185002_i[0]);
-        p_185000_1_.func_71112_a(this, 8, this.field_185002_i[1]);
-        p_185000_1_.func_71112_a(this, 9, this.field_185002_i[2]);
+        crafting.sendProgressBarUpdate(this, 0, this.enchantLevels[0]);
+        crafting.sendProgressBarUpdate(this, 1, this.enchantLevels[1]);
+        crafting.sendProgressBarUpdate(this, 2, this.enchantLevels[2]);
+        crafting.sendProgressBarUpdate(this, 3, this.xpSeed & -16);
+        crafting.sendProgressBarUpdate(this, 4, this.enchantClue[0]);
+        crafting.sendProgressBarUpdate(this, 5, this.enchantClue[1]);
+        crafting.sendProgressBarUpdate(this, 6, this.enchantClue[2]);
+        crafting.sendProgressBarUpdate(this, 7, this.worldClue[0]);
+        crafting.sendProgressBarUpdate(this, 8, this.worldClue[1]);
+        crafting.sendProgressBarUpdate(this, 9, this.worldClue[2]);
     }
 
-    public void func_75132_a(IContainerListener p_75132_1_)
+    public void addListener(IContainerListener listener)
     {
-        super.func_75132_a(p_75132_1_);
-        this.func_185000_c(p_75132_1_);
+        super.addListener(listener);
+        this.broadcastData(listener);
     }
 
-    public void func_75142_b()
+    public void detectAndSendChanges()
     {
-        super.func_75142_b();
+        super.detectAndSendChanges();
 
-        for (int i = 0; i < this.field_75149_d.size(); ++i)
+        for (int i = 0; i < this.listeners.size(); ++i)
         {
-            IContainerListener icontainerlistener = (IContainerListener)this.field_75149_d.get(i);
-            this.func_185000_c(icontainerlistener);
+            IContainerListener icontainerlistener = (IContainerListener)this.listeners.get(i);
+            this.broadcastData(icontainerlistener);
         }
     }
 
     @SideOnly(Side.CLIENT)
-    public void func_75137_b(int p_75137_1_, int p_75137_2_)
+    public void updateProgressBar(int id, int data)
     {
-        if (p_75137_1_ >= 0 && p_75137_1_ <= 2)
+        if (id >= 0 && id <= 2)
         {
-            this.field_75167_g[p_75137_1_] = p_75137_2_;
+            this.enchantLevels[id] = data;
         }
-        else if (p_75137_1_ == 3)
+        else if (id == 3)
         {
-            this.field_178149_f = p_75137_2_;
+            this.xpSeed = data;
         }
-        else if (p_75137_1_ >= 4 && p_75137_1_ <= 6)
+        else if (id >= 4 && id <= 6)
         {
-            this.field_185001_h[p_75137_1_ - 4] = p_75137_2_;
+            this.enchantClue[id - 4] = data;
         }
-        else if (p_75137_1_ >= 7 && p_75137_1_ <= 9)
+        else if (id >= 7 && id <= 9)
         {
-            this.field_185002_i[p_75137_1_ - 7] = p_75137_2_;
+            this.worldClue[id - 7] = data;
         }
         else
         {
-            super.func_75137_b(p_75137_1_, p_75137_2_);
+            super.updateProgressBar(id, data);
         }
     }
 
-    public void func_75130_a(IInventory p_75130_1_)
+    public void onCraftMatrixChanged(IInventory inventoryIn)
     {
-        if (p_75130_1_ == this.field_75168_e)
+        if (inventoryIn == this.tableInventory)
         {
-            ItemStack itemstack = p_75130_1_.func_70301_a(0);
+            ItemStack itemstack = inventoryIn.getStackInSlot(0);
 
-            if (!itemstack.func_190926_b() && itemstack.func_77956_u())
+            if (!itemstack.isEmpty() && itemstack.isItemEnchantable())
             {
-                if (!this.field_75172_h.field_72995_K)
+                if (!this.worldPointer.isRemote)
                 {
                     int l = 0;
+                    float power = 0;
 
                     for (int j = -1; j <= 1; ++j)
                     {
                         for (int k = -1; k <= 1; ++k)
                         {
-                            if ((j != 0 || k != 0) && this.field_75172_h.func_175623_d(this.field_178150_j.func_177982_a(k, 0, j)) && this.field_75172_h.func_175623_d(this.field_178150_j.func_177982_a(k, 1, j)))
+                            if ((j != 0 || k != 0) && this.worldPointer.isAirBlock(this.position.add(k, 0, j)) && this.worldPointer.isAirBlock(this.position.add(k, 1, j)))
                             {
-                                if (this.field_75172_h.func_180495_p(this.field_178150_j.func_177982_a(k * 2, 0, j * 2)).func_177230_c() == Blocks.field_150342_X)
-                                {
-                                    ++l;
-                                }
-
-                                if (this.field_75172_h.func_180495_p(this.field_178150_j.func_177982_a(k * 2, 1, j * 2)).func_177230_c() == Blocks.field_150342_X)
-                                {
-                                    ++l;
-                                }
-
+                                power += ForgeHooks.getEnchantPower(worldPointer, position.add(k * 2, 0, j * 2));
+                                power += ForgeHooks.getEnchantPower(worldPointer, position.add(k * 2, 1, j * 2));
                                 if (k != 0 && j != 0)
                                 {
-                                    if (this.field_75172_h.func_180495_p(this.field_178150_j.func_177982_a(k * 2, 0, j)).func_177230_c() == Blocks.field_150342_X)
-                                    {
-                                        ++l;
-                                    }
-
-                                    if (this.field_75172_h.func_180495_p(this.field_178150_j.func_177982_a(k * 2, 1, j)).func_177230_c() == Blocks.field_150342_X)
-                                    {
-                                        ++l;
-                                    }
-
-                                    if (this.field_75172_h.func_180495_p(this.field_178150_j.func_177982_a(k, 0, j * 2)).func_177230_c() == Blocks.field_150342_X)
-                                    {
-                                        ++l;
-                                    }
-
-                                    if (this.field_75172_h.func_180495_p(this.field_178150_j.func_177982_a(k, 1, j * 2)).func_177230_c() == Blocks.field_150342_X)
-                                    {
-                                        ++l;
-                                    }
+                                    power += ForgeHooks.getEnchantPower(worldPointer, position.add(k * 2, 0, j));
+                                    power += ForgeHooks.getEnchantPower(worldPointer, position.add(k * 2, 1, j));
+                                    power += ForgeHooks.getEnchantPower(worldPointer, position.add(k, 0, j * 2));
+                                    power += ForgeHooks.getEnchantPower(worldPointer, position.add(k, 1, j * 2));
                                 }
                             }
                         }
                     }
 
-                    this.field_75169_l.setSeed((long)this.field_178149_f);
+                    this.rand.setSeed((long)this.xpSeed);
 
                     for (int i1 = 0; i1 < 3; ++i1)
                     {
-                        this.field_75167_g[i1] = EnchantmentHelper.func_77514_a(this.field_75169_l, i1, l, itemstack);
-                        this.field_185001_h[i1] = -1;
-                        this.field_185002_i[i1] = -1;
+                        this.enchantLevels[i1] = EnchantmentHelper.calcItemStackEnchantability(this.rand, i1, (int)power, itemstack);
+                        this.enchantClue[i1] = -1;
+                        this.worldClue[i1] = -1;
 
-                        if (this.field_75167_g[i1] < i1 + 1)
+                        if (this.enchantLevels[i1] < i1 + 1)
                         {
-                            this.field_75167_g[i1] = 0;
+                            this.enchantLevels[i1] = 0;
                         }
+                        this.enchantLevels[i1] = ForgeEventFactory.onEnchantmentLevelSet(worldPointer, position, i1, (int)power, itemstack, enchantLevels[i1]);
                     }
 
                     for (int j1 = 0; j1 < 3; ++j1)
                     {
-                        if (this.field_75167_g[j1] > 0)
+                        if (this.enchantLevels[j1] > 0)
                         {
-                            List<EnchantmentData> list = this.func_178148_a(itemstack, j1, this.field_75167_g[j1]);
+                            List<EnchantmentData> list = this.getEnchantmentList(itemstack, j1, this.enchantLevels[j1]);
 
                             if (list != null && !list.isEmpty())
                             {
-                                EnchantmentData enchantmentdata = (EnchantmentData)list.get(this.field_75169_l.nextInt(list.size()));
-                                this.field_185001_h[j1] = Enchantment.func_185258_b(enchantmentdata.field_76302_b);
-                                this.field_185002_i[j1] = enchantmentdata.field_76303_c;
+                                EnchantmentData enchantmentdata = (EnchantmentData)list.get(this.rand.nextInt(list.size()));
+                                this.enchantClue[j1] = Enchantment.getEnchantmentID(enchantmentdata.enchantmentobj);
+                                this.worldClue[j1] = enchantmentdata.enchantmentLevel;
                             }
                         }
                     }
+                    // CraftBukkit start
+                    CraftItemStack item = CraftItemStack.asCraftMirror(itemstack);
+                    EnchantmentOffer[] offers = new EnchantmentOffer[3];
+                    for (int idx = 0; idx < 3; ++idx) {
+                        org.bukkit.enchantments.Enchantment enchantment = (this.enchantClue[idx] >= 0) ? org.bukkit.enchantments.Enchantment.getById(this.enchantClue[idx]) : null;
+                        offers[idx] = (enchantment != null) ? new EnchantmentOffer(enchantment, this.worldClue[idx], this.enchantLevels[idx]) : null;
+                    }
 
-                    this.func_75142_b();
+                    PrepareItemEnchantEvent event = new PrepareItemEnchantEvent(player, this.getBukkitView(), this.worldPointer.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ()), item, offers, l);
+                    event.setCancelled(!itemstack.isItemEnchantable());
+                    this.worldPointer.getServer().getPluginManager().callEvent(event);
+
+                    if (event.isCancelled()) {
+                        for (l = 0; l < 3; ++l) {
+                            this.enchantLevels[l] = 0;
+                            this.enchantClue[l] = -1;
+                            this.worldClue[l] = -1;
+                        }
+                        return;
+                    }
+
+                    for (l = 0; l < 3; l++) {
+                        EnchantmentOffer offer = event.getOffers()[l];
+                        if (offer != null) {
+                            this.enchantLevels[l] = offer.getCost();
+                            this.enchantClue[l] = offer.getEnchantment().getId();
+                            this.worldClue[l] = offer.getEnchantmentLevel();
+                        } else {
+                            this.enchantLevels[l] = 0;
+                            this.enchantClue[l] = -1;
+                            this.worldClue[l] = -1;
+                        }
+                    }
+                    // CraftBukkit end
+                    this.detectAndSendChanges();
                 }
             }
             else
             {
                 for (int i = 0; i < 3; ++i)
                 {
-                    this.field_75167_g[i] = 0;
-                    this.field_185001_h[i] = -1;
-                    this.field_185002_i[i] = -1;
+                    this.enchantLevels[i] = 0;
+                    this.enchantClue[i] = -1;
+                    this.worldClue[i] = -1;
                 }
             }
         }
     }
 
-    public boolean func_75140_a(EntityPlayer p_75140_1_, int p_75140_2_)
+    public boolean enchantItem(EntityPlayer playerIn, int id)
     {
-        ItemStack itemstack = this.field_75168_e.func_70301_a(0);
-        ItemStack itemstack1 = this.field_75168_e.func_70301_a(1);
-        int i = p_75140_2_ + 1;
+        ItemStack itemstack = this.tableInventory.getStackInSlot(0);
+        ItemStack itemstack1 = this.tableInventory.getStackInSlot(1);
+        int i = id + 1;
 
-        if ((itemstack1.func_190926_b() || itemstack1.func_190916_E() < i) && !p_75140_1_.field_71075_bZ.field_75098_d)
+        if ((itemstack1.isEmpty() || itemstack1.getCount() < i) && !playerIn.capabilities.isCreativeMode)
         {
             return false;
         }
-        else if (this.field_75167_g[p_75140_2_] > 0 && !itemstack.func_190926_b() && (p_75140_1_.field_71068_ca >= i && p_75140_1_.field_71068_ca >= this.field_75167_g[p_75140_2_] || p_75140_1_.field_71075_bZ.field_75098_d))
+        else if (this.enchantLevels[id] > 0 && !itemstack.isEmpty() && (playerIn.experienceLevel >= i && playerIn.experienceLevel >= this.enchantLevels[id] || playerIn.capabilities.isCreativeMode))
         {
-            if (!this.field_75172_h.field_72995_K)
+            if (!this.worldPointer.isRemote)
             {
-                List<EnchantmentData> list = this.func_178148_a(itemstack, p_75140_2_, this.field_75167_g[p_75140_2_]);
+                List<EnchantmentData> list = this.getEnchantmentList(itemstack, id, this.enchantLevels[id]);
+                // CraftBukkit start
+                if (true || !list.isEmpty()) {
+                    boolean flag = itemstack.getItem() == Items.BOOK;
+                    Map<org.bukkit.enchantments.Enchantment, Integer> enchants = new HashMap<org.bukkit.enchantments.Enchantment, Integer>();
+                    for (Object obj : list) {
+                        EnchantmentData instance = (EnchantmentData) obj;
+                        enchants.put(org.bukkit.enchantments.Enchantment.getById(Enchantment.getEnchantmentID(instance.enchantmentobj)), instance.enchantmentLevel);
+                    }
+                    CraftItemStack item = CraftItemStack.asCraftMirror(itemstack);
 
-                if (!list.isEmpty())
-                {
-                    p_75140_1_.func_71013_b(i);
-                    boolean flag = itemstack.func_77973_b() == Items.field_151122_aG;
+                    EnchantItemEvent event = new EnchantItemEvent((Player) playerIn.getBukkitEntity(), this.getBukkitView(), this.worldPointer.getWorld().getBlockAt(position.getX(), position.getY(), position.getZ()), item, this.enchantLevels[i], enchants, i);
+                    this.worldPointer.getServer().getPluginManager().callEvent(event);
 
-                    if (flag)
-                    {
-                        itemstack = new ItemStack(Items.field_151134_bR);
-                        this.field_75168_e.func_70299_a(0, itemstack);
+                    int level = event.getExpLevelCost();
+                    if (event.isCancelled() || (level > playerIn.experienceLevel && !playerIn.capabilities.isCreativeMode) || event.getEnchantsToAdd().isEmpty()) {
+                        return false;
                     }
+                    if (flag) {
+                        itemstack = new ItemStack(Items.ENCHANTED_BOOK);
+                        this.tableInventory.setInventorySlotContents(0, itemstack);
+                    }
 
-                    for (int j = 0; j < list.size(); ++j)
-                    {
-                        EnchantmentData enchantmentdata = (EnchantmentData)list.get(j);
+                    for (Map.Entry<org.bukkit.enchantments.Enchantment, Integer> entry : event.getEnchantsToAdd().entrySet()) {
+                        try {
+                            if (flag) {
+                                int enchantId = entry.getKey().getId();
+                                if (Enchantment.getEnchantmentByID(enchantId) == null) {
+                                    continue;
+                                }
 
-                        if (flag)
-                        {
-                            Items.field_151134_bR.func_92115_a(itemstack, enchantmentdata);
+                                EnchantmentData weightedrandomenchant = new EnchantmentData(Enchantment.getEnchantmentByID(enchantId), entry.getValue());
+                                Items.ENCHANTED_BOOK.addEnchantment(itemstack, weightedrandomenchant);
+                            } else {
+                                item.addUnsafeEnchantment(entry.getKey(), entry.getValue());
+                            }
+                        } catch (IllegalArgumentException e) {
+                            /* Just swallow invalid enchantments */
                         }
-                        else
-                        {
-                            itemstack.func_77966_a(enchantmentdata.field_76302_b, enchantmentdata.field_76303_c);
-                        }
                     }
 
-                    if (!p_75140_1_.field_71075_bZ.field_75098_d)
+                    playerIn.removeExperienceLevel(i);
+                    // CraftBukkit end
+
+                    if (!playerIn.capabilities.isCreativeMode)
                     {
-                        itemstack1.func_190918_g(i);
+                        itemstack1.shrink(i);
 
-                        if (itemstack1.func_190926_b())
+                        if (itemstack1.isEmpty())
                         {
-                            this.field_75168_e.func_70299_a(1, ItemStack.field_190927_a);
+                            this.tableInventory.setInventorySlotContents(1, ItemStack.EMPTY);
                         }
                     }
 
-                    p_75140_1_.func_71029_a(StatList.field_188091_Y);
-                    this.field_75168_e.func_70296_d();
-                    this.field_178149_f = p_75140_1_.func_175138_ci();
-                    this.func_75130_a(this.field_75168_e);
-                    this.field_75172_h.func_184133_a((EntityPlayer)null, this.field_178150_j, SoundEvents.field_190021_aL, SoundCategory.BLOCKS, 1.0F, this.field_75172_h.field_73012_v.nextFloat() * 0.1F + 0.9F);
+                    playerIn.addStat(StatList.ITEM_ENCHANTED);
+                    this.tableInventory.markDirty();
+                    this.xpSeed = playerIn.getXPSeed();
+                    this.onCraftMatrixChanged(this.tableInventory);
+                    this.worldPointer.playSound((EntityPlayer)null, this.position, SoundEvents.BLOCK_ENCHANTMENT_TABLE_USE, SoundCategory.BLOCKS, 1.0F, this.worldPointer.rand.nextFloat() * 0.1F + 0.9F);
                 }
             }
 
@@ -311,114 +378,118 @@
         }
     }
 
-    private List<EnchantmentData> func_178148_a(ItemStack p_178148_1_, int p_178148_2_, int p_178148_3_)
+    private List<EnchantmentData> getEnchantmentList(ItemStack stack, int p_178148_2_, int p_178148_3_)
     {
-        this.field_75169_l.setSeed((long)(this.field_178149_f + p_178148_2_));
-        List<EnchantmentData> list = EnchantmentHelper.func_77513_b(this.field_75169_l, p_178148_1_, p_178148_3_, false);
+        this.rand.setSeed((long)(this.xpSeed + p_178148_2_));
+        List<EnchantmentData> list = EnchantmentHelper.buildEnchantmentList(this.rand, stack, p_178148_3_, false);
 
-        if (p_178148_1_.func_77973_b() == Items.field_151122_aG && list.size() > 1)
+        if (stack.getItem() == Items.BOOK && list.size() > 1)
         {
-            list.remove(this.field_75169_l.nextInt(list.size()));
+            list.remove(this.rand.nextInt(list.size()));
         }
 
         return list;
     }
 
     @SideOnly(Side.CLIENT)
-    public int func_178147_e()
+    public int getLapisAmount()
     {
-        ItemStack itemstack = this.field_75168_e.func_70301_a(1);
-        return itemstack.func_190926_b() ? 0 : itemstack.func_190916_E();
+        ItemStack itemstack = this.tableInventory.getStackInSlot(1);
+        return itemstack.isEmpty() ? 0 : itemstack.getCount();
     }
 
-    public void func_75134_a(EntityPlayer p_75134_1_)
+    public void onContainerClosed(EntityPlayer playerIn)
     {
-        super.func_75134_a(p_75134_1_);
-
-        if (!this.field_75172_h.field_72995_K)
+        super.onContainerClosed(playerIn);
+        // CraftBukkit Start - If an enchantable was opened from a null location, set the world to the player's world, preventing a crash
+        if (this.worldPointer == null) {
+            this.worldPointer = playerIn.getEntityWorld();
+        }
+        // CraftBukkit end
+        if (!this.worldPointer.isRemote)
         {
-            for (int i = 0; i < this.field_75168_e.func_70302_i_(); ++i)
+            for (int i = 0; i < this.tableInventory.getSizeInventory(); ++i)
             {
-                ItemStack itemstack = this.field_75168_e.func_70304_b(i);
+                ItemStack itemstack = this.tableInventory.removeStackFromSlot(i);
 
-                if (!itemstack.func_190926_b())
+                if (!itemstack.isEmpty())
                 {
-                    p_75134_1_.func_71019_a(itemstack, false);
+                    playerIn.dropItem(itemstack, false);
                 }
             }
         }
     }
 
-    public boolean func_75145_c(EntityPlayer p_75145_1_)
+    public boolean canInteractWith(EntityPlayer playerIn)
     {
-        return this.field_75172_h.func_180495_p(this.field_178150_j).func_177230_c() != Blocks.field_150381_bn ? false : p_75145_1_.func_70092_e((double)this.field_178150_j.func_177958_n() + 0.5D, (double)this.field_178150_j.func_177956_o() + 0.5D, (double)this.field_178150_j.func_177952_p() + 0.5D) <= 64.0D;
+        return this.worldPointer.getBlockState(this.position).getBlock() != Blocks.ENCHANTING_TABLE ? false : playerIn.getDistanceSq((double)this.position.getX() + 0.5D, (double)this.position.getY() + 0.5D, (double)this.position.getZ() + 0.5D) <= 64.0D;
     }
 
-    public ItemStack func_82846_b(EntityPlayer p_82846_1_, int p_82846_2_)
+    public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
-        ItemStack itemstack = ItemStack.field_190927_a;
-        Slot slot = (Slot)this.field_75151_b.get(p_82846_2_);
+        ItemStack itemstack = ItemStack.EMPTY;
+        Slot slot = (Slot)this.inventorySlots.get(index);
 
-        if (slot != null && slot.func_75216_d())
+        if (slot != null && slot.getHasStack())
         {
-            ItemStack itemstack1 = slot.func_75211_c();
-            itemstack = itemstack1.func_77946_l();
+            ItemStack itemstack1 = slot.getStack();
+            itemstack = itemstack1.copy();
 
-            if (p_82846_2_ == 0)
+            if (index == 0)
             {
-                if (!this.func_75135_a(itemstack1, 2, 38, true))
+                if (!this.mergeItemStack(itemstack1, 2, 38, true))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
             }
-            else if (p_82846_2_ == 1)
+            else if (index == 1)
             {
-                if (!this.func_75135_a(itemstack1, 2, 38, true))
+                if (!this.mergeItemStack(itemstack1, 2, 38, true))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
             }
-            else if (itemstack1.func_77973_b() == Items.field_151100_aR && EnumDyeColor.func_176766_a(itemstack1.func_77960_j()) == EnumDyeColor.BLUE)
+            else if (itemstack1.getItem() == Items.DYE && EnumDyeColor.byDyeDamage(itemstack1.getMetadata()) == EnumDyeColor.BLUE)
             {
-                if (!this.func_75135_a(itemstack1, 1, 2, true))
+                if (!this.mergeItemStack(itemstack1, 1, 2, true))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
             }
             else
             {
-                if (((Slot)this.field_75151_b.get(0)).func_75216_d() || !((Slot)this.field_75151_b.get(0)).func_75214_a(itemstack1))
+                if (((Slot)this.inventorySlots.get(0)).getHasStack() || !((Slot)this.inventorySlots.get(0)).isItemValid(itemstack1))
                 {
-                    return ItemStack.field_190927_a;
+                    return ItemStack.EMPTY;
                 }
 
-                if (itemstack1.func_77942_o() && itemstack1.func_190916_E() == 1)
+                if (itemstack1.hasTagCompound() && itemstack1.getCount() == 1)
                 {
-                    ((Slot)this.field_75151_b.get(0)).func_75215_d(itemstack1.func_77946_l());
-                    itemstack1.func_190920_e(0);
+                    ((Slot)this.inventorySlots.get(0)).putStack(itemstack1.copy());
+                    itemstack1.setCount(0);
                 }
-                else if (!itemstack1.func_190926_b())
+                else if (!itemstack1.isEmpty())
                 {
-                    ((Slot)this.field_75151_b.get(0)).func_75215_d(new ItemStack(itemstack1.func_77973_b(), 1, itemstack1.func_77960_j()));
-                    itemstack1.func_190918_g(1);
+                    ((Slot)this.inventorySlots.get(0)).putStack(new ItemStack(itemstack1.getItem(), 1, itemstack1.getMetadata()));
+                    itemstack1.shrink(1);
                 }
             }
 
-            if (itemstack1.func_190926_b())
+            if (itemstack1.isEmpty())
             {
-                slot.func_75215_d(ItemStack.field_190927_a);
+                slot.putStack(ItemStack.EMPTY);
             }
             else
             {
-                slot.func_75218_e();
+                slot.onSlotChanged();
             }
 
-            if (itemstack1.func_190916_E() == itemstack.func_190916_E())
+            if (itemstack1.getCount() == itemstack.getCount())
             {
-                return ItemStack.field_190927_a;
+                return ItemStack.EMPTY;
             }
 
-            slot.func_190901_a(p_82846_1_, itemstack1);
+            slot.onTake(playerIn, itemstack1);
         }
 
         return itemstack;
