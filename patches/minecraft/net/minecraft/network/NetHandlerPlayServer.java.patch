--- ../src-base/minecraft/net/minecraft/network/NetHandlerPlayServer.java
+++ ../src-work/minecraft/net/minecraft/network/NetHandlerPlayServer.java
@@ -8,8 +8,12 @@
 import io.netty.util.concurrent.GenericFutureListener;
 import java.io.IOException;
 import java.util.Collections;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
+import java.util.concurrent.ExecutionException;
+import java.util.concurrent.atomic.AtomicIntegerFieldUpdater;
+
 import net.minecraft.block.BlockCommandBlock;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
@@ -17,6 +21,7 @@
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.crash.ICrashReportDetail;
 import net.minecraft.entity.Entity;
+import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.IJumpingMount;
 import net.minecraft.entity.MoverType;
 import net.minecraft.entity.item.EntityBoat;
@@ -31,17 +36,10 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.init.Items;
 import net.minecraft.init.MobEffects;
-import net.minecraft.inventory.Container;
-import net.minecraft.inventory.ContainerBeacon;
-import net.minecraft.inventory.ContainerMerchant;
-import net.minecraft.inventory.ContainerRepair;
-import net.minecraft.inventory.EntityEquipmentSlot;
-import net.minecraft.inventory.IInventory;
-import net.minecraft.inventory.Slot;
-import net.minecraft.item.ItemElytra;
+import net.minecraft.inventory.*;
+import net.minecraft.item.*;
 import net.minecraft.item.ItemStack;
-import net.minecraft.item.ItemWritableBook;
-import net.minecraft.item.ItemWrittenBook;
+import net.minecraft.nbt.NBTBase;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.nbt.NBTTagString;
@@ -73,17 +71,7 @@
 import net.minecraft.network.play.client.CPacketUpdateSign;
 import net.minecraft.network.play.client.CPacketUseEntity;
 import net.minecraft.network.play.client.CPacketVehicleMove;
-import net.minecraft.network.play.server.SPacketBlockChange;
-import net.minecraft.network.play.server.SPacketChat;
-import net.minecraft.network.play.server.SPacketConfirmTransaction;
-import net.minecraft.network.play.server.SPacketDisconnect;
-import net.minecraft.network.play.server.SPacketHeldItemChange;
-import net.minecraft.network.play.server.SPacketKeepAlive;
-import net.minecraft.network.play.server.SPacketMoveVehicle;
-import net.minecraft.network.play.server.SPacketPlayerPosLook;
-import net.minecraft.network.play.server.SPacketRespawn;
-import net.minecraft.network.play.server.SPacketSetSlot;
-import net.minecraft.network.play.server.SPacketTabComplete;
+import net.minecraft.network.play.server.*;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.stats.AchievementList;
 import net.minecraft.tileentity.CommandBlockBaseLogic;
@@ -102,6 +90,7 @@
 import net.minecraft.util.Rotation;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TextComponentString;
@@ -109,10 +98,37 @@
 import net.minecraft.util.text.TextFormatting;
 import net.minecraft.world.GameType;
 import net.minecraft.world.WorldServer;
+import net.minecraftforge.common.ForgeHooks;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.block.CraftSign;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftInventory;
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
+import org.bukkit.craftbukkit.util.LazyPlayerSet;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Event;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.SignChangeEvent;
+import org.bukkit.event.inventory.*;
+import org.bukkit.event.inventory.ClickType;
+import org.bukkit.event.player.*;
+import org.bukkit.inventory.*;
+import org.bukkit.util.Vector;
+import net.minecraft.network.*;
 
+import static org.bukkit.event.inventory.InventoryAction.*;
+
 public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable
 {
     private static final Logger field_147370_c = LogManager.getLogger();
@@ -148,6 +164,11 @@
     private int field_184346_E;
     private int field_184347_F;
     private int field_184348_G;
+    private boolean processedDisconnect; // CraftBukkit - Added
+    private volatile int chatThrottle = 10;
+    // CraftBukkit start - multithreaded fields
+    private static final AtomicIntegerFieldUpdater chatSpamField = AtomicIntegerFieldUpdater.newUpdater(net.minecraft.network.NetHandlerPlayServer.class, "chatThrottle");
+    // CraftBukkit end
 
     public NetHandlerPlayServer(MinecraftServer p_i1530_1_, NetworkManager p_i1530_2_, EntityPlayerMP p_i1530_3_)
     {
@@ -156,14 +177,40 @@
         p_i1530_2_.func_150719_a(this);
         this.field_147369_b = p_i1530_3_;
         p_i1530_3_.field_71135_a = this;
+        // CraftBukkit start - add fields and methods
+        this.server = p_i1530_1_.server;
     }
 
+    private final org.bukkit.craftbukkit.CraftServer server;
+    private int lastTick = MinecraftServer.currentTick;
+    private int allowedPlayerTicks = 1;
+    private int lastDropTick = MinecraftServer.currentTick;
+    private int lastBookTick  = MinecraftServer.currentTick;
+    private int dropCount = 0;
+    private static final int SURVIVAL_PLACE_DISTANCE_SQUARED = 6 * 6;
+    private static final int CREATIVE_PLACE_DISTANCE_SQUARED = 7 * 7;
+
+    // Get position of last block hit for BlockDamageLevel.STOPPED
+    private double lastPosX = Double.MAX_VALUE;
+    private double lastPosY = Double.MAX_VALUE;
+    private double lastPosZ = Double.MAX_VALUE;
+    private float lastPitch = Float.MAX_VALUE;
+    private float lastYaw = Float.MAX_VALUE;
+    private boolean justTeleported = false;
+
+    public CraftPlayer getPlayer() {
+        return (this.field_147369_b == null) ? null : (CraftPlayer) this.field_147369_b.getBukkitEntity();
+    }
+    private final static HashSet<Integer> invalidItems = new HashSet<Integer>(java.util.Arrays.asList(8, 9, 10, 11, 26, 34, 36, 43, 51, 55, 59, 62, 63, 64, 68, 71, 74, 75, 83, 90, 92, 93, 94, 104, 105, 115, 117, 118, 119, 125, 127, 132, 140, 141, 142, 144)); // TODO: Check after every update.
+    // CraftBukkit end
+
     public void func_73660_a()
     {
         this.func_184342_d();
         this.field_147369_b.func_71127_g();
         this.field_147369_b.func_70080_a(this.field_184349_l, this.field_184350_m, this.field_184351_n, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
         ++this.field_147368_e;
+        field_147370_c.debug("EntityPlayerMP at NetHandlerLoginServer.java -> update(), with dimension -> {}", new Object[]{field_147369_b.func_71121_q().dimension});
         this.field_184348_G = this.field_184347_F;
 
         if (this.field_184344_B)
@@ -251,7 +298,79 @@
         this.field_184353_p = this.field_147369_b.field_70163_u;
         this.field_184354_q = this.field_147369_b.field_70161_v;
     }
+    // CraftBukkit start - add method
+    public void chat(String s, boolean async) {
+        if (s.isEmpty() || this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.HIDDEN) {
+            return;
+        }
 
+        if (!async && s.startsWith("/")) {
+            this.func_147361_d(s);
+        } else if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.SYSTEM) {
+            // Do nothing, this is coming from a plugin
+        } else {
+            Player player = this.getPlayer();
+            AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(async, player, s, new LazyPlayerSet(field_147367_d));
+            this.server.getPluginManager().callEvent(event);
+
+            if (PlayerChatEvent.getHandlerList().getRegisteredListeners().length != 0) {
+                // Evil plugins still listening to deprecated event
+                final PlayerChatEvent queueEvent = new PlayerChatEvent(player, event.getMessage(), event.getFormat(), event.getRecipients());
+                queueEvent.setCancelled(event.isCancelled());
+                Waitable waitable = new Waitable() {
+                    @Override
+                    protected Object evaluate() {
+                        org.bukkit.Bukkit.getPluginManager().callEvent(queueEvent);
+
+                        if (queueEvent.isCancelled()) {
+                            return null;
+                        }
+
+                        String message = String.format(queueEvent.getFormat(), queueEvent.getPlayer().getDisplayName(), queueEvent.getMessage());
+                        net.minecraft.network.NetHandlerPlayServer.this.field_147367_d.console.sendMessage(message);
+                        if (((LazyPlayerSet) queueEvent.getRecipients()).isLazy()) {
+                            for (Object player : net.minecraft.network.NetHandlerPlayServer.this.field_147367_d.func_184103_al().field_72404_b) {
+                                ((EntityPlayerMP) player).sendMessage(CraftChatMessage.fromString(message));
+                            }
+                        } else {
+                            for (Player player : queueEvent.getRecipients()) {
+                                player.sendMessage(message);
+                            }
+                        }
+                        return null;
+                    }};
+                if (async) {
+                    field_147367_d.processQueue.add(waitable);
+                } else {
+                    waitable.run();
+                }
+                try {
+                    waitable.get();
+                } catch (InterruptedException e) {
+                    Thread.currentThread().interrupt(); // This is proper habit for java. If we aren't handling it, pass it on!
+                } catch (ExecutionException e) {
+                    throw new RuntimeException("Exception processing chat event", e.getCause());
+                }
+            } else {
+                if (event.isCancelled()) {
+                    return;
+                }
+
+                s = String.format(event.getFormat(), event.getPlayer().getDisplayName(), event.getMessage());
+                field_147367_d.console.sendMessage(s);
+                if (((LazyPlayerSet) event.getRecipients()).isLazy()) {
+                    for (Object recipient : field_147367_d.func_184103_al().field_72404_b) {
+                        ((EntityPlayerMP) recipient).sendMessage(CraftChatMessage.fromString(s));
+                    }
+                } else {
+                    for (Player recipient : event.getRecipients()) {
+                        recipient.sendMessage(s);
+                    }
+                }
+            }
+        }
+    }
+    // CraftBukkit end
     public NetworkManager func_147362_b()
     {
         return this.field_147371_a;
@@ -259,6 +378,25 @@
 
     public void func_147360_c(String p_147360_1_)
     {
+        // CraftBukkit start - fire PlayerKickEvent
+        if (this.processedDisconnect) {
+            return;
+        }
+        String leaveMessage = TextFormatting.YELLOW + this.field_147369_b.func_70005_c_() + " left the game.";
+
+        PlayerKickEvent event = new PlayerKickEvent(this.server.getPlayer(this.field_147369_b), p_147360_1_, leaveMessage);
+
+        if (this.server.getServer().func_71278_l()) {
+            this.server.getPluginManager().callEvent(event);
+        }
+
+        if (event.isCancelled()) {
+            // Do not kick the player
+            return;
+        }
+        // Send the possibly modified leave message
+        leaveMessage = event.getReason();
+        // CraftBukkit end
         final TextComponentString textcomponentstring = new TextComponentString(p_147360_1_);
         this.field_147371_a.func_179288_a(new SPacketDisconnect(textcomponentstring), new GenericFutureListener < Future <? super Void >> ()
         {
@@ -362,7 +500,62 @@
                     this.field_147371_a.func_179290_a(new SPacketMoveVehicle(entity));
                     return;
                 }
+                // CraftBukkit start - fire PlayerMoveEvent
+                Player player = this.getPlayer();
+                Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
+                Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
 
+                // If the packet contains movement information then we update the To location with the correct XYZ.
+                to.setX(p_184338_1_.func_187004_a());
+                to.setY(p_184338_1_.func_187002_b());
+                to.setZ(p_184338_1_.func_187003_c());
+
+
+                // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+                to.setYaw(p_184338_1_.func_187006_d());
+                to.setPitch(p_184338_1_.func_187005_e());
+
+                // Prevent 40 event-calls for less than a single pixel of movement >.>
+                double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+                float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+                if ((delta > 1f / 256 || deltaAngle > 10f) && !this.field_147369_b.func_70610_aX()) {
+                    this.lastPosX = to.getX();
+                    this.lastPosY = to.getY();
+                    this.lastPosZ = to.getZ();
+                    this.lastYaw = to.getYaw();
+                    this.lastPitch = to.getPitch();
+
+                    // Skip the first time we do this
+                    if (from.getX() != Double.MAX_VALUE) {
+                        Location oldTo = to.clone();
+                        PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                        this.server.getPluginManager().callEvent(event);
+
+                        // If the event is cancelled we move the player back to their old location.
+                        if (event.isCancelled()) {
+                            teleport(from);
+                            return;
+                        }
+
+                        // If a Plugin has changed the To destination then we teleport the Player
+                        // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                        // We only do this if the Event was not cancelled.
+                        if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                            this.field_147369_b.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.PLUGIN);
+                            return;
+                        }
+
+                        // Check to see if the Players Location has some how changed during the call of the event.
+                        // This can happen due to a plugin teleporting the player instead of using .setTo()
+                        if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported) {
+                            this.justTeleported = false;
+                            return;
+                        }
+                    }
+                }
+                // CraftBukkit end
+
                 this.field_147367_d.func_184103_al().func_72358_d(this.field_147369_b);
                 this.field_147369_b.func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
                 this.field_184345_D = d11 >= -0.03125D && !this.field_147367_d.func_71231_X() && !worldserver.func_72829_c(entity.func_174813_aQ().func_186662_g(0.0625D).func_72321_a(0.0D, -0.55D, 0.0D));
@@ -372,7 +565,53 @@
             }
         }
     }
+    public void teleport(Location dest) {
+        internalTeleport(dest.getX(), dest.getY(), dest.getZ(), dest.getYaw(), dest.getPitch(), Collections.<SPacketPlayerPosLook.EnumFlags>emptySet());
+    }
 
+    private void internalTeleport(double d0, double d1, double d2, float f, float f1, Set<SPacketPlayerPosLook.EnumFlags> set) {
+        // CraftBukkit start
+        if (Float.isNaN(f)) {
+            f = 0;
+        }
+        if (Float.isNaN(f1)) {
+            f1 = 0;
+        }
+
+        this.justTeleported = true;
+        // CraftBukkit end
+        double d3 = set.contains(SPacketPlayerPosLook.EnumFlags.X) ? this.field_147369_b.field_70165_t : 0.0D;
+        double d4 = set.contains(SPacketPlayerPosLook.EnumFlags.Y) ? this.field_147369_b.field_70163_u : 0.0D;
+        double d5 = set.contains(SPacketPlayerPosLook.EnumFlags.Z) ? this.field_147369_b.field_70161_v : 0.0D;
+
+        this.field_184362_y = new Vec3d(d0 + d3, d1 + d4, d2 + d5);
+        float f2 = f;
+        float f3 = f1;
+
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.Y_ROT)) {
+            f2 = f + this.field_147369_b.field_70177_z;
+        }
+
+        if (set.contains(SPacketPlayerPosLook.EnumFlags.X_ROT)) {
+            f3 = f1 + this.field_147369_b.field_70125_A;
+        }
+
+        // CraftBukkit start - update last location
+        this.lastPosX = this.field_184362_y.field_72450_a;
+        this.lastPosY = this.field_184362_y.field_72448_b;
+        this.lastPosZ = this.field_184362_y.field_72449_c;
+        this.lastYaw = f2;
+        this.lastPitch = f3;
+        // CraftBukkit end
+
+        if (++this.field_184363_z == Integer.MAX_VALUE) {
+            this.field_184363_z = 0;
+        }
+
+        this.field_184343_A = this.field_147368_e;
+        this.field_147369_b.func_70080_a(this.field_184362_y.field_72450_a, this.field_184362_y.field_72448_b, this.field_184362_y.field_72449_c, f2, f3);
+        this.field_147369_b.field_71135_a.func_147359_a(new SPacketPlayerPosLook(d0, d1, d2, f, f1, set, this.field_184363_z));
+    }
     public void func_184339_a(CPacketConfirmTeleport p_184339_1_)
     {
         PacketThreadUtil.func_180031_a(p_184339_1_, this, this.field_147369_b.func_71121_q());
@@ -403,17 +642,21 @@
         }
         else
         {
+            //取得玩家的世界
             WorldServer worldserver = this.field_147367_d.func_71218_a(this.field_147369_b.field_71093_bK);
-
+            //如果玩家没有打死末影龙
             if (!this.field_147369_b.field_71136_j)
             {
+                //如果玩家累计收到的网络包 = 0
                 if (this.field_147368_e == 0)
                 {
+                    //记录下玩家当前的位置
                     this.func_184342_d();
                 }
 
                 if (this.field_184362_y != null)
                 {
+                    //如果有目标位置，且更新时间大于1s，则将我们的位置设定到目标
                     if (this.field_147368_e - this.field_184343_A > 20)
                     {
                         this.field_184343_A = this.field_147368_e;
@@ -431,24 +674,36 @@
                     }
                     else
                     {
-                        double d0 = this.field_147369_b.field_70165_t;
-                        double d1 = this.field_147369_b.field_70163_u;
-                        double d2 = this.field_147369_b.field_70161_v;
+                        // CraftBukkit - Make sure the move is valid but then reset it for plugins to modify
+                        double prevX = field_147369_b.field_70165_t;
+                        double prevY = field_147369_b.field_70163_u;
+                        double prevZ = field_147369_b.field_70161_v;
+                        float prevYaw = field_147369_b.field_70177_z;
+                        float prevPitch = field_147369_b.field_70125_A;
+                        // CraftBukkit end
+                        double currentX = this.field_147369_b.field_70165_t;
+                        double currentY = this.field_147369_b.field_70163_u;
+                        double currentZ = this.field_147369_b.field_70161_v;
+                        //实体的当前三坐标
                         double d3 = this.field_147369_b.field_70163_u;
-                        double d4 = p_147347_1_.func_186997_a(this.field_147369_b.field_70165_t);
-                        double d5 = p_147347_1_.func_186996_b(this.field_147369_b.field_70163_u);
-                        double d6 = p_147347_1_.func_187000_c(this.field_147369_b.field_70161_v);
-                        float f = p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z);
-                        float f1 = p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A);
-                        double d7 = d4 - this.field_184349_l;
-                        double d8 = d5 - this.field_184350_m;
-                        double d9 = d6 - this.field_184351_n;
-                        double d10 = this.field_147369_b.field_70159_w * this.field_147369_b.field_70159_w + this.field_147369_b.field_70181_x * this.field_147369_b.field_70181_x + this.field_147369_b.field_70179_y * this.field_147369_b.field_70179_y;
-                        double d11 = d7 * d7 + d8 * d8 + d9 * d9;
-
+                        double packetInX = p_147347_1_.func_186997_a(this.field_147369_b.field_70165_t);
+                        double packetInY = p_147347_1_.func_186996_b(this.field_147369_b.field_70163_u);
+                        double packetInZ = p_147347_1_.func_187000_c(this.field_147369_b.field_70161_v);
+                        //解包收到的实体坐标
+                        float packetInYaw = p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z);
+                        float packetInPitch = p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A);
+                        //解包收到的实体俯仰横滚角度
+                        double delta_CorrectAndInputX = packetInX - this.field_184349_l;
+                        double delta_CorrectAndInputY = packetInY - this.field_184350_m;
+                        double delta_CorrectAndInputZ = packetInZ - this.field_184351_n;
+                        //收到的位置和记录的上一次的位置做差
+                        double moveDistance_2 = this.field_147369_b.field_70159_w * this.field_147369_b.field_70159_w + this.field_147369_b.field_70181_x * this.field_147369_b.field_70181_x + this.field_147369_b.field_70179_y * this.field_147369_b.field_70179_y;
+                        //自身当前的速度向量求模（平方的）
+                        double move_Distance2_Correct = delta_CorrectAndInputX * delta_CorrectAndInputX + delta_CorrectAndInputY * delta_CorrectAndInputY + delta_CorrectAndInputZ * delta_CorrectAndInputZ;
+                        //求出距上一次位置的距离
                         if (this.field_147369_b.func_70608_bn())
                         {
-                            if (d11 > 1.0D)
+                            if (move_Distance2_Correct > 1.0D)
                             {
                                 this.func_147364_a(this.field_147369_b.field_70165_t, this.field_147369_b.field_70163_u, this.field_147369_b.field_70161_v, p_147347_1_.func_186999_a(this.field_147369_b.field_70177_z), p_147347_1_.func_186998_b(this.field_147369_b.field_70125_A));
                             }
@@ -456,59 +711,68 @@
                         else
                         {
                             ++this.field_184347_F;
-                            int i = this.field_184347_F - this.field_184348_G;
+                            int movePacketRecieveCount = this.field_184347_F - this.field_184348_G;
 
-                            if (i > 5)
+                            if (movePacketRecieveCount > 5)
                             {
-                                field_147370_c.debug("{} is sending move packets too frequently ({} packets since last tick)", new Object[] {this.field_147369_b.func_70005_c_(), Integer.valueOf(i)});
-                                i = 1;
+                                field_147370_c.debug("{} is sending move packets too frequently ({} packets since last tick)", new Object[] {this.field_147369_b.func_70005_c_(), Integer.valueOf(movePacketRecieveCount)});
+                                movePacketRecieveCount = 1;
                             }
 
                             if (!this.field_147369_b.func_184850_K() && (!this.field_147369_b.func_71121_q().func_82736_K().func_82766_b("disableElytraMovementCheck") || !this.field_147369_b.func_184613_cA()))
                             {
-                                float f2 = this.field_147369_b.func_184613_cA() ? 300.0F : 100.0F;
-
-                                if (d11 - d10 > (double)(f2 * (float)i) && (!this.field_147367_d.func_71264_H() || !this.field_147367_d.func_71214_G().equals(this.field_147369_b.func_70005_c_())))
+                                float velocityModifier = this.field_147369_b.func_184613_cA() ? 300.0F : 100.0F;
+                                //如果玩家装备了鞘翅飞行，则设置modifier为300，否则是100
+                                //此时将玩家这次发包的移动距离减去实际它的速度应该移动的距离（平方减）
+                                //如果不是腐竹，不是担任游戏，且这个差大于速度倍率 * 收到包数量
+                                //将玩家放回上一次的地点并log提示玩家移动太快了
+                                if (move_Distance2_Correct - moveDistance_2 > (double)(velocityModifier * (float)movePacketRecieveCount) && (!this.field_147367_d.func_71264_H() || !this.field_147367_d.func_71214_G().equals(this.field_147369_b.func_70005_c_())))
                                 {
-                                    field_147370_c.warn("{} moved too quickly! {},{},{}", new Object[] {this.field_147369_b.func_70005_c_(), Double.valueOf(d7), Double.valueOf(d8), Double.valueOf(d9)});
+                                    field_147370_c.warn("{} moved too quickly! {},{},{}", new Object[] {this.field_147369_b.func_70005_c_(), Double.valueOf(delta_CorrectAndInputX), Double.valueOf(delta_CorrectAndInputY), Double.valueOf(delta_CorrectAndInputZ)});
                                     this.func_147364_a(this.field_147369_b.field_70165_t, this.field_147369_b.field_70163_u, this.field_147369_b.field_70161_v, this.field_147369_b.field_70177_z, this.field_147369_b.field_70125_A);
                                     return;
                                 }
                             }
 
                             boolean flag2 = worldserver.func_184144_a(this.field_147369_b, this.field_147369_b.func_174813_aQ().func_186664_h(0.0625D)).isEmpty();
-                            d7 = d4 - this.field_184352_o;
-                            d8 = d5 - this.field_184353_p;
-                            d9 = d6 - this.field_184354_q;
+                            delta_CorrectAndInputX = packetInX - this.field_184352_o;
+                            delta_CorrectAndInputY = packetInY - this.field_184353_p;
+                            delta_CorrectAndInputZ = packetInZ - this.field_184354_q;
 
-                            if (this.field_147369_b.field_70122_E && !p_147347_1_.func_149465_i() && d8 > 0.0D)
+                            if (this.field_147369_b.field_70122_E && !p_147347_1_.func_149465_i() && delta_CorrectAndInputY > 0.0D)
                             {
+                                //如果玩家在地面上，且发的包不是地面上，并且发包的坐标y差大于0，判定为玩家跳起
                                 this.field_147369_b.func_70664_aZ();
                             }
 
-                            this.field_147369_b.func_70091_d(MoverType.PLAYER, d7, d8, d9);
+                            this.field_147369_b.func_70091_d(MoverType.PLAYER, delta_CorrectAndInputX, delta_CorrectAndInputY, delta_CorrectAndInputZ);
                             this.field_147369_b.field_70122_E = p_147347_1_.func_149465_i();
-                            double d12 = d8;
-                            d7 = d4 - this.field_147369_b.field_70165_t;
-                            d8 = d5 - this.field_147369_b.field_70163_u;
+                            double d12 = delta_CorrectAndInputY;
+                            delta_CorrectAndInputX = packetInX - this.field_147369_b.field_70165_t;
+                            delta_CorrectAndInputY = packetInY - this.field_147369_b.field_70163_u;
 
-                            if (d8 > -0.5D || d8 < 0.5D)
+                            if (delta_CorrectAndInputY > -0.5D || delta_CorrectAndInputY < 0.5D)
                             {
-                                d8 = 0.0D;
+                                //如果这一个包收到的y坐标差异大于0.5则判定为不合法，重置0
+                                delta_CorrectAndInputY = 0.0D;
                             }
 
-                            d9 = d6 - this.field_147369_b.field_70161_v;
-                            d11 = d7 * d7 + d8 * d8 + d9 * d9;
+                            delta_CorrectAndInputZ = packetInZ - this.field_147369_b.field_70161_v;
+                            move_Distance2_Correct = delta_CorrectAndInputX * delta_CorrectAndInputX + delta_CorrectAndInputY * delta_CorrectAndInputY + delta_CorrectAndInputZ * delta_CorrectAndInputZ;
                             boolean flag = false;
 
-                            if (!this.field_147369_b.func_184850_K() && d11 > 0.0625D && !this.field_147369_b.func_70608_bn() && !this.field_147369_b.field_71134_c.func_73083_d() && this.field_147369_b.field_71134_c.func_73081_b() != GameType.SPECTATOR)
+                            if (!this.field_147369_b.func_184850_K() && move_Distance2_Correct > 0.0625D && !this.field_147369_b.func_70608_bn() && !this.field_147369_b.field_71134_c.func_73083_d() && this.field_147369_b.field_71134_c.func_73081_b() != GameType.SPECTATOR)
                             {
+                                //传送维度时不是无敌，并且输入的位置和上次位置的距离平方大于0.0625(即这一刻的变化不超过0.25),玩家不睡觉，且是生存
+                                //提示玩家移动错误
+                                //正确的移动速度为 4.317m/s
+                                //
                                 flag = true;
                                 field_147370_c.warn("{} moved wrongly!", new Object[] {this.field_147369_b.func_70005_c_()});
                             }
 
-                            this.field_147369_b.func_70080_a(d4, d5, d6, f, f1);
-                            this.field_147369_b.func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
+                            this.field_147369_b.func_70080_a(packetInX, packetInY, packetInZ, packetInYaw, packetInPitch);
+                            this.field_147369_b.func_71000_j(this.field_147369_b.field_70165_t - currentX, this.field_147369_b.field_70163_u - currentY, this.field_147369_b.field_70161_v - currentZ);
 
                             if (!this.field_147369_b.field_70145_X && !this.field_147369_b.func_70608_bn())
                             {
@@ -516,11 +780,73 @@
 
                                 if (flag2 && (flag || !flag1))
                                 {
-                                    this.func_147364_a(d0, d1, d2, f, f1);
+                                    this.func_147364_a(currentX, currentY, currentZ, packetInYaw, packetInPitch);
                                     return;
                                 }
                             }
+                            // CraftBukkit start - fire PlayerMoveEvent
+                            // Rest to old location first
+                            this.field_147369_b.func_70080_a(prevX, prevY, prevZ, prevYaw, prevPitch);
 
+                            Player player = this.getPlayer();
+                            Location from = new Location(player.getWorld(), lastPosX, lastPosY, lastPosZ, lastYaw, lastPitch); // Get the Players previous Event location.
+                            Location to = player.getLocation().clone(); // Start off the To location as the Players current location.
+
+                            // If the packet contains movement information then we update the To location with the correct XYZ.
+                            if (p_147347_1_.field_149480_h) {
+                                to.setX(p_147347_1_.field_149479_a);
+                                to.setY(p_147347_1_.field_149477_b);
+                                to.setZ(p_147347_1_.field_149478_c);
+                            }
+
+                            // If the packet contains look information then we update the To location with the correct Yaw & Pitch.
+                            if (p_147347_1_.field_149481_i) {
+                                to.setYaw(p_147347_1_.field_149476_e);
+                                to.setPitch(p_147347_1_.field_149473_f);
+                            }
+
+                            // Prevent 40 event-calls for less than a single pixel of movement >.>
+                            double delta = Math.pow(this.lastPosX - to.getX(), 2) + Math.pow(this.lastPosY - to.getY(), 2) + Math.pow(this.lastPosZ - to.getZ(), 2);
+                            float deltaAngle = Math.abs(this.lastYaw - to.getYaw()) + Math.abs(this.lastPitch - to.getPitch());
+
+                            if ((delta > 1f / 256 || deltaAngle > 10f) && !this.field_147369_b.func_70610_aX()) {
+                                this.lastPosX = to.getX();
+                                this.lastPosY = to.getY();
+                                this.lastPosZ = to.getZ();
+                                this.lastYaw = to.getYaw();
+                                this.lastPitch = to.getPitch();
+
+                                // Skip the first time we do this
+                                if (from.getX() != Double.MAX_VALUE) {
+                                    Location oldTo = to.clone();
+                                    PlayerMoveEvent event = new PlayerMoveEvent(player, from, to);
+                                    this.server.getPluginManager().callEvent(event);
+
+                                    // If the event is cancelled we move the player back to their old location.
+                                    if (event.isCancelled()) {
+                                        teleport(from);
+                                        return;
+                                    }
+
+                                    // If a Plugin has changed the To destination then we teleport the Player
+                                    // there to avoid any 'Moved wrongly' or 'Moved too quickly' errors.
+                                    // We only do this if the Event was not cancelled.
+                                    if (!oldTo.equals(event.getTo()) && !event.isCancelled()) {
+                                        this.field_147369_b.getBukkitEntity().teleport(event.getTo(), PlayerTeleportEvent.TeleportCause.PLUGIN);
+                                        return;
+                                    }
+
+                                    // Check to see if the Players Location has some how changed during the call of the event.
+                                    // This can happen due to a plugin teleporting the player instead of using .setTo()
+                                    if (!from.equals(this.getPlayer().getLocation()) && this.justTeleported) {
+                                        this.justTeleported = false;
+                                        return;
+                                    }
+                                }
+                            }
+                            this.field_147369_b.func_70080_a(packetInX, packetInY, packetInZ, packetInYaw, packetInPitch); // Copied from above
+                            // CraftBukkit end
+
                             this.field_184344_B = d12 >= -0.03125D;
                             this.field_184344_B &= !this.field_147367_d.func_71231_X() && !this.field_147369_b.field_71075_bZ.field_75101_c;
                             this.field_184344_B &= !this.field_147369_b.func_70644_a(MobEffects.field_188424_y) && !this.field_147369_b.func_184613_cA() && !worldserver.func_72829_c(this.field_147369_b.func_174813_aQ().func_186662_g(0.0625D).func_72321_a(0.0D, -0.55D, 0.0D));
@@ -585,7 +911,15 @@
                 if (!this.field_147369_b.func_175149_v())
                 {
                     ItemStack itemstack = this.field_147369_b.func_184586_b(EnumHand.OFF_HAND);
-                    this.field_147369_b.func_184611_a(EnumHand.OFF_HAND, this.field_147369_b.func_184586_b(EnumHand.MAIN_HAND));
+                    // CraftBukkit start
+                    PlayerSwapHandItemsEvent swapItemsEvent = new PlayerSwapHandItemsEvent(getPlayer(), CraftItemStack.asBukkitCopy(itemstack), CraftItemStack.asBukkitCopy(this.field_147369_b.func_184586_b(EnumHand.MAIN_HAND)));
+                    this.server.getPluginManager().callEvent(swapItemsEvent);
+                    if (swapItemsEvent.isCancelled()) {
+                        return;
+                    }
+                    itemstack = CraftItemStack.asNMSCopy(swapItemsEvent.getMainHandItem());
+                    this.field_147369_b.func_184611_a(EnumHand.OFF_HAND, CraftItemStack.asNMSCopy(swapItemsEvent.getOffHandItem()));
+                    // CraftBukkit end
                     this.field_147369_b.func_184611_a(EnumHand.MAIN_HAND, itemstack);
                 }
 
@@ -594,6 +928,21 @@
 
                 if (!this.field_147369_b.func_175149_v())
                 {
+                    // limit how quickly items can be dropped
+                    // If the ticks aren't the same then the count starts from 0 and we update the lastDropTick.
+                    if (this.lastDropTick != MinecraftServer.currentTick) {
+                        this.dropCount = 0;
+                        this.lastDropTick = MinecraftServer.currentTick;
+                    } else {
+                        // Else we increment the drop count and check the amount.
+                        this.dropCount++;
+                        if (this.dropCount >= 20) {
+                            field_147370_c.warn(this.field_147369_b.func_70005_c_() + " dropped their items too quickly!");
+                            this.func_147360_c("You dropped your items too quickly (Hacking?)");
+                            return;
+                        }
+                    }
+                    // CraftBukkit end
                     this.field_147369_b.func_71040_bB(false);
                 }
 
@@ -617,7 +966,10 @@
                 double d2 = this.field_147369_b.field_70161_v - ((double)blockpos.func_177952_p() + 0.5D);
                 double d3 = d0 * d0 + d1 * d1 + d2 * d2;
 
-                if (d3 > 36.0D)
+                double dist = field_147369_b.field_71134_c.getBlockReachDistance() + 1;
+                dist *= dist;
+
+                if (d3 > dist)
                 {
                     return;
                 }
@@ -635,7 +987,15 @@
                         }
                         else
                         {
+                            // CraftBukkit start - fire PlayerInteractEvent
+                            CraftEventFactory.callPlayerInteractEvent(this.field_147369_b, Action.LEFT_CLICK_BLOCK, blockpos, p_147345_1_.func_179714_b(), this.field_147369_b.field_71071_by.func_70448_g(), EnumHand.MAIN_HAND);
                             this.field_147369_b.field_71135_a.func_147359_a(new SPacketBlockChange(worldserver, blockpos));
+                            // Update any tile entity data for this block
+                            TileEntity tileentity = worldserver.func_175625_s(blockpos);
+                            if (tileentity != null) {
+                                this.field_147369_b.field_71135_a.func_147359_a(tileentity.func_189518_D_());
+                            }
+                            // CraftBukkit end
                         }
                     }
                     else
@@ -675,7 +1035,9 @@
 
         if (blockpos.func_177956_o() < this.field_147367_d.func_71207_Z() - 1 || enumfacing != EnumFacing.UP && blockpos.func_177956_o() < this.field_147367_d.func_71207_Z())
         {
-            if (this.field_184362_y == null && this.field_147369_b.func_70092_e((double)blockpos.func_177958_n() + 0.5D, (double)blockpos.func_177956_o() + 0.5D, (double)blockpos.func_177952_p() + 0.5D) < 64.0D && !this.field_147367_d.func_175579_a(worldserver, blockpos, this.field_147369_b) && worldserver.func_175723_af().func_177746_a(blockpos))
+            double dist = field_147369_b.field_71134_c.getBlockReachDistance() + 3;
+            dist *= dist;
+            if (this.field_184362_y == null && this.field_147369_b.func_70092_e((double)blockpos.func_177958_n() + 0.5D, (double)blockpos.func_177956_o() + 0.5D, (double)blockpos.func_177952_p() + 0.5D) < dist && !this.field_147367_d.func_175579_a(worldserver, blockpos, this.field_147369_b) && worldserver.func_175723_af().func_177746_a(blockpos))
             {
                 this.field_147369_b.field_71134_c.func_187251_a(this.field_147369_b, worldserver, itemstack, enumhand, blockpos, enumfacing, p_184337_1_.func_187026_d(), p_184337_1_.func_187025_e(), p_184337_1_.func_187020_f());
             }
@@ -701,7 +1063,46 @@
 
         if (!itemstack.func_190926_b())
         {
-            this.field_147369_b.field_71134_c.func_187250_a(this.field_147369_b, worldserver, itemstack, enumhand);
+            // CraftBukkit start
+            // Raytrace to look for 'rogue armswings'
+            float f1 = this.field_147369_b.field_70125_A;
+            float f2 = this.field_147369_b.field_70177_z;
+            double d0 = this.field_147369_b.field_70165_t;
+            double d1 = this.field_147369_b.field_70163_u + (double) this.field_147369_b.func_70047_e();
+            double d2 = this.field_147369_b.field_70161_v;
+            Vec3d vec3d = new Vec3d(d0, d1, d2);
+
+            float f3 = MathHelper.func_76134_b(-f2 * 0.017453292F - 3.1415927F);
+            float f4 = MathHelper.func_76126_a(-f2 * 0.017453292F - 3.1415927F);
+            float f5 = -MathHelper.func_76134_b(-f1 * 0.017453292F);
+            float f6 = MathHelper.func_76126_a(-f1 * 0.017453292F);
+            float f7 = f4 * f5;
+            float f8 = f3 * f5;
+            double d3 = field_147369_b.field_71134_c.func_73081_b()== GameType.CREATIVE ? 5.0D : 4.5D;
+            Vec3d vec3d1 = vec3d.func_72441_c((double) f7 * d3, (double) f6 * d3, (double) f8 * d3);
+            RayTraceResult movingobjectposition = this.field_147369_b.field_70170_p.func_72901_a(vec3d, vec3d1, false);
+
+            boolean cancelled;
+            if (movingobjectposition == null || movingobjectposition.field_72313_a != RayTraceResult.Type.BLOCK) {
+                org.bukkit.event.player.PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(this.field_147369_b, Action.RIGHT_CLICK_AIR, itemstack, enumhand);
+                cancelled = event.useItemInHand() == Event.Result.DENY;
+            } else {
+                if (field_147369_b.field_71134_c.firedInteract) {
+                    field_147369_b.field_71134_c.firedInteract = false;
+                    cancelled = field_147369_b.field_71134_c.interactResult;
+                } else {
+                    org.bukkit.event.player.PlayerInteractEvent event = CraftEventFactory.callPlayerInteractEvent(field_147369_b, Action.RIGHT_CLICK_BLOCK, movingobjectposition.func_178782_a(), movingobjectposition.field_178784_b, itemstack, true, enumhand);
+                    cancelled = event.useItemInHand() == Event.Result.DENY;
+                }
+            }
+
+            if (cancelled) {
+                ((Player)this.field_147369_b.getBukkitEntity()).updateInventory(); // SPIGOT-2524
+            } else {
+                this.field_147369_b.field_71134_c.func_187250_a(this.field_147369_b, worldserver, itemstack, enumhand);
+            }
+            // CraftBukkit end
+            //this.playerEntity.interactionManager.processRightClick(this.playerEntity, worldserver, itemstack, enumhand);
         }
     }
 
@@ -813,7 +1214,14 @@
                 return;
             }
         }
-
+        // CraftBukkit start
+        if (p_147359_1_ == null) {
+            return;
+        } else if (p_147359_1_ instanceof SPacketSpawnPosition) {
+            SPacketSpawnPosition packet6 = (SPacketSpawnPosition) p_147359_1_;
+            this.field_147369_b.compassTarget = new Location(this.getPlayer().getWorld(), packet6.func_179800_a().func_177958_n(), packet6.func_179800_a().func_177956_o(), packet6.func_179800_a().func_177952_p());
+        }
+        // CraftBukkit end
         try
         {
             this.field_147371_a.func_179290_a(p_147359_1_);
@@ -839,6 +1247,14 @@
 
         if (p_147355_1_.func_149614_c() >= 0 && p_147355_1_.func_149614_c() < InventoryPlayer.func_70451_h())
         {
+            PlayerItemHeldEvent event = new PlayerItemHeldEvent(this.getPlayer(), this.field_147369_b.field_71071_by.field_70461_c, p_147355_1_.func_149614_c());
+            this.server.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                this.func_147359_a(new SPacketHeldItemChange(this.field_147369_b.field_71071_by.field_70461_c));
+                this.field_147369_b.func_143004_u();
+                return;
+            }
+            // CraftBukkit end
             this.field_147369_b.field_71071_by.field_70461_c = p_147355_1_.func_149614_c();
             this.field_147369_b.func_143004_u();
         }
@@ -850,8 +1266,15 @@
 
     public void func_147354_a(CPacketChatMessage p_147354_1_)
     {
-        PacketThreadUtil.func_180031_a(p_147354_1_, this, this.field_147369_b.func_71121_q());
+        Player player = this.getPlayer();
 
+        PacketThreadUtil.func_180031_a(p_147354_1_, this, this.field_147369_b.func_71121_q());
+        AsyncPlayerChatEvent event = new AsyncPlayerChatEvent(false, player, p_147354_1_.func_149439_c(), new LazyPlayerSet(field_147367_d));
+        this.server.getPluginManager().callEvent(event);
+        if(event.isCancelled())
+        {
+            return;
+        }
         if (this.field_147369_b.func_147096_v() == EntityPlayer.EnumChatVisibility.HIDDEN)
         {
             TextComponentTranslation textcomponenttranslation = new TextComponentTranslation("chat.cannotSend", new Object[0]);
@@ -879,7 +1302,9 @@
             }
             else
             {
-                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", new Object[] {this.field_147369_b.func_145748_c_(), s});
+                ITextComponent itextcomponent = new TextComponentTranslation("chat.type.text", this.field_147369_b.func_145748_c_(), net.minecraftforge.common.ForgeHooks.newChatWithLinks(s));
+                itextcomponent = net.minecraftforge.common.ForgeHooks.onServerChatEvent(this, s, itextcomponent);
+                if (itextcomponent == null) return;
                 this.field_147367_d.func_184103_al().func_148544_a(itextcomponent, false);
             }
 
@@ -894,13 +1319,67 @@
 
     private void func_147361_d(String p_147361_1_)
     {
-        this.field_147367_d.func_71187_D().func_71556_a(this.field_147369_b, p_147361_1_);
+        // CraftBukkit start - whole method
+        this.field_147370_c.info(this.field_147369_b.func_70005_c_() + " issued server command: " + p_147361_1_);
+
+        CraftPlayer player = this.getPlayer();
+
+        PlayerCommandPreprocessEvent event = new PlayerCommandPreprocessEvent(player, p_147361_1_, new LazyPlayerSet(field_147367_d));
+        this.server.getPluginManager().callEvent(event);
+
+        if (event.isCancelled()) {
+            return;
+        }
+
+        try {
+            if (this.server.dispatchCommand(event.getPlayer(), event.getMessage().substring(1))) {
+                return;
+            }
+            else
+            {
+                this.field_147367_d.func_71187_D().func_71556_a(this.field_147369_b, p_147361_1_);
+            }
+        } catch (org.bukkit.command.CommandException ex) {
+            player.sendMessage(org.bukkit.ChatColor.RED + "An internal error occurred while attempting to perform this command");
+            java.util.logging.Logger.getLogger(net.minecraft.network.NetHandlerPlayServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
+            return;
+        }
+        // this.minecraftServer.getCommandHandler().a(this.player, s);
+        // CraftBukkit end
     }
 
     public void func_175087_a(CPacketAnimation p_175087_1_)
     {
         PacketThreadUtil.func_180031_a(p_175087_1_, this, this.field_147369_b.func_71121_q());
         this.field_147369_b.func_143004_u();
+        // CraftBukkit start - Raytrace to look for 'rogue armswings'
+        float f1 = this.field_147369_b.field_70125_A;
+        float f2 = this.field_147369_b.field_70177_z;
+        double d0 = this.field_147369_b.field_70165_t;
+        double d1 = this.field_147369_b.field_70163_u + (double) this.field_147369_b.func_70047_e();
+        double d2 = this.field_147369_b.field_70161_v;
+        Vec3d vec3d = new Vec3d(d0, d1, d2);
+
+        float f3 = MathHelper.func_76134_b(-f2 * 0.017453292F - 3.1415927F);
+        float f4 = MathHelper.func_76126_a(-f2 * 0.017453292F - 3.1415927F);
+        float f5 = -MathHelper.func_76134_b(-f1 * 0.017453292F);
+        float f6 = MathHelper.func_76126_a(-f1 * 0.017453292F);
+        float f7 = f4 * f5;
+        float f8 = f3 * f5;
+        double d3 = field_147369_b.field_71134_c.func_73081_b()== GameType.CREATIVE ? 5.0D : 4.5D;
+        Vec3d vec3d1 = vec3d.func_72441_c((double) f7 * d3, (double) f6 * d3, (double) f8 * d3);
+        RayTraceResult movingobjectposition = this.field_147369_b.field_70170_p.func_72901_a(vec3d, vec3d1, false);
+
+        if (movingobjectposition == null || movingobjectposition.field_72313_a != RayTraceResult.Type.BLOCK) {
+            CraftEventFactory.callPlayerInteractEvent(this.field_147369_b, Action.LEFT_CLICK_AIR, this.field_147369_b.field_71071_by.func_70448_g(), EnumHand.MAIN_HAND);
+        }
+
+        // Arm swing animation
+        PlayerAnimationEvent event = new PlayerAnimationEvent(this.getPlayer());
+        this.server.getPluginManager().callEvent(event);
+
+        if (event.isCancelled()) return;
+        // CraftBukkit end
         this.field_147369_b.func_184609_a(p_175087_1_.func_187018_a());
     }
 
@@ -911,18 +1390,42 @@
 
         switch (p_147357_1_.func_180764_b())
         {
+            //MCPC Revive start
             case START_SNEAKING:
+                PlayerToggleSneakEvent event1 = new PlayerToggleSneakEvent(this.getPlayer(), p_147357_1_.func_180764_b() == CPacketEntityAction.Action.START_SNEAKING);
+                this.server.getPluginManager().callEvent(event1);
+
+                if (event1.isCancelled()) {
+                    return;
+                }
                 this.field_147369_b.func_70095_a(true);
                 break;
             case STOP_SNEAKING:
+                PlayerToggleSneakEvent event2 = new PlayerToggleSneakEvent(this.getPlayer(), p_147357_1_.func_180764_b() == CPacketEntityAction.Action.STOP_SNEAKING);
+                this.server.getPluginManager().callEvent(event2);
+                if (event2.isCancelled()) {
+                    return;
+                }
                 this.field_147369_b.func_70095_a(false);
                 break;
             case START_SPRINTING:
+                PlayerToggleSprintEvent event3 = new PlayerToggleSprintEvent(this.getPlayer(), p_147357_1_.func_180764_b() == CPacketEntityAction.Action.START_SPRINTING);
+                this.server.getPluginManager().callEvent(event3);
+                if (event3.isCancelled()) {
+                    return;
+                }
                 this.field_147369_b.func_70031_b(true);
                 break;
             case STOP_SPRINTING:
+                PlayerToggleSprintEvent event4 = new PlayerToggleSprintEvent(this.getPlayer(), p_147357_1_.func_180764_b() == CPacketEntityAction.Action.STOP_SNEAKING);
+                this.server.getPluginManager().callEvent(event4);
+
+                if (event4.isCancelled()) {
+                    return;
+                }
                 this.field_147369_b.func_70031_b(false);
                 break;
+                //MCPCRevive end
             case STOP_SLEEPING:
 
                 if (this.field_147369_b.func_70608_bn())
@@ -1004,6 +1507,37 @@
 
             if (this.field_147369_b.func_70068_e(entity) < d0)
             {
+                ItemStack itemInHand = this.field_147369_b.func_184586_b(p_147340_1_.func_186994_b() == null ? EnumHand.MAIN_HAND : p_147340_1_.func_186994_b()); // CraftBukkit
+
+                if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT
+                        || p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT_AT) {
+                    // CraftBukkit start
+                    boolean triggerLeashUpdate = itemInHand != null && itemInHand.func_77973_b() == Items.field_151058_ca && entity instanceof EntityLiving;
+                    Item origItem = this.field_147369_b.field_71071_by.func_70448_g() == null ? null : this.field_147369_b.field_71071_by.func_70448_g().func_77973_b();
+                    PlayerInteractEntityEvent event;
+                    if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT) {
+                        event = new PlayerInteractEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity(), (p_147340_1_.func_186994_b() == EnumHand.OFF_HAND) ? EquipmentSlot.OFF_HAND : EquipmentSlot.HAND);
+                    } else {
+                        Vec3d target = p_147340_1_.func_179712_b();
+                        event = new PlayerInteractAtEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity(), new Vector(target.field_72450_a, target.field_72448_b, target.field_72449_c), (p_147340_1_.func_186994_b() == EnumHand.OFF_HAND) ? EquipmentSlot.OFF_HAND : EquipmentSlot.HAND);
+                    }
+                    this.server.getPluginManager().callEvent(event);
+
+                    if (triggerLeashUpdate && (event.isCancelled() || this.field_147369_b.field_71071_by.func_70448_g() == null || this.field_147369_b.field_71071_by.func_70448_g().func_77973_b() != Items.field_151058_ca)) {
+                        // Refresh the current leash state
+                        this.func_147359_a(new SPacketEntityAttach(entity, ((EntityLiving) entity).func_110166_bE()));
+                    }
+
+                    if (event.isCancelled() || this.field_147369_b.field_71071_by.func_70448_g() == null || this.field_147369_b.field_71071_by.func_70448_g().func_77973_b() != origItem) {
+                        // Refresh the current entity metadata
+                        this.func_147359_a(new SPacketEntityMetadata(entity.func_145782_y(), entity.field_70180_af, true));
+                    }
+
+                    if (event.isCancelled()) {
+                        return;
+                    }
+                    // CraftBukkit end
+                }
                 if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT)
                 {
                     EnumHand enumhand = p_147340_1_.func_186994_b();
@@ -1012,6 +1546,7 @@
                 else if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.INTERACT_AT)
                 {
                     EnumHand enumhand1 = p_147340_1_.func_186994_b();
+                    if(ForgeHooks.onInteractEntityAtAction(field_147369_b, entity, p_147340_1_.func_179712_b(), enumhand1) != null) return;
                     entity.func_184199_a(this.field_147369_b, p_147340_1_.func_179712_b(), enumhand1);
                 }
                 else if (p_147340_1_.func_149565_c() == CPacketUseEntity.Action.ATTACK)
@@ -1051,7 +1586,7 @@
                         return;
                     }
 
-                    this.field_147369_b = this.field_147367_d.func_184103_al().func_72368_a(this.field_147369_b, 0, false);
+                    this.field_147369_b = this.field_147367_d.func_184103_al().func_72368_a(this.field_147369_b, field_147369_b.field_71093_bK, false);
 
                     if (this.field_147367_d.func_71199_h())
                     {
@@ -1074,7 +1609,6 @@
         PacketThreadUtil.func_180031_a(p_147356_1_, this, this.field_147369_b.func_71121_q());
         this.field_147369_b.func_71128_l();
     }
-
     public void func_147351_a(CPacketClickWindow p_147351_1_)
     {
         PacketThreadUtil.func_180031_a(p_147351_1_, this, this.field_147369_b.func_71121_q());
@@ -1095,10 +1629,315 @@
             }
             else
             {
-                ItemStack itemstack2 = this.field_147369_b.field_71070_bA.func_184996_a(p_147351_1_.func_149544_d(), p_147351_1_.func_149543_e(), p_147351_1_.func_186993_f(), this.field_147369_b);
+                //我们要在这里发送什么事件？
+                //InventoryClickEvent
+                //CraftItemEvent
+                int slot = p_147351_1_.func_149544_d();
+                int keycode = p_147351_1_.func_149543_e();
+                InventoryView BukkitInventoryView = field_147369_b.field_71070_bA.getBukkitView();
+                InventoryType.SlotType BukkitSlotType = CraftInventoryView.getSlotType(BukkitInventoryView,slot);
+                InventoryAction BUKKIT_ACTION = InventoryAction.NOTHING;
+                net.minecraft.inventory.ClickType MCClickType = p_147351_1_.func_186993_f();
+                ClickType BUKKIT_CLICKTYPE = ClickType.UNKNOWN;
+                if(keycode == 0)
+                {
+                    BUKKIT_CLICKTYPE = ClickType.LEFT;
+                }
+                else if(keycode == 1)
+                {
+                    BUKKIT_CLICKTYPE = ClickType.RIGHT;
+                }
+                switch (MCClickType)
+                {
+                    case PICKUP: {
+                        ClickType Press = ClickType.UNKNOWN;
+                        if(keycode == 0)
+                        {
+                            Press = ClickType.LEFT;
+                        }
+                        else if(keycode == 1)
+                        {
+                            Press = ClickType.RIGHT;
+                        }
+                        if(Press == ClickType.LEFT || Press == ClickType.RIGHT )
+                        {
+                            if(slot == -999)
+                            {
+                                BUKKIT_ACTION = Press == ClickType.LEFT ? InventoryAction.DROP_ALL_CURSOR : InventoryAction.DROP_ONE_CURSOR;
+                            }
+                            else
+                            {
+                                if(slot >= 0)
+                                {
+                                    Slot targetSlot = field_147369_b.field_71070_bA.func_75139_a(slot);
+                                    if(targetSlot != null) {
+                                        ItemStack targetItem = field_147369_b.field_71071_by.func_70445_o();// 如果我们点击了物品栏里面的一个存在的位置
+                                        ItemStack cursor = p_147351_1_.func_149546_g();       //这是粘在我们鼠标指针的物品
+                                        if (targetItem.func_190926_b()) {
+                                            if (!cursor.func_190926_b())
+                                                //目标为空
+                                                //此时直接把我们的物品转移
+                                                BUKKIT_ACTION = Press == ClickType.LEFT ? InventoryAction.PLACE_ALL : InventoryAction.PLACE_ONE;
+                                        } else {
+                                            //此时目标处有东西
+                                            //如果目标出的东西能拿出来
+                                            if(targetSlot.func_82869_a(field_147369_b)) {
+                                                //一种情况是，鼠标指针没有粘着东西
+                                                if (cursor.func_190926_b()) {
+                                                    BUKKIT_ACTION = Press == ClickType.LEFT ? PICKUP_ALL : InventoryAction.PICKUP_HALF;
+                                                }
+                                                //另一种情况是，鼠标上有东西
+                                                else
+                                                {
+                                                    //如果是完全一样的东西，能够合并（NBT,META等完全一致，并且可堆叠)
+                                                    if(targetItem.func_77969_a(cursor) && ItemStack.func_77970_a(targetItem,cursor))
+                                                    {
+                                                        //比较手头物品和目标物品的数量，以及最大堆叠数
+                                                        //
+                                                        int targetMaxStack = targetItem.func_77976_d();
+                                                        int cursorMaxStack = cursor.func_77976_d();
+                                                        int remain =  targetMaxStack - targetItem.func_190916_E();
+                                                        int place = Press == ClickType.LEFT ? cursor.func_190916_E() : 1;
+                                                        place = Math.min(place, cursor.func_77976_d() - cursor.func_190916_E());
+                                                        place = Math.min(place, remain);
+                                                        if(place == 1)
+                                                        {
+                                                            //只放一个
+                                                            BUKKIT_ACTION = InventoryAction.PLACE_ONE;
+                                                        }
+                                                        else if(place > 1)
+                                                        {
+                                                            //如果放置数量超过了剩余，放一部分，否则放所有
+                                                            BUKKIT_ACTION = place >= cursor.func_190916_E() ? InventoryAction.PLACE_ALL : InventoryAction.PLACE_SOME;
+                                                        }
+                                                        else if(place < 0)
+                                                        {
+                                                            //出现了溢出时，如果正好目标比鼠标大1，则鼠标从目标取1个，否则取一些
+                                                            BUKKIT_ACTION = place != -1 ? InventoryAction.PICKUP_SOME : InventoryAction.PICKUP_ONE;
+                                                        }
+                                                    }
+                                                    else
+                                                    {
+                                                        BUKKIT_ACTION = InventoryAction.SWAP_WITH_CURSOR;
+                                                    }
+                                                }
+                                            }
 
-                if (ItemStack.func_77989_b(p_147351_1_.func_149546_g(), itemstack2))
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                    };break;
+                    case PICKUP_ALL:
+                    {
+                        //双击鼠标左键使得物品栏所有的同类物品聚集到cursor
+                        //检查物品栏有没有同类物品，有则action为collect_to_cursor
+                        ItemStack cursor = p_147351_1_.func_149546_g();
+                        org.bukkit.Material itemMaterial = org.bukkit.Material.getMaterial(Item.func_150891_b(cursor.func_77973_b()));
+                        if(BukkitInventoryView.getTopInventory().contains(itemMaterial) && BukkitInventoryView.getBottomInventory().contains(itemMaterial))
+                        {
+                            BUKKIT_ACTION = InventoryAction.COLLECT_TO_CURSOR;
+                            BUKKIT_CLICKTYPE = ClickType.DOUBLE_CLICK;
+                        }
+                        break;
+                    }
+                    case SWAP:
+                    {
+                        BUKKIT_CLICKTYPE = ClickType.NUMBER_KEY;
+                        //包括两种可能，一种是在物品栏交换两个物品（指针和目标），一种是将指针的物品转移到另一处
+                        ItemStack cursor = p_147351_1_.func_149546_g();
+                        //另外swap这个动作不存在鼠标左右键点，0-8对应着物品栏列
+                        Slot clicked = field_147369_b.field_71070_bA.func_75139_a(slot);
+                        if(clicked.func_82869_a(field_147369_b))
+                        {
+                            //如果有东西
+                            //如果slot可操作
+                            ItemStack target = field_147369_b.field_71071_by.func_70301_a(keycode);
+                            if(clicked.func_75216_d())
+                            {
+                                if(!target.func_190926_b() || (clicked.field_75224_c == field_147369_b.field_71071_by) && clicked.func_75214_a(cursor))
+                                {
+                                    BUKKIT_ACTION = InventoryAction.HOTBAR_SWAP;
+                                }
+                                else
+                                {
+                                    BUKKIT_ACTION = InventoryAction.HOTBAR_MOVE_AND_READD;
+                                }
+                            }
+                            else if(!clicked.func_75216_d() && !target.func_190926_b() && clicked.func_75214_a(cursor))
+                            {
+                                BUKKIT_ACTION = InventoryAction.HOTBAR_SWAP;
+                            }
+                        }
+                        //
+                    }break;
+                    case CLONE:{
+                        //一个然并卵的操作
+                        //按住中键划过可以得到满的itemstack
+                        //但随后会被刷掉
+                        //(创造有效)
+                        if(keycode == 2)
+                        {
+                            BUKKIT_CLICKTYPE = ClickType.MIDDLE;
+                            //操作不能出窗体
+                            if(keycode != -999)
+                            {
+                                ItemStack stack = p_147351_1_.func_149546_g();
+                                Slot clicked = field_147369_b.field_71070_bA.func_75139_a(slot);
+                                if(clicked != null && field_147369_b.field_71075_bZ.field_75098_d && stack != null && !stack.func_190926_b())
+                                {
+                                    BUKKIT_ACTION = InventoryAction.CLONE_STACK;
+                                }
+                            }
+                        }
+                        break;
+                    }
+                    case THROW:
+                    {
+                        //扔东西，左键是一起，右键一个个
+                        if(slot > 0)
+                        {
+                            Slot clicked = field_147369_b.field_71070_bA.func_75139_a(slot);
+                            if(keycode == 0)
+                            {
+                                BUKKIT_CLICKTYPE = ClickType.DROP;
+                                if(clicked != null && clicked.func_82869_a(field_147369_b) && !clicked.func_75211_c().func_190926_b() && clicked.func_75211_c().func_77973_b() != Item.func_150898_a(Blocks.field_150350_a))
+                                {
+                                    //当这个物品不是空气，不是0堆叠并且slot可以访问
+                                    BUKKIT_ACTION = InventoryAction.DROP_ALL_SLOT;
+                                }
+                            }
+                            else if(keycode == 1)
+                            {
+                                BUKKIT_CLICKTYPE = ClickType.CONTROL_DROP;
+                                if(clicked != null && clicked.func_82869_a(field_147369_b) && !clicked.func_75211_c().func_190926_b() && clicked.func_75211_c().func_77973_b() != Item.func_150898_a(Blocks.field_150350_a))
+                                {
+                                    //当这个物品不是空气，不是0堆叠并且slot可以访问
+                                    BUKKIT_ACTION = InventoryAction.DROP_ONE_SLOT;
+                                }
+                            }
+                        }
+                        break;
+                    }
+                    case QUICK_CRAFT:{
+                        //快速合成，直接跳过，就是上面的ItemStack2
+                        //没有对应的bukkit Inventory action
+                    }break;
+                    case QUICK_MOVE:{
+                        if (keycode == 0 || keycode == 1) {
+                            if(keycode == 0)
+                            {
+                                BUKKIT_CLICKTYPE = ClickType.SHIFT_LEFT;
+                            }
+                            else
+                            {
+                                BUKKIT_CLICKTYPE = ClickType.SHIFT_RIGHT;
+                            }
+                            if (p_147351_1_.func_149544_d() < 0) {
+                                BUKKIT_ACTION = InventoryAction.NOTHING;
+                            } else {
+                                Slot clicked = this.field_147369_b.field_71070_bA.func_75139_a(slot);
+                                if (clicked != null && clicked.func_82869_a(this.field_147369_b) && clicked.func_75216_d()) {
+                                    BUKKIT_ACTION = InventoryAction.MOVE_TO_OTHER_INVENTORY;
+                                }
+                            }
+                        }
+                    }break;
+                }
+                InventoryClickEvent event = null;
+                if(BUKKIT_CLICKTYPE != ClickType.UNKNOWN)
                 {
+                    if(BUKKIT_ACTION != InventoryAction.UNKNOWN)
+                    {
+                        if(p_147351_1_.func_186993_f() != net.minecraft.inventory.ClickType.QUICK_CRAFT)
+                        {
+
+                            if(BUKKIT_CLICKTYPE == ClickType.NUMBER_KEY)
+                            {
+                                event = new InventoryClickEvent(BukkitInventoryView,BukkitSlotType,slot,BUKKIT_CLICKTYPE,BUKKIT_ACTION,keycode);
+                            }
+                            else
+                            {
+                                event = new InventoryClickEvent(BukkitInventoryView,BukkitSlotType,slot,BUKKIT_CLICKTYPE,BUKKIT_ACTION);
+                            }
+                            //首先建立一个简单的click
+                            //检查有没有合成表，有的话改作CraftItemEvent
+                                org.bukkit.inventory.Inventory top = BukkitInventoryView.getTopInventory();
+                            if(slot == 0 && top instanceof CraftingInventory) {
+                                org.bukkit.inventory.Recipe recipe = ((CraftInventoryCrafting) top).getRecipe();
+                                if(recipe != null)
+                                {
+                                    if(BUKKIT_CLICKTYPE == ClickType.NUMBER_KEY)
+                                    {
+                                        event = new CraftItemEvent(recipe,BukkitInventoryView,BukkitSlotType,slot,BUKKIT_CLICKTYPE,BUKKIT_ACTION,keycode);
+                                    }
+                                    else
+                                    {
+                                        event = new CraftItemEvent(recipe,BukkitInventoryView,BukkitSlotType,slot,BUKKIT_CLICKTYPE,BUKKIT_ACTION,keycode);
+                                    }
+                                }
+                            }
+                            Container old = field_147369_b.field_71070_bA;
+                            Bukkit.getServer().getPluginManager().callEvent(event);
+                            if(field_147369_b.field_71070_bA != old)
+                            {
+                                return;
+                            }
+                        }
+                    }
+                }
+                if(event != null)
+                {
+                    switch (event.getResult())
+                    {
+                        //暂时不写发包
+                        case ALLOW:
+                        case DEFAULT:break;
+                        case DENY: {
+                            // Modified other slots
+                            switch (BUKKIT_ACTION) {
+                                case PICKUP_ALL:
+                                case MOVE_TO_OTHER_INVENTORY:
+                                case HOTBAR_MOVE_AND_READD:
+                                case HOTBAR_SWAP:
+                                case COLLECT_TO_CURSOR:
+                                case UNKNOWN:
+                                    this.field_147369_b.func_71120_a(this.field_147369_b.field_71070_bA);
+                                    break;
+                                // Modified cursor and clicked
+                                case PICKUP_SOME:
+                                case PICKUP_HALF:
+                                case PICKUP_ONE:
+                                case PLACE_ALL:
+                                case PLACE_SOME:
+                                case PLACE_ONE:
+                                case SWAP_WITH_CURSOR:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, this.field_147369_b.field_71071_by.func_70445_o()));
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71070_bA.field_75152_c,slot, this.field_147369_b.field_71070_bA.func_75139_a(slot).func_75211_c()));
+                                    break;
+                                // Modified clicked only
+                                case DROP_ALL_SLOT:
+                                case DROP_ONE_SLOT:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71070_bA.field_75152_c, slot, this.field_147369_b.field_71070_bA.func_75139_a(slot).func_75211_c()));
+                                    break;
+                                // Modified cursor only
+                                case DROP_ALL_CURSOR:
+                                case DROP_ONE_CURSOR:
+                                case CLONE_STACK:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, this.field_147369_b.field_71071_by.func_70445_o()));
+                                    break;
+                                // Nothing
+                                case NOTHING:
+                                    break;
+                            }
+                        }
+                        return;
+                    }
+                }
+                ItemStack itemstack2 = this.field_147369_b.field_71070_bA.func_184996_a(p_147351_1_.func_149544_d(), p_147351_1_.func_149543_e(), p_147351_1_.func_186993_f(), this.field_147369_b);
+                if (ItemStack.areItemStacksEqualUsingNBTShareTag(p_147351_1_.func_149546_g(), itemstack2))
+                {
                     this.field_147369_b.field_71135_a.func_147359_a(new SPacketConfirmTransaction(p_147351_1_.func_149548_c(), p_147351_1_.func_149547_f(), true));
                     this.field_147369_b.field_71137_h = true;
                     this.field_147369_b.field_71070_bA.func_75142_b();
@@ -1125,6 +1964,368 @@
         }
     }
 
+    public void discarded_processClickWindow(CPacketClickWindow packetIn)
+    {
+
+        PacketThreadUtil.func_180031_a(packetIn, this, this.field_147369_b.func_71121_q());
+        this.field_147369_b.func_143004_u();
+        boolean cancelled = this.field_147369_b.func_175149_v(); // CraftBukkit - see below if
+        if (this.field_147369_b.field_71070_bA.field_75152_c == packetIn.func_149548_c() && this.field_147369_b.field_71070_bA.func_75129_b(this.field_147369_b))
+        {
+            if (this.field_147369_b.func_175149_v())
+            {
+                NonNullList<ItemStack> nonnulllist = NonNullList.<ItemStack>func_191196_a();
+
+                for (int i = 0; i < this.field_147369_b.field_71070_bA.field_75151_b.size(); ++i)
+                {
+                    nonnulllist.add(((Slot)this.field_147369_b.field_71070_bA.field_75151_b.get(i)).func_75211_c());
+                }
+
+                this.field_147369_b.func_71110_a(this.field_147369_b.field_71070_bA, nonnulllist);
+            }
+            else
+            {
+                ItemStack itemstack2 = this.field_147369_b.field_71070_bA.func_184996_a(packetIn.func_149544_d(), packetIn.func_149543_e(), packetIn.func_186993_f(), this.field_147369_b);
+
+                // CraftBukkit start - Call InventoryClickEvent
+                if (packetIn.func_149544_d() < -1 && packetIn.func_149544_d() != -999) {
+                    return;
+                }
+
+                InventoryView inventory = this.field_147369_b.field_71070_bA.getBukkitView();
+                InventoryType.SlotType type = CraftInventoryView.getSlotType(inventory, packetIn.func_149544_d());
+
+                InventoryClickEvent event;
+                ClickType click = ClickType.UNKNOWN;
+                InventoryAction action = InventoryAction.UNKNOWN;
+                int buttonUsed = packetIn.func_149543_e();  //0 for leftclick 1 for right, 2 for middle, other wtf
+                ItemStack itemstack = ItemStack.field_190927_a;
+                int slotID = packetIn.func_149544_d();  //封包传入的slot编号,slot可以是单个栏，可以试多个栏的整体，用getStackInSlot(idx)获取，比如按E有很多slot，包括合成输入，输出，装备，左手，快捷栏，主物品栏
+                switch (packetIn.func_186993_f()) {
+                    case PICKUP:
+                        //从物品栏里面拿东西出来
+                        if (buttonUsed == 0) {
+                            click = ClickType.LEFT;
+                        } else if (buttonUsed == 1) {
+                            click = ClickType.RIGHT;
+                        }
+                        //左键点击还是右键
+                        if (click  == ClickType.LEFT || click == ClickType.RIGHT){ //（只接受左键或者右键，中间不算）
+                            //if (packetIn.getUsedButton() == 0 || packetIn.getUsedButton() == 1) {
+                            action = InventoryAction.NOTHING; // Don't want to repeat ourselves
+                            //先将action 设定为Nothing
+                            if (slotID == -999) {
+                                //如果传入包的slotID是-999的（也就是丢出去？）
+                                if (!field_147369_b.field_71071_by.func_70445_o().func_190926_b()) {
+                                    //如果玩家的物品栏不是空
+                                    //如果按左键就是把整个物品栏丢了，否则就是只丢一个
+                                    action = click == ClickType.LEFT ? InventoryAction.DROP_ALL_CURSOR : InventoryAction.DROP_ONE_CURSOR;
+                                }
+                            } else if (packetIn.func_149544_d() < 0)  {
+                                //无效的ID，放弃
+                                action = InventoryAction.NOTHING;
+                            } else {
+                                // 0 - 45之间的有效位置
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(slotID);
+                                //如果这个slot是由东西的
+                                if (slot != null) {
+                                    ItemStack clickedItem = slot.func_75211_c();
+                                    //点击目标出的物品
+                                    ItemStack cursor = field_147369_b.field_71071_by.func_70445_o();
+                                    //拿起来的物品
+                                    if (clickedItem.func_190926_b()) {
+                                        //如果目标slot是空的
+                                        if (!cursor.func_190926_b()) {
+                                            //如果拿起来了一个物品
+                                            //左键是放一个，右键放所有
+                                            action = click == ClickType.LEFT ? InventoryAction.PLACE_ALL : InventoryAction.PLACE_ONE;
+                                        }
+                                    } else if (slot.func_82869_a(field_147369_b)) {
+                                        //当你可以把slot的东西拿走的时候（有的slot的东西不能拿，比如商人的展示slot）
+                                        //这里是将拿起的物品放入目标的物品栏，同时将目标物品栏的东西拿起来
+                                        if (cursor.func_190926_b()) {
+                                            //如果实际上你什么都没拿起来（cursor空的）
+                                            //捡起目标物品栏，左键全拿右键一半
+                                            action = click == ClickType.LEFT ? PICKUP_ALL : InventoryAction.PICKUP_HALF;
+                                        } else if (slot.func_75214_a(cursor)) {
+                                            //isItemValid -> 你的东西能放到slot里面，比如熔炉和工作台的输出就不能把东西放回去
+                                            if (clickedItem.func_77969_a(cursor) && ItemStack.func_77970_a(clickedItem, cursor)) {
+                                                //如果拿起的东西和目标的物品和meta/nbt完全一致
+                                                //尝试将手上的东西填入物品栏
+                                                int toPlace = click == ClickType.LEFT ? cursor.func_190916_E() : 1;
+                                                toPlace = Math.min(toPlace, clickedItem.func_77976_d() - clickedItem.func_190916_E());
+                                                toPlace = Math.min(toPlace, slot.field_75224_c.func_70297_j_() - clickedItem.func_190916_E());
+                                                if (toPlace == 1) {
+                                                    action = InventoryAction.PLACE_ONE;
+                                                } else if (toPlace == cursor.func_190916_E()) {
+                                                    action = InventoryAction.PLACE_ALL;
+                                                } else if (toPlace < 0) {
+                                                    //如果你手上的东西超出了物品栏的限制
+                                                    action = toPlace != -1 ? InventoryAction.PICKUP_SOME : InventoryAction.PICKUP_ONE; // this happens with oversized stacks
+                                                } else if (toPlace != 0) {
+                                                    action = InventoryAction.PLACE_SOME;
+                                                }
+                                            } else if (cursor.func_190916_E() <= slot.func_75219_a()) {
+                                                //交换手上的和物品栏的
+                                                action = InventoryAction.SWAP_WITH_CURSOR;
+                                            }
+                                        } else if (cursor.func_77973_b() == clickedItem.func_77973_b() && (!cursor.func_77981_g() || cursor.func_77960_j() == clickedItem.func_77960_j()) && ItemStack.func_77970_a(cursor, clickedItem)) {
+                                            if (clickedItem.func_190916_E() >= 0) {
+                                                //如果玩家无法放回去，就取出来吧
+                                                if (clickedItem.func_190916_E() + cursor.func_190916_E() <= cursor.func_77976_d()) {
+                                                    // As of 1.5, this is result slots only
+                                                    action = PICKUP_ALL;
+                                                }
+                                            }
+                                        }
+                                    }
+                                }
+                            }
+                        }
+                        break;
+                    // TODO check on updates
+                    case QUICK_MOVE:
+                        //在slot长按住鼠标拖拽，比如工作台合成
+                        if (buttonUsed == 0) {
+                            click = ClickType.SHIFT_LEFT;
+                        } else if (buttonUsed == 1) {
+                            click = ClickType.SHIFT_RIGHT;
+                        }
+                        if (click == ClickType.LEFT || click == ClickType.RIGHT) {
+                            if (slotID < 0) {
+                                //小于0什么都不做
+                                action = InventoryAction.NOTHING;
+                            } else {
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(slotID);
+                                if (slot != null && slot.func_82869_a(this.field_147369_b) && slot.func_75216_d()) {
+                                    //当slot存在且不是空的，能拿走，并且和玩家的物品栏相同
+                                    action = InventoryAction.MOVE_TO_OTHER_INVENTORY;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            }
+                        }
+                        break;
+                    case SWAP:
+                        //交换物品
+                        //按下了0-9
+                        if (buttonUsed >= 0 && buttonUsed < 9) {
+                            click = ClickType.NUMBER_KEY;
+                            //得到点击的slot，此时我们手上是已经有了东西
+                            Slot clickedSlot = this.field_147369_b.field_71070_bA.func_75139_a(slotID);
+                            if (clickedSlot.func_82869_a(field_147369_b)) {
+                                //如果可以拿出来
+                                ItemStack hotbar = this.field_147369_b.field_71071_by.func_70301_a(buttonUsed);  //这说明主物品栏和快捷栏共是4个slot，0-3
+                                //如果可以完成交换
+                                boolean canCleanSwap = hotbar.func_190926_b() || (clickedSlot.field_75224_c == field_147369_b.field_71071_by && clickedSlot.func_75214_a(hotbar)); // the slot will accept the hotbar item
+                                if (clickedSlot.func_75216_d()) {
+                                    //点击的物品栏有物品
+                                    if (canCleanSwap) {
+                                        //交换快捷栏物品
+                                        action = InventoryAction.HOTBAR_SWAP;
+                                    } else {
+                                        //否则移动其他栏位
+                                        action = InventoryAction.HOTBAR_MOVE_AND_READD;
+                                    }
+                                } else if (!clickedSlot.func_75216_d() && !hotbar.func_190926_b() && clickedSlot.func_75214_a(hotbar)) {
+                                    //
+                                    action = InventoryAction.HOTBAR_SWAP;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            } else {
+                                action = InventoryAction.NOTHING;
+                            }
+                        }
+                        break;
+                    case CLONE:
+                        //按下中键可以刷出物品栏，然并卵，松开就没了
+                        if (packetIn.func_149543_e() == 2) {
+                            click = ClickType.MIDDLE;
+                            if (packetIn.func_149544_d() == -999) {
+                                action = InventoryAction.NOTHING;
+                            } else {
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(packetIn.func_149544_d());
+                                if (slot != null && slot.func_75216_d() && field_147369_b.field_71075_bZ.field_75098_d && field_147369_b.field_71071_by.func_70445_o().func_190926_b()) {
+                                    action = InventoryAction.CLONE_STACK;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            }
+                        } else {
+                            click = ClickType.UNKNOWN;
+                            action = InventoryAction.UNKNOWN;
+                        }
+                        break;
+                    case THROW:
+                        //扔出去
+                        if (packetIn.func_149544_d() >= 0) {
+                            if (packetIn.func_149543_e() == 0) {
+                                click = ClickType.DROP;
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(packetIn.func_149544_d());
+                                if (slot != null && slot.func_75216_d() && slot.func_82869_a(field_147369_b) && !slot.func_75211_c().func_190926_b() && slot.func_75211_c().func_77973_b() != Item.func_150898_a(Blocks.field_150350_a)) {
+                                    action = InventoryAction.DROP_ONE_SLOT;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            } else if (packetIn.func_149543_e() == 1) {
+                                click = ClickType.CONTROL_DROP;
+                                Slot slot = this.field_147369_b.field_71070_bA.func_75139_a(packetIn.func_149544_d());
+                                if (slot != null && slot.func_75216_d() && slot.func_82869_a(field_147369_b) && !slot.func_75211_c().func_190926_b() && slot.func_75211_c().func_77973_b() != Item.func_150898_a(Blocks.field_150350_a)) {
+                                    action = InventoryAction.DROP_ALL_SLOT;
+                                } else {
+                                    action = InventoryAction.NOTHING;
+                                }
+                            }
+                        } else {
+                            // Sane default (because this happens when they are holding nothing. Don't ask why.)
+                            click = ClickType.LEFT;
+                            if (packetIn.func_149543_e() == 1) {
+                                click = ClickType.RIGHT;
+                            }
+                            action = InventoryAction.NOTHING;
+                        }
+                        break;
+                    case QUICK_CRAFT:
+                        //快速合成（拖动）
+                        itemstack = this.field_147369_b.field_71070_bA.func_184996_a(packetIn.func_149544_d(), packetIn.func_149543_e(), packetIn.func_186993_f(), this.field_147369_b);
+                        break;
+                    case PICKUP_ALL:
+                        //双击，直接捡起所有物品栏同类物品
+                        click = ClickType.DOUBLE_CLICK;
+                        action = InventoryAction.NOTHING;
+                        if (packetIn.func_149544_d() >= 0 && !this.field_147369_b.field_71071_by.func_70445_o().func_190926_b()) {
+                            ItemStack cursor = this.field_147369_b.field_71071_by.func_70445_o();
+                            action = InventoryAction.NOTHING;
+                            // Quick check for if we have any of the item
+                            if (inventory.getTopInventory().contains(org.bukkit.Material.getMaterial(Item.func_150891_b(cursor.func_77973_b()))) || inventory.getBottomInventory().contains(org.bukkit.Material.getMaterial(Item.func_150891_b(cursor.func_77973_b())))) {
+                                action = InventoryAction.COLLECT_TO_CURSOR;
+                            }
+                        }
+                        break;
+                    default:
+                        break;
+                }
+
+                if (packetIn.func_186993_f() != net.minecraft.inventory.ClickType.QUICK_CRAFT) {
+                    if (click == ClickType.NUMBER_KEY) {
+                        event = new InventoryClickEvent(inventory, type, packetIn.func_149544_d(), click, action, packetIn.func_149543_e());
+                    } else {
+                        event = new InventoryClickEvent(inventory, type, packetIn.func_149544_d(), click, action);
+                    }
+
+                    Inventory top = inventory.getTopInventory();
+                    if (packetIn.func_149544_d() == 0 && top instanceof CraftingInventory) {
+                        Recipe recipe = ((CraftingInventory) top).getRecipe();
+                        if (recipe != null) {
+                            if (click == ClickType.NUMBER_KEY) {
+                                event = new CraftItemEvent(recipe, inventory, type, packetIn.func_149544_d(), click, action, packetIn.func_149543_e());
+                            } else {
+                                event = new CraftItemEvent(recipe, inventory, type, packetIn.func_149544_d(), click, action);
+                            }
+                        }
+                    }
+
+                    event.setCancelled(cancelled);
+                    Container oldContainer = this.field_147369_b.field_71070_bA; // SPIGOT-1224
+                    server.getPluginManager().callEvent(event);
+                    if (this.field_147369_b.field_71070_bA != oldContainer) {
+                        return;
+                    }
+
+                    switch (event.getResult()) {
+                        case ALLOW:
+                        case DEFAULT:
+                            itemstack = this.field_147369_b.field_71070_bA.func_184996_a(packetIn.func_149544_d(), packetIn.func_149543_e(), packetIn.func_186993_f(), this.field_147369_b);
+                            break;
+                        case DENY:
+                            /* Needs enum constructor in InventoryAction
+                            if (action.modifiesOtherSlots()) {
+
+                            } else {
+                                if (action.modifiesCursor()) {
+                                    this.player.playerConnection.sendPacket(new Packet103SetSlot(-1, -1, this.player.inventory.getCarried()));
+                                }
+                                if (action.modifiesClicked()) {
+                                    this.player.playerConnection.sendPacket(new Packet103SetSlot(this.player.activeContainer.windowId, packet102windowclick.slot, this.player.activeContainer.getSlot(packet102windowclick.slot).getItem()));
+                                }
+                            }*/
+                            switch (action) {
+                                // Modified other slots
+                                case PICKUP_ALL:
+                                case MOVE_TO_OTHER_INVENTORY:
+                                case HOTBAR_MOVE_AND_READD:
+                                case HOTBAR_SWAP:
+                                case COLLECT_TO_CURSOR:
+                                case UNKNOWN:
+                                    this.field_147369_b.func_71120_a(this.field_147369_b.field_71070_bA);
+                                    break;
+                                // Modified cursor and clicked
+                                case PICKUP_SOME:
+                                case PICKUP_HALF:
+                                case PICKUP_ONE:
+                                case PLACE_ALL:
+                                case PLACE_SOME:
+                                case PLACE_ONE:
+                                case SWAP_WITH_CURSOR:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, this.field_147369_b.field_71071_by.func_70445_o()));
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71070_bA.field_75152_c, packetIn.func_149544_d(), this.field_147369_b.field_71070_bA.func_75139_a(packetIn.func_149544_d()).func_75211_c()));
+                                    break;
+                                // Modified clicked only
+                                case DROP_ALL_SLOT:
+                                case DROP_ONE_SLOT:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71070_bA.field_75152_c, packetIn.func_149544_d(), this.field_147369_b.field_71070_bA.func_75139_a(packetIn.func_149544_d()).func_75211_c()));
+                                    break;
+                                // Modified cursor only
+                                case DROP_ALL_CURSOR:
+                                case DROP_ONE_CURSOR:
+                                case CLONE_STACK:
+                                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, this.field_147369_b.field_71071_by.func_70445_o()));
+                                    break;
+                                // Nothing
+                                case NOTHING:
+                                    break;
+                            }
+                            return;
+                    }
+
+                    if (event instanceof CraftItemEvent) {
+                        // Need to update the inventory on crafting to
+                        // correctly support custom recipes
+                        field_147369_b.func_71120_a(field_147369_b.field_71070_bA);
+                    }
+                }
+                // CraftBukkit end
+
+
+                if (ItemStack.areItemStacksEqualUsingNBTShareTag(packetIn.func_149546_g(), itemstack2))
+                {
+                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketConfirmTransaction(packetIn.func_149548_c(), packetIn.func_149547_f(), true));
+                    this.field_147369_b.field_71137_h = true;
+                    this.field_147369_b.field_71070_bA.func_75142_b();
+                    this.field_147369_b.func_71113_k();
+                    this.field_147369_b.field_71137_h = false;
+                }
+                else
+                {
+                    this.field_147372_n.func_76038_a(this.field_147369_b.field_71070_bA.field_75152_c, Short.valueOf(packetIn.func_149547_f()));
+                    this.field_147369_b.field_71135_a.func_147359_a(new SPacketConfirmTransaction(packetIn.func_149548_c(), packetIn.func_149547_f(), false));
+                    this.field_147369_b.field_71070_bA.func_75128_a(this.field_147369_b, false);
+                    NonNullList<ItemStack> nonnulllist1 = NonNullList.<ItemStack>func_191196_a();
+
+                    for (int j = 0; j < this.field_147369_b.field_71070_bA.field_75151_b.size(); ++j)
+                    {
+                        ItemStack itemstack3 = ((Slot)this.field_147369_b.field_71070_bA.field_75151_b.get(j)).func_75211_c();
+                        ItemStack itemstack4 = itemstack.func_190926_b() ? ItemStack.field_190927_a : itemstack3;
+                        nonnulllist1.add(itemstack4);
+                    }
+
+                    this.field_147369_b.func_71110_a(this.field_147369_b.field_71070_bA, nonnulllist1);
+                }
+            }
+        }
+    }
+
     public void func_147338_a(CPacketEnchantItem p_147338_1_)
     {
         PacketThreadUtil.func_180031_a(p_147338_1_, this, this.field_147369_b.func_71121_q());
@@ -1143,49 +2344,88 @@
 
         if (this.field_147369_b.field_71134_c.func_73083_d())
         {
-            boolean flag = p_147344_1_.func_149627_c() < 0;
-            ItemStack itemstack = p_147344_1_.func_149625_d();
+            boolean slotIdInvalid = p_147344_1_.func_149627_c() <= 0 || p_147344_1_.func_149627_c() > 45;
+            ItemStack itemIn = p_147344_1_.func_149625_d();
 
-            if (!itemstack.func_190926_b() && itemstack.func_77942_o() && itemstack.func_77978_p().func_150297_b("BlockEntityTag", 10))
+            if (!itemIn.func_190926_b() && itemIn.func_77942_o() && itemIn.func_77978_p().func_150297_b("BlockEntityTag", 10))
             {
-                NBTTagCompound nbttagcompound = itemstack.func_77978_p().func_74775_l("BlockEntityTag");
+                NBTTagCompound itemNBT = itemIn.func_77978_p().func_74775_l("BlockEntityTag");
 
-                if (nbttagcompound.func_74764_b("x") && nbttagcompound.func_74764_b("y") && nbttagcompound.func_74764_b("z"))
+                if (itemNBT.func_74764_b("x") && itemNBT.func_74764_b("y") && itemNBT.func_74764_b("z"))
                 {
-                    BlockPos blockpos = new BlockPos(nbttagcompound.func_74762_e("x"), nbttagcompound.func_74762_e("y"), nbttagcompound.func_74762_e("z"));
+                    BlockPos blockpos = new BlockPos(itemNBT.func_74762_e("x"), itemNBT.func_74762_e("y"), itemNBT.func_74762_e("z"));
                     TileEntity tileentity = this.field_147369_b.field_70170_p.func_175625_s(blockpos);
 
                     if (tileentity != null)
                     {
-                        NBTTagCompound nbttagcompound1 = tileentity.func_189515_b(new NBTTagCompound());
-                        nbttagcompound1.func_82580_o("x");
-                        nbttagcompound1.func_82580_o("y");
-                        nbttagcompound1.func_82580_o("z");
-                        itemstack.func_77983_a("BlockEntityTag", nbttagcompound1);
+                        NBTTagCompound writeResult = tileentity.func_189515_b(new NBTTagCompound());
+                        writeResult.func_82580_o("x");
+                        writeResult.func_82580_o("y");
+                        writeResult.func_82580_o("z");
+                        itemIn.func_77983_a("BlockEntityTag", writeResult);
                     }
                 }
             }
 
-            boolean flag1 = p_147344_1_.func_149627_c() >= 1 && p_147344_1_.func_149627_c() <= 45;
-            boolean flag2 = itemstack.func_190926_b() || itemstack.func_77960_j() >= 0 && itemstack.func_190916_E() <= 64 && !itemstack.func_190926_b();
+            boolean slotIdValid = !slotIdInvalid;
+            // CraftBukkit - Add invalidItems check
+            boolean itemIsValid = itemIn.func_190926_b() || itemIn.func_77960_j() >= 0 && itemIn.func_190916_E() <= 64 && !itemIn.func_190926_b() && !invalidItems.contains(Item.func_150891_b(itemIn.func_77973_b()));
+            if (slotIdInvalid || (slotIdValid && !ItemStack.func_77989_b(this.field_147369_b.field_71069_bz.func_75139_a(p_147344_1_.func_149627_c()).func_75211_c(), p_147344_1_.func_149625_d()))) { // Insist on valid slot
+                // CraftBukkit start - Call click event
+                HumanEntity player = this.field_147369_b.getBukkitEntity();
+                InventoryView inventory = new CraftInventoryView(player, player.getInventory(), this.field_147369_b.field_71069_bz);
+                org.bukkit.inventory.ItemStack item = CraftItemStack.asBukkitCopy(p_147344_1_.func_149625_d());
 
-            if (flag1 && flag2)
+                InventoryType.SlotType type = InventoryType.SlotType.QUICKBAR;
+                if (slotIdInvalid) {
+                    type = InventoryType.SlotType.OUTSIDE;
+                } else if (p_147344_1_.func_149627_c() < 36) {
+                    if (p_147344_1_.func_149627_c() >= 5 && p_147344_1_.func_149627_c() < 9) {
+                        type = InventoryType.SlotType.ARMOR;
+                    } else {
+                        type = InventoryType.SlotType.CONTAINER;
+                    }
+                }
+                InventoryCreativeEvent event = new InventoryCreativeEvent(inventory, type, !slotIdInvalid ? -999 : p_147344_1_.func_149627_c(), item);
+                server.getPluginManager().callEvent(event);
+
+                itemIn = CraftItemStack.asNMSCopy(event.getCursor());
+                //System.out.println(event.getResult());
+                switch (event.getResult()) {
+                    case ALLOW:
+                        // Plugin cleared the id / stacksize checks
+                        itemIsValid = true;
+                        break;
+                    case DEFAULT:
+                        break;
+                    case DENY:
+                        // Reset the slot
+                        if (p_147344_1_.func_149627_c() >= 0) {
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(this.field_147369_b.field_71069_bz.field_75152_c, p_147344_1_.func_149627_c(), this.field_147369_b.field_71069_bz.func_75139_a(p_147344_1_.func_149627_c()).func_75211_c()));
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-1, -1, ItemStack.field_190927_a));
+                            return;
+                        }
+
+                }
+            }
+            // CraftBukkit end
+            if (slotIdValid && itemIsValid)
             {
-                if (itemstack.func_190926_b())
+                if (itemIn.func_190926_b())
                 {
                     this.field_147369_b.field_71069_bz.func_75141_a(p_147344_1_.func_149627_c(), ItemStack.field_190927_a);
                 }
                 else
                 {
-                    this.field_147369_b.field_71069_bz.func_75141_a(p_147344_1_.func_149627_c(), itemstack);
+                    this.field_147369_b.field_71069_bz.func_75141_a(p_147344_1_.func_149627_c(), itemIn);
                 }
 
                 this.field_147369_b.field_71069_bz.func_75128_a(this.field_147369_b, true);
             }
-            else if (flag && flag2 && this.field_147375_m < 200)
+            else if (slotIdInvalid && itemIsValid && this.field_147375_m < 200)
             {
                 this.field_147375_m += 20;
-                EntityItem entityitem = this.field_147369_b.func_71019_a(itemstack, true);
+                EntityItem entityitem = this.field_147369_b.func_71019_a(itemIn, true);
 
                 if (entityitem != null)
                 {
@@ -1233,11 +2473,25 @@
 
             String[] astring = p_147343_1_.func_187017_b();
 
-            for (int i = 0; i < astring.length; ++i)
-            {
-                tileentitysign.field_145915_a[i] = new TextComponentString(TextFormatting.func_110646_a(astring[i]));
+            // CraftBukkit start
+            Player player = this.server.getPlayer(this.field_147369_b);
+            int x = p_147343_1_.func_179722_a().func_177958_n();
+            int y = p_147343_1_.func_179722_a().func_177956_o();
+            int z = p_147343_1_.func_179722_a().func_177952_p();
+            String[] lines = new String[4];
+
+            for (int i = 0; i < astring.length; ++i) {
+                lines[i] = TextFormatting.func_110646_a(new TextComponentString(TextFormatting.func_110646_a(astring[i])).func_150260_c());
             }
+            SignChangeEvent event = new SignChangeEvent((CraftBlock) player.getWorld().getBlockAt(x, y, z), this.server.getPlayer(this.field_147369_b), lines);
+            this.server.getPluginManager().callEvent(event);
 
+            if (!event.isCancelled()) {
+                System.arraycopy(CraftSign.sanitizeLines(event.getLines()), 0, tileentitysign.field_145915_a, 0, 4);
+                tileentitysign.field_145916_j = false;
+            }
+            // CraftBukkit end
+
             tileentitysign.func_70296_d();
             worldserver.func_184138_a(blockpos, iblockstate, iblockstate, 3);
         }
@@ -1260,12 +2514,28 @@
     public void func_147348_a(CPacketPlayerAbilities p_147348_1_)
     {
         PacketThreadUtil.func_180031_a(p_147348_1_, this, this.field_147369_b.func_71121_q());
-        this.field_147369_b.field_71075_bZ.field_75100_b = p_147348_1_.func_149488_d() && this.field_147369_b.field_71075_bZ.field_75101_c;
+        // CraftBukkit start
+        if (this.field_147369_b.field_71075_bZ.field_75101_c && this.field_147369_b.field_71075_bZ.field_75100_b != p_147348_1_.func_149488_d()) {
+            PlayerToggleFlightEvent event = new PlayerToggleFlightEvent(this.server.getPlayer(this.field_147369_b), p_147348_1_.func_149488_d());
+            this.server.getPluginManager().callEvent(event);
+            if (!event.isCancelled()) {
+                this.field_147369_b.field_71075_bZ.field_75100_b = p_147348_1_.func_149488_d(); // Actually set the player's flying status
+            } else {
+                this.field_147369_b.func_71016_p(); // Tell the player their ability was reverted
+            }
+        }
+        // CraftBukkit end
     }
 
     public void func_147341_a(CPacketTabComplete p_147341_1_)
     {
         PacketThreadUtil.func_180031_a(p_147341_1_, this, this.field_147369_b.func_71121_q());
+        // CraftBukkit start
+        if (chatSpamField.addAndGet(this, 10) > 500 && !this.field_147367_d.func_184103_al().func_152596_g(this.field_147369_b.func_146103_bH())) {
+            this.func_147360_c("disconnect.spam");
+            return;
+        }
+        // CraftBukkit end
         List<String> list = Lists.<String>newArrayList();
 
         for (String s : this.field_147367_d.func_184104_a(this.field_147369_b, p_147341_1_.func_149419_c(), p_147341_1_.func_179709_b(), p_147341_1_.func_186989_c()))
@@ -1281,406 +2551,390 @@
         PacketThreadUtil.func_180031_a(p_147352_1_, this, this.field_147369_b.func_71121_q());
         this.field_147369_b.func_147100_a(p_147352_1_);
     }
-
-    public void func_147349_a(CPacketCustomPayload p_147349_1_)
-    {
-        PacketThreadUtil.func_180031_a(p_147349_1_, this, this.field_147369_b.func_71121_q());
+    public void func_147349_a(CPacketCustomPayload p_147349_1_) {
+        net.minecraft.network.PacketThreadUtil.func_180031_a(p_147349_1_, this, this.field_147369_b.func_71121_q());
         String s = p_147349_1_.func_149559_c();
+        net.minecraft.network.PacketBuffer packetdataserializer;
+        ItemStack itemstack;
+        ItemStack itemstack1;
 
-        if ("MC|BEdit".equals(s))
-        {
-            PacketBuffer packetbuffer = p_147349_1_.func_180760_b();
+        if ("MC|BEdit".equals(s)) {
+            // CraftBukkit start
+            if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
+                this.func_147360_c("Book edited too quickly!");
+                return;
+            }
+            this.lastBookTick = MinecraftServer.currentTick;
+            // CraftBukkit end
+            packetdataserializer = p_147349_1_.func_180760_b();
 
-            try
-            {
-                ItemStack itemstack = packetbuffer.func_150791_c();
-
-                if (itemstack.func_190926_b())
-                {
+            try {
+                itemstack = packetdataserializer.func_150791_c();
+                if (itemstack.func_190926_b()) {
                     return;
                 }
 
-                if (!ItemWritableBook.func_150930_a(itemstack.func_77978_p()))
-                {
+                if (!ItemWritableBook.func_150930_a(itemstack.func_77978_p())) {
                     throw new IOException("Invalid book tag!");
                 }
 
-                ItemStack itemstack1 = this.field_147369_b.func_184614_ca();
-
-                if (itemstack1.func_190926_b())
-                {
+                itemstack1 = this.field_147369_b.func_184614_ca();
+                if (itemstack1.func_190926_b()) {
                     return;
                 }
 
-                if (itemstack.func_77973_b() == Items.field_151099_bA && itemstack.func_77973_b() == itemstack1.func_77973_b())
-                {
-                    itemstack1.func_77983_a("pages", itemstack.func_77978_p().func_150295_c("pages", 8));
+                if (itemstack.func_77973_b() == Items.field_151099_bA && itemstack.func_77973_b() == itemstack1.func_77973_b()) {
+                    itemstack1 = new ItemStack(Items.field_151099_bA); // CraftBukkit
+                    itemstack1.func_77983_a("pages", (NBTBase) itemstack.func_77978_p().func_150295_c("pages", 8));
+                    CraftEventFactory.handleEditBookEvent(field_147369_b, itemstack1); // CraftBukkit
                 }
+            } catch (Exception exception) {
+                net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t handle book info", exception);
+                this.func_147360_c("Invalid book data!"); // CraftBukkit
             }
-            catch (Exception exception6)
-            {
-                field_147370_c.error((String)"Couldn\'t handle book info", (Throwable)exception6);
-            }
-        }
-        else if ("MC|BSign".equals(s))
-        {
-            PacketBuffer packetbuffer1 = p_147349_1_.func_180760_b();
+        } else {
+            String s1;
 
-            try
-            {
-                ItemStack itemstack3 = packetbuffer1.func_150791_c();
-
-                if (itemstack3.func_190926_b())
-                {
+            if ("MC|BSign".equals(s)) {
+                // CraftBukkit start
+                if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
+                    this.func_147360_c("Book edited too quickly!");
                     return;
                 }
+                this.lastBookTick = MinecraftServer.currentTick;
+                // CraftBukkit end
+                packetdataserializer = p_147349_1_.func_180760_b();
 
-                if (!ItemWrittenBook.func_77828_a(itemstack3.func_77978_p()))
-                {
-                    throw new IOException("Invalid book tag!");
-                }
+                try {
+                    itemstack = packetdataserializer.func_150791_c();
+                    if (itemstack.func_190926_b()) {
+                        return;
+                    }
 
-                ItemStack itemstack4 = this.field_147369_b.func_184614_ca();
+                    if (!ItemWrittenBook.func_77828_a(itemstack.func_77978_p())) {
+                        throw new IOException("Invalid book tag!");
+                    }
 
-                if (itemstack4.func_190926_b())
-                {
-                    return;
-                }
+                    itemstack1 = this.field_147369_b.func_184614_ca();
+                    if (itemstack1.func_190926_b()) {
+                        return;
+                    }
 
-                if (itemstack3.func_77973_b() == Items.field_151099_bA && itemstack4.func_77973_b() == Items.field_151099_bA)
-                {
-                    ItemStack itemstack2 = new ItemStack(Items.field_151164_bB);
-                    itemstack2.func_77983_a("author", new NBTTagString(this.field_147369_b.func_70005_c_()));
-                    itemstack2.func_77983_a("title", new NBTTagString(itemstack3.func_77978_p().func_74779_i("title")));
-                    NBTTagList nbttaglist = itemstack3.func_77978_p().func_150295_c("pages", 8);
+                    if (itemstack.func_77973_b() == Items.field_151099_bA && itemstack1.func_77973_b() == Items.field_151099_bA) {
+                        ItemStack itemstack2 = new ItemStack(Items.field_151164_bB);
 
-                    for (int i = 0; i < nbttaglist.func_74745_c(); ++i)
-                    {
-                        String s1 = nbttaglist.func_150307_f(i);
-                        ITextComponent itextcomponent = new TextComponentString(s1);
-                        s1 = ITextComponent.Serializer.func_150696_a(itextcomponent);
-                        nbttaglist.func_150304_a(i, new NBTTagString(s1));
-                    }
+                        itemstack2.func_77983_a("author", (NBTBase) (new NBTTagString(this.field_147369_b.func_70005_c_())));
+                        itemstack2.func_77983_a("title", (NBTBase) (new NBTTagString(itemstack.func_77978_p().func_74779_i("title"))));
+                        NBTTagList nbttaglist = itemstack.func_77978_p().func_150295_c("pages", 8);
 
-                    itemstack2.func_77983_a("pages", nbttaglist);
-                    this.field_147369_b.func_184201_a(EntityEquipmentSlot.MAINHAND, itemstack2);
+                        for (int i = 0; i < nbttaglist.func_74745_c(); ++i) {
+                            s1 = nbttaglist.func_150307_f(i);
+                            TextComponentString chatcomponenttext = new TextComponentString(s1);
+
+                            s1 = ITextComponent.Serializer.func_150696_a((ITextComponent) chatcomponenttext);
+                            nbttaglist.func_150304_a(i, new NBTTagString(s1));
+                        }
+
+                        itemstack2.func_77983_a("pages", (NBTBase) nbttaglist);
+                        CraftEventFactory.handleEditBookEvent(field_147369_b, itemstack2); // CraftBukkit
+                    }
+                } catch (Exception exception1) {
+                    net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t sign book", exception1);
+                    this.func_147360_c("Invalid book data!"); // CraftBukkit
                 }
-            }
-            catch (Exception exception7)
-            {
-                field_147370_c.error((String)"Couldn\'t sign book", (Throwable)exception7);
-            }
-        }
-        else if ("MC|TrSel".equals(s))
-        {
-            try
-            {
-                int k = p_147349_1_.func_180760_b().readInt();
-                Container container = this.field_147369_b.field_71070_bA;
+            } else if ("MC|TrSel".equals(s)) {
+                try {
+                    int j = p_147349_1_.func_180760_b().readInt();
+                    Container container = this.field_147369_b.field_71070_bA;
 
-                if (container instanceof ContainerMerchant)
-                {
-                    ((ContainerMerchant)container).func_75175_c(k);
+                    if (container instanceof ContainerMerchant) {
+                        ((ContainerMerchant) container).func_75175_c(j);
+                    }
+                } catch (Exception exception2) {
+                    net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t select trade", exception2);
+                    this.func_147360_c("Invalid trade data!"); // CraftBukkit
                 }
-            }
-            catch (Exception exception5)
-            {
-                field_147370_c.error((String)"Couldn\'t select trade", (Throwable)exception5);
-            }
-        }
-        else if ("MC|AdvCmd".equals(s))
-        {
-            if (!this.field_147367_d.func_82356_Z())
-            {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled", new Object[0]));
-                return;
-            }
+            } else {
+                TileEntity tileentity;
 
-            if (!this.field_147369_b.func_189808_dh())
-            {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed", new Object[0]));
-                return;
-            }
+                if ("MC|AdvCmd".equals(s)) {
+                    if (!this.field_147367_d.func_82356_Z()) {
+                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled", new Object[0]));
+                        return;
+                    }
 
-            PacketBuffer packetbuffer2 = p_147349_1_.func_180760_b();
+                    if (!this.field_147369_b.func_189808_dh()) {
+                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed", new Object[0]));
+                        return;
+                    }
 
-            try
-            {
-                int l = packetbuffer2.readByte();
-                CommandBlockBaseLogic commandblockbaselogic1 = null;
+                    packetdataserializer = p_147349_1_.func_180760_b();
 
-                if (l == 0)
-                {
-                    TileEntity tileentity = this.field_147369_b.field_70170_p.func_175625_s(new BlockPos(packetbuffer2.readInt(), packetbuffer2.readInt(), packetbuffer2.readInt()));
+                    try {
+                        byte b0 = packetdataserializer.readByte();
+                        CommandBlockBaseLogic commandblocklistenerabstract = null;
 
-                    if (tileentity instanceof TileEntityCommandBlock)
-                    {
-                        commandblockbaselogic1 = ((TileEntityCommandBlock)tileentity).func_145993_a();
-                    }
-                }
-                else if (l == 1)
-                {
-                    Entity entity = this.field_147369_b.field_70170_p.func_73045_a(packetbuffer2.readInt());
+                        if (b0 == 0) {
+                            tileentity = this.field_147369_b.field_70170_p.func_175625_s(new BlockPos(packetdataserializer.readInt(), packetdataserializer.readInt(), packetdataserializer.readInt()));
+                            if (tileentity instanceof TileEntityCommandBlock) {
+                                commandblocklistenerabstract = ((TileEntityCommandBlock) tileentity).func_145993_a();
+                            }
+                        } else if (b0 == 1) {
+                            Entity entity = this.field_147369_b.field_70170_p.func_73045_a(packetdataserializer.readInt());
 
-                    if (entity instanceof EntityMinecartCommandBlock)
-                    {
-                        commandblockbaselogic1 = ((EntityMinecartCommandBlock)entity).func_145822_e();
-                    }
-                }
+                            if (entity instanceof EntityMinecartCommandBlock) {
+                                commandblocklistenerabstract = ((EntityMinecartCommandBlock) entity).func_145822_e();
+                            }
+                        }
 
-                String s6 = packetbuffer2.func_150789_c(packetbuffer2.readableBytes());
-                boolean flag2 = packetbuffer2.readBoolean();
+                        String s2 = packetdataserializer.func_150789_c(packetdataserializer.readableBytes());
+                        boolean flag = packetdataserializer.readBoolean();
 
-                if (commandblockbaselogic1 != null)
-                {
-                    commandblockbaselogic1.func_145752_a(s6);
-                    commandblockbaselogic1.func_175573_a(flag2);
+                        if (commandblocklistenerabstract != null) {
+                            commandblocklistenerabstract.func_145752_a(s2);
+                            commandblocklistenerabstract.func_175573_a(flag);
+                            if (!flag) {
+                                commandblocklistenerabstract.func_145750_b((ITextComponent) null);
+                            }
 
-                    if (!flag2)
-                    {
-                        commandblockbaselogic1.func_145750_b((ITextComponent)null);
+                            commandblocklistenerabstract.func_145756_e();
+                            this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", new Object[] { s2}));
+                        }
+                    } catch (Exception exception3) {
+                        net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t set command block", exception3);
+                        this.func_147360_c("Invalid command data!"); // CraftBukkit
                     }
+                } else if ("MC|AutoCmd".equals(s)) {
+                    if (!this.field_147367_d.func_82356_Z()) {
+                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled", new Object[0]));
+                        return;
+                    }
 
-                    commandblockbaselogic1.func_145756_e();
-                    this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", new Object[] {s6}));
-                }
-            }
-            catch (Exception exception4)
-            {
-                field_147370_c.error((String)"Couldn\'t set command block", (Throwable)exception4);
-            }
-        }
-        else if ("MC|AutoCmd".equals(s))
-        {
-            if (!this.field_147367_d.func_82356_Z())
-            {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notEnabled", new Object[0]));
-                return;
-            }
+                    if (!this.field_147369_b.func_189808_dh()) {
+                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed", new Object[0]));
+                        return;
+                    }
 
-            if (!this.field_147369_b.func_189808_dh())
-            {
-                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.notAllowed", new Object[0]));
-                return;
-            }
+                    packetdataserializer = p_147349_1_.func_180760_b();
 
-            PacketBuffer packetbuffer3 = p_147349_1_.func_180760_b();
+                    try {
+                        CommandBlockBaseLogic commandblocklistenerabstract1 = null;
+                        TileEntityCommandBlock tileentitycommand = null;
+                        BlockPos blockposition = new BlockPos(packetdataserializer.readInt(), packetdataserializer.readInt(), packetdataserializer.readInt());
+                        TileEntity tileentity1 = this.field_147369_b.field_70170_p.func_175625_s(blockposition);
 
-            try
-            {
-                CommandBlockBaseLogic commandblockbaselogic = null;
-                TileEntityCommandBlock tileentitycommandblock = null;
-                BlockPos blockpos1 = new BlockPos(packetbuffer3.readInt(), packetbuffer3.readInt(), packetbuffer3.readInt());
-                TileEntity tileentity2 = this.field_147369_b.field_70170_p.func_175625_s(blockpos1);
+                        if (tileentity1 instanceof TileEntityCommandBlock) {
+                            tileentitycommand = (TileEntityCommandBlock) tileentity1;
+                            commandblocklistenerabstract1 = tileentitycommand.func_145993_a();
+                        }
 
-                if (tileentity2 instanceof TileEntityCommandBlock)
-                {
-                    tileentitycommandblock = (TileEntityCommandBlock)tileentity2;
-                    commandblockbaselogic = tileentitycommandblock.func_145993_a();
-                }
+                        String s3 = packetdataserializer.func_150789_c(packetdataserializer.readableBytes());
+                        boolean flag1 = packetdataserializer.readBoolean();
+                        TileEntityCommandBlock.Mode tileentitycommand_type = TileEntityCommandBlock.Mode.valueOf(packetdataserializer.func_150789_c(16));
+                        boolean flag2 = packetdataserializer.readBoolean();
+                        boolean flag3 = packetdataserializer.readBoolean();
 
-                String s7 = packetbuffer3.func_150789_c(packetbuffer3.readableBytes());
-                boolean flag3 = packetbuffer3.readBoolean();
-                TileEntityCommandBlock.Mode tileentitycommandblock$mode = TileEntityCommandBlock.Mode.valueOf(packetbuffer3.func_150789_c(16));
-                boolean flag = packetbuffer3.readBoolean();
-                boolean flag1 = packetbuffer3.readBoolean();
+                        if (commandblocklistenerabstract1 != null) {
+                            EnumFacing enumdirection = (EnumFacing) this.field_147369_b.field_70170_p.func_180495_p(blockposition).func_177229_b(BlockCommandBlock.field_185564_a);
+                            IBlockState iblockdata;
 
-                if (commandblockbaselogic != null)
-                {
-                    EnumFacing enumfacing = (EnumFacing)this.field_147369_b.field_70170_p.func_180495_p(blockpos1).func_177229_b(BlockCommandBlock.field_185564_a);
+                            switch (tileentitycommand_type) {
+                                case SEQUENCE:
+                                    iblockdata = Blocks.field_185777_dd.func_176223_P();
+                                    this.field_147369_b.field_70170_p.func_180501_a(blockposition, iblockdata.func_177226_a(BlockCommandBlock.field_185564_a, enumdirection).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag2)), 2);
+                                    break;
 
-                    switch (tileentitycommandblock$mode)
-                    {
-                        case SEQUENCE:
-                            IBlockState iblockstate3 = Blocks.field_185777_dd.func_176223_P();
-                            this.field_147369_b.field_70170_p.func_180501_a(blockpos1, iblockstate3.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag)), 2);
-                            break;
-                        case AUTO:
-                            IBlockState iblockstate2 = Blocks.field_185776_dc.func_176223_P();
-                            this.field_147369_b.field_70170_p.func_180501_a(blockpos1, iblockstate2.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag)), 2);
-                            break;
-                        case REDSTONE:
-                            IBlockState iblockstate = Blocks.field_150483_bI.func_176223_P();
-                            this.field_147369_b.field_70170_p.func_180501_a(blockpos1, iblockstate.func_177226_a(BlockCommandBlock.field_185564_a, enumfacing).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag)), 2);
-                    }
+                                case AUTO:
+                                    iblockdata = Blocks.field_185776_dc.func_176223_P();
+                                    this.field_147369_b.field_70170_p.func_180501_a(blockposition, iblockdata.func_177226_a(BlockCommandBlock.field_185564_a, enumdirection).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag2)), 2);
+                                    break;
 
-                    tileentity2.func_145829_t();
-                    this.field_147369_b.field_70170_p.func_175690_a(blockpos1, tileentity2);
-                    commandblockbaselogic.func_145752_a(s7);
-                    commandblockbaselogic.func_175573_a(flag3);
+                                case REDSTONE:
+                                    iblockdata = Blocks.field_150483_bI.func_176223_P();
+                                    this.field_147369_b.field_70170_p.func_180501_a(blockposition, iblockdata.func_177226_a(BlockCommandBlock.field_185564_a, enumdirection).func_177226_a(BlockCommandBlock.field_185565_b, Boolean.valueOf(flag2)), 2);
+                            }
 
-                    if (!flag3)
-                    {
-                        commandblockbaselogic.func_145750_b((ITextComponent)null);
+                            tileentity1.func_145829_t();
+                            this.field_147369_b.field_70170_p.func_175690_a(blockposition, tileentity1);
+                            commandblocklistenerabstract1.func_145752_a(s3);
+                            commandblocklistenerabstract1.func_175573_a(flag1);
+                            if (!flag1) {
+                                commandblocklistenerabstract1.func_145750_b((ITextComponent) null);
+                            }
+
+                            tileentitycommand.func_184253_b(flag3);
+                            commandblocklistenerabstract1.func_145756_e();
+                            if (!StringUtils.isEmpty(s3)) {
+                                this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", new Object[] { s3}));
+                            }
+                        }
+                    } catch (Exception exception4) {
+                        net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t set command block", exception4);
+                        this.func_147360_c("Invalid command data!"); // CraftBukkit
                     }
+                } else {
+                    int k;
 
-                    tileentitycommandblock.func_184253_b(flag1);
-                    commandblockbaselogic.func_145756_e();
+                    if ("MC|Beacon".equals(s)) {
+                        if (this.field_147369_b.field_71070_bA instanceof ContainerBeacon) {
+                            try {
+                                packetdataserializer = p_147349_1_.func_180760_b();
+                                k = packetdataserializer.readInt();
+                                int l = packetdataserializer.readInt();
+                                ContainerBeacon containerbeacon = (ContainerBeacon) this.field_147369_b.field_71070_bA;
+                                Slot slot = containerbeacon.func_75139_a(0);
 
-                    if (!net.minecraft.util.StringUtils.func_151246_b(s7))
-                    {
-                        this.field_147369_b.func_145747_a(new TextComponentTranslation("advMode.setCommand.success", new Object[] {s7}));
-                    }
-                }
-            }
-            catch (Exception exception3)
-            {
-                field_147370_c.error((String)"Couldn\'t set command block", (Throwable)exception3);
-            }
-        }
-        else if ("MC|Beacon".equals(s))
-        {
-            if (this.field_147369_b.field_71070_bA instanceof ContainerBeacon)
-            {
-                try
-                {
-                    PacketBuffer packetbuffer4 = p_147349_1_.func_180760_b();
-                    int i1 = packetbuffer4.readInt();
-                    int k1 = packetbuffer4.readInt();
-                    ContainerBeacon containerbeacon = (ContainerBeacon)this.field_147369_b.field_71070_bA;
-                    Slot slot = containerbeacon.func_75139_a(0);
+                                if (slot.func_75216_d()) {
+                                    slot.func_75209_a(1);
+                                    IInventory iinventory = containerbeacon.func_180611_e();
 
-                    if (slot.func_75216_d())
-                    {
-                        slot.func_75209_a(1);
-                        IInventory iinventory = containerbeacon.func_180611_e();
-                        iinventory.func_174885_b(1, i1);
-                        iinventory.func_174885_b(2, k1);
-                        iinventory.func_70296_d();
-                    }
-                }
-                catch (Exception exception2)
-                {
-                    field_147370_c.error((String)"Couldn\'t set beacon", (Throwable)exception2);
-                }
-            }
-        }
-        else if ("MC|ItemName".equals(s))
-        {
-            if (this.field_147369_b.field_71070_bA instanceof ContainerRepair)
-            {
-                ContainerRepair containerrepair = (ContainerRepair)this.field_147369_b.field_71070_bA;
+                                    iinventory.func_174885_b(1, k);
+                                    iinventory.func_174885_b(2, l);
+                                    iinventory.func_70296_d();
+                                }
+                            } catch (Exception exception5) {
+                                net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t set beacon", exception5);
+                                this.func_147360_c("Invalid beacon data!"); // CraftBukkit
+                            }
+                        }
+                    } else if ("MC|ItemName".equals(s)) {
+                        if (this.field_147369_b.field_71070_bA instanceof ContainerRepair) {
+                            ContainerRepair containeranvil = (ContainerRepair) this.field_147369_b.field_71070_bA;
 
-                if (p_147349_1_.func_180760_b() != null && p_147349_1_.func_180760_b().readableBytes() >= 1)
-                {
-                    String s5 = ChatAllowedCharacters.func_71565_a(p_147349_1_.func_180760_b().func_150789_c(32767));
+                            if (p_147349_1_.func_180760_b() != null && p_147349_1_.func_180760_b().readableBytes() >= 1) {
+                                String s4 = ChatAllowedCharacters.func_71565_a(p_147349_1_.func_180760_b().func_150789_c(32767));
 
-                    if (s5.length() <= 30)
-                    {
-                        containerrepair.func_82850_a(s5);
-                    }
-                }
-                else
-                {
-                    containerrepair.func_82850_a("");
-                }
-            }
-        }
-        else if ("MC|Struct".equals(s))
-        {
-            if (!this.field_147369_b.func_189808_dh())
-            {
-                return;
-            }
+                                if (s4.length() <= 30) {
+                                    containeranvil.func_82850_a(s4);
+                                }
+                            } else {
+                                containeranvil.func_82850_a("");
+                            }
+                        }
+                    } else if ("MC|Struct".equals(s)) {
+                        if (!this.field_147369_b.func_189808_dh()) {
+                            return;
+                        }
 
-            PacketBuffer packetbuffer5 = p_147349_1_.func_180760_b();
+                        packetdataserializer = p_147349_1_.func_180760_b();
 
-            try
-            {
-                BlockPos blockpos = new BlockPos(packetbuffer5.readInt(), packetbuffer5.readInt(), packetbuffer5.readInt());
-                IBlockState iblockstate1 = this.field_147369_b.field_70170_p.func_180495_p(blockpos);
-                TileEntity tileentity1 = this.field_147369_b.field_70170_p.func_175625_s(blockpos);
+                        try {
+                            BlockPos blockposition1 = new BlockPos(packetdataserializer.readInt(), packetdataserializer.readInt(), packetdataserializer.readInt());
+                            IBlockState iblockdata1 = this.field_147369_b.field_70170_p.func_180495_p(blockposition1);
 
-                if (tileentity1 instanceof TileEntityStructure)
-                {
-                    TileEntityStructure tileentitystructure = (TileEntityStructure)tileentity1;
-                    int l1 = packetbuffer5.readByte();
-                    String s8 = packetbuffer5.func_150789_c(32);
-                    tileentitystructure.func_184405_a(TileEntityStructure.Mode.valueOf(s8));
-                    tileentitystructure.func_184404_a(packetbuffer5.func_150789_c(64));
-                    int i2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -32, 32);
-                    int j2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -32, 32);
-                    int k2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -32, 32);
-                    tileentitystructure.func_184414_b(new BlockPos(i2, j2, k2));
-                    int l2 = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, 32);
-                    int i3 = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, 32);
-                    int j = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, 32);
-                    tileentitystructure.func_184409_c(new BlockPos(l2, i3, j));
-                    String s2 = packetbuffer5.func_150789_c(32);
-                    tileentitystructure.func_184411_a(Mirror.valueOf(s2));
-                    String s3 = packetbuffer5.func_150789_c(32);
-                    tileentitystructure.func_184408_a(Rotation.valueOf(s3));
-                    tileentitystructure.func_184410_b(packetbuffer5.func_150789_c(128));
-                    tileentitystructure.func_184406_a(packetbuffer5.readBoolean());
-                    tileentitystructure.func_189703_e(packetbuffer5.readBoolean());
-                    tileentitystructure.func_189710_f(packetbuffer5.readBoolean());
-                    tileentitystructure.func_189718_a(MathHelper.func_76131_a(packetbuffer5.readFloat(), 0.0F, 1.0F));
-                    tileentitystructure.func_189725_a(packetbuffer5.func_179260_f());
-                    String s4 = tileentitystructure.func_189715_d();
+                            tileentity = this.field_147369_b.field_70170_p.func_175625_s(blockposition1);
+                            if (tileentity instanceof TileEntityStructure) {
+                                TileEntityStructure tileentitystructure = (TileEntityStructure) tileentity;
+                                byte b1 = packetdataserializer.readByte();
 
-                    if (l1 == 2)
-                    {
-                        if (tileentitystructure.func_184419_m())
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.save_success", new Object[] {s4}), false);
+                                s1 = packetdataserializer.func_150789_c(32);
+                                tileentitystructure.func_184405_a(TileEntityStructure.Mode.valueOf(s1));
+                                tileentitystructure.func_184404_a(packetdataserializer.func_150789_c(64));
+                                int i1 = MathHelper.func_76125_a(packetdataserializer.readInt(), -32, 32);
+                                int j1 = MathHelper.func_76125_a(packetdataserializer.readInt(), -32, 32);
+                                int k1 = MathHelper.func_76125_a(packetdataserializer.readInt(), -32, 32);
+
+                                tileentitystructure.func_184414_b(new BlockPos(i1, j1, k1));
+                                int l1 = MathHelper.func_76125_a(packetdataserializer.readInt(), 0, 32);
+                                int i2 = MathHelper.func_76125_a(packetdataserializer.readInt(), 0, 32);
+                                int j2 = MathHelper.func_76125_a(packetdataserializer.readInt(), 0, 32);
+
+                                tileentitystructure.func_184409_c(new BlockPos(l1, i2, j2));
+                                String s5 = packetdataserializer.func_150789_c(32);
+
+                                tileentitystructure.func_184411_a(Mirror.valueOf(s5));
+                                String s6 = packetdataserializer.func_150789_c(32);
+
+                                tileentitystructure.func_184408_a(Rotation.valueOf(s6));
+                                tileentitystructure.func_184410_b(packetdataserializer.func_150789_c(128));
+                                tileentitystructure.func_184406_a(packetdataserializer.readBoolean());
+                                tileentitystructure.func_189703_e(packetdataserializer.readBoolean());
+                                tileentitystructure.func_189710_f(packetdataserializer.readBoolean());
+                                tileentitystructure.func_189718_a(MathHelper.func_76131_a(packetdataserializer.readFloat(), 0.0F, 1.0F));
+                                tileentitystructure.func_189725_a(packetdataserializer.func_179260_f());
+                                String s7 = tileentitystructure.func_189715_d();
+
+                                if (b1 == 2) {
+                                    if (tileentitystructure.func_184419_m()) {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.save_success", new Object[] { s7})), false);
+                                    } else {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.save_failure", new Object[] { s7})), false);
+                                    }
+                                } else if (b1 == 3) {
+                                    if (!tileentitystructure.func_189709_F()) {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.load_not_found", new Object[] { s7})), false);
+                                    } else if (tileentitystructure.func_184412_n()) {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.load_success", new Object[] { s7})), false);
+                                    } else {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.load_prepare", new Object[] { s7})), false);
+                                    }
+                                } else if (b1 == 4) {
+                                    if (tileentitystructure.func_184417_l()) {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.size_success", new Object[] { s7})), false);
+                                    } else {
+                                        this.field_147369_b.func_146105_b((ITextComponent) (new TextComponentTranslation("structure_block.size_failure", new Object[0])), false);
+                                    }
+                                }
+
+                                tileentitystructure.func_70296_d();
+                                this.field_147369_b.field_70170_p.func_184138_a(blockposition1, iblockdata1, iblockdata1, 3);
+                            }
+                        } catch (Exception exception6) {
+                            net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t set structure block", exception6);
+                            this.func_147360_c("Invalid structure data!"); // CraftBukkit
                         }
-                        else
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.save_failure", new Object[] {s4}), false);
+                    } else if ("MC|PickItem".equals(s)) {
+                        packetdataserializer = p_147349_1_.func_180760_b();
+
+                        try {
+                            k = packetdataserializer.func_150792_a();
+                            this.field_147369_b.field_71071_by.func_184430_d(k);
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-2, this.field_147369_b.field_71071_by.field_70461_c, this.field_147369_b.field_71071_by.func_70301_a(this.field_147369_b.field_71071_by.field_70461_c)));
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-2, k, this.field_147369_b.field_71071_by.func_70301_a(k)));
+                            this.field_147369_b.field_71135_a.func_147359_a(new SPacketHeldItemChange(this.field_147369_b.field_71071_by.field_70461_c));
+                        } catch (Exception exception7) {
+                            net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t pick item", exception7);
+                            this.func_147360_c("Invalid pick item!"); // CraftBukkit
                         }
                     }
-                    else if (l1 == 3)
-                    {
-                        if (!tileentitystructure.func_189709_F())
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_not_found", new Object[] {s4}), false);
+                    // CraftBukkit start
+                    else if (p_147349_1_.func_149559_c().equals("REGISTER")) {
+                        try {
+                            String channels = p_147349_1_.func_180760_b().toString(com.google.common.base.Charsets.UTF_8);
+                            for (String channel : channels.split("\0")) {
+                                getPlayer().addChannel(channel);
+                            }
+                        } catch (Exception ex) {
+                            net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t register custom payload", ex);
+                            this.func_147360_c("Invalid payload REGISTER!");
                         }
-                        else if (tileentitystructure.func_184412_n())
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_success", new Object[] {s4}), false);
+                    } else if (p_147349_1_.func_149559_c().equals("UNREGISTER")) {
+                        try {
+                            String channels = p_147349_1_.func_180760_b().toString(com.google.common.base.Charsets.UTF_8);
+                            for (String channel : channels.split("\0")) {
+                                getPlayer().removeChannel(channel);
+                            }
+                        } catch (Exception ex) {
+                            net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t unregister custom payload", ex);
+                            this.func_147360_c("Invalid payload UNREGISTER!");
                         }
-                        else
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_prepare", new Object[] {s4}), false);
+                    } else {
+                        try {
+                            byte[] data = new byte[p_147349_1_.func_180760_b().readableBytes()];
+                            p_147349_1_.func_180760_b().readBytes(data);
+                            server.getMessenger().dispatchIncomingMessage((Player) field_147369_b.getBukkitEntity(), p_147349_1_.func_149559_c(), data);
+                        } catch (Exception ex) {
+                            net.minecraft.network.NetHandlerPlayServer.field_147370_c.error("Couldn\'t dispatch custom payload", ex);
+                            this.func_147360_c("Invalid custom payload!");
                         }
                     }
-                    else if (l1 == 4)
-                    {
-                        if (tileentitystructure.func_184417_l())
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.size_success", new Object[] {s4}), false);
-                        }
-                        else
-                        {
-                            this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.size_failure", new Object[0]), false);
-                        }
-                    }
-
-                    tileentitystructure.func_70296_d();
-                    this.field_147369_b.field_70170_p.func_184138_a(blockpos, iblockstate1, iblockstate1, 3);
+                    // CraftBukkit end
                 }
             }
-            catch (Exception exception1)
-            {
-                field_147370_c.error((String)"Couldn\'t set structure block", (Throwable)exception1);
-            }
         }
-        else if ("MC|PickItem".equals(s))
-        {
-            PacketBuffer packetbuffer6 = p_147349_1_.func_180760_b();
-
-            try
-            {
-                int j1 = packetbuffer6.func_150792_a();
-                this.field_147369_b.field_71071_by.func_184430_d(j1);
-                this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-2, this.field_147369_b.field_71071_by.field_70461_c, this.field_147369_b.field_71071_by.func_70301_a(this.field_147369_b.field_71071_by.field_70461_c)));
-                this.field_147369_b.field_71135_a.func_147359_a(new SPacketSetSlot(-2, j1, this.field_147369_b.field_71071_by.func_70301_a(j1)));
-                this.field_147369_b.field_71135_a.func_147359_a(new SPacketHeldItemChange(this.field_147369_b.field_71071_by.field_70461_c));
-            }
-            catch (Exception exception)
-            {
-                field_147370_c.error((String)"Couldn\'t pick item", (Throwable)exception);
-            }
-        }
     }
+    // CraftBukkit start - Add "isDisconnected" method
+    public final boolean isDisconnected() {
+        return !this.field_147369_b.joining && !this.field_147371_a.func_150724_d();
+    }
 }
